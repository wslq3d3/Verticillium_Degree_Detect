{
  "version": 3,
  "sources": ["../../@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js"],
  "sourcesContent": ["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = Object.freeze({})\r\n    ;\r\nObject.freeze([]) ;\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = Object.assign;\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\r\nfunction genPropsAccessExp(name) {\r\n    return identRE.test(name)\r\n        ? `__props.${name}`\r\n        : `__props[${JSON.stringify(name)}]`;\r\n}\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        ;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol(`Fragment` );\r\nconst TELEPORT = Symbol(`Teleport` );\r\nconst SUSPENSE = Symbol(`Suspense` );\r\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\r\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\r\nconst OPEN_BLOCK = Symbol(`openBlock` );\r\nconst CREATE_BLOCK = Symbol(`createBlock` );\r\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\r\nconst CREATE_VNODE = Symbol(`createVNode` );\r\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\r\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\r\nconst CREATE_TEXT = Symbol(`createTextVNode` );\r\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\r\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(`resolveDynamicComponent` );\r\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\r\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\r\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\r\nconst RENDER_LIST = Symbol(`renderList` );\r\nconst RENDER_SLOT = Symbol(`renderSlot` );\r\nconst CREATE_SLOTS = Symbol(`createSlots` );\r\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\r\nconst MERGE_PROPS = Symbol(`mergeProps` );\r\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\r\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\r\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\r\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\r\nconst TO_HANDLERS = Symbol(`toHandlers` );\r\nconst CAMELIZE = Symbol(`camelize` );\r\nconst CAPITALIZE = Symbol(`capitalize` );\r\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\r\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\r\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\r\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\r\nconst WITH_CTX = Symbol(`withCtx` );\r\nconst UNREF = Symbol(`unref` );\r\nconst IS_REF = Symbol(`isRef` );\r\nconst WITH_MEMO = Symbol(`withMemo` );\r\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\n\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 87 && token <= 122;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 86;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 52 && token <= 122;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 52 && token <= 126;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 27 && token <= 31;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsLoop(token) {\n  return token >= 84 && token <= 86;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 52 && token <= 86;\n}\nfunction tokenIsOperator(token) {\n  return token >= 35 && token <= 53;\n}\nfunction tokenIsPostfix(token) {\n  return token === 32;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 111 && token <= 113;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 114 && token <= 120;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 51;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\nfunction isTokenType(obj) {\n  return typeof obj === \"number\";\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[132].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 129;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(129);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(128, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(128, this.readWord1());\n    } else {\n      this.finishOp(25, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(29, 2);\n    } else {\n      this.finishOp(50, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(26, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 49 : 48;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 51;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 31 : 28;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(28, 3);\n      } else {\n        this.finishOp(code === 124 ? 37 : 38, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(35, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(28, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? 39 : 41, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(40, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(32, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(28, 2);\n    } else {\n      this.finishOp(47, 1);\n    }\n  }\n\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(28, 3);\n        return;\n      }\n\n      this.finishOp(46, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(45, 2);\n      return;\n    }\n\n    this.finishOp(43, 1);\n  }\n\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(28, size + 1);\n        return;\n      }\n\n      this.finishOp(46, size);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(45, 2);\n      return;\n    }\n\n    this.finishOp(44, 1);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(42, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n\n    this.finishOp(code === 61 ? 27 : 33, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(28, 3);\n      } else {\n        this.finishOp(36, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(22);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n        this.readToken_lt();\n        return;\n\n      case 62:\n        this.readToken_gt();\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(34, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(24);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(127, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(125, str);\n      return;\n    }\n\n    this.finishToken(124, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(125, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(126, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(124, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(123, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(20)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(23);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(22);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(20, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(122, word);\n    }\n  }\n\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\n    }\n  }\n\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n\n    switch (type) {\n      case 8:\n        context.pop();\n        break;\n\n      case 5:\n      case 7:\n      case 23:\n        context.push(types.brace);\n        break;\n\n      case 22:\n        if (context[context.length - 1] === types.template) {\n          context.pop();\n        } else {\n          context.push(types.template);\n        }\n\n        break;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  expectContextual(token, template) {\n    if (!this.eatContextual(token)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(129) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (isTokenType(messageOrType)) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${tokenLabelName(messageOrType)}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n    const hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\n\n    if (!andThrow) {\n      return hasErrors;\n    } else if (hasErrors) {\n      if (shorthandAssign >= 0) {\n        this.unexpected(shorthandAssign);\n      }\n\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\n      }\n\n      if (optionalParameters >= 0) {\n        this.unexpected(optionalParameters);\n      }\n    }\n  }\n\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 91;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== 123 && type !== 13 && type !== 26) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(101);\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(10)) {\n      node.value = this.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(48)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(48)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.match(43)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(74)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(62)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(117)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(120)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(121)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(119)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(76)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(123)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(77)) {\n        this.next();\n\n        if (!this.isContextual(120) && !this.match(81)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(115, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(76);\n\n    if (this.eat(59)) {\n      if (this.match(62) || this.match(74)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(69) || this.isLet() || (this.isContextual(120) || this.isContextual(119)) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(68) || this.match(62) || this.match(74) || this.isContextual(121)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(49) || this.match(5) || this.isContextual(119) || this.isContextual(120) || this.isContextual(121)) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(102);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(75)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n\n    if (this.isContextual(108)) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    if (this.isContextual(104)) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(27);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(120);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(27);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(27)) {\n      this.eat(27);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.match(43) || this.match(132)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    } while (!this.match(44));\n\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(43);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.match(44)) {\n      node.params.push(this.flowParseType());\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(43);\n\n    while (!this.match(44)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    }\n\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(119);\n    node.extends = [];\n\n    if (this.eat(75)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(124) || this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n\n    if (this.match(43) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(10);\n\n    if (this.match(72)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(109)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(98)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(0)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(43)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(92) || this.isContextual(97)) {\n          const lookahead = this.lookahead();\n\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(8) && !this.match(9)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.match(43) || this.match(10)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(17)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(81);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 72;\n\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(17)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(72)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case 43:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 10:\n        this.next();\n\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(72)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 123:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case 79:\n      case 80:\n        node.value = this.match(79);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case 47:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(124)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(125)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case 124:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case 125:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case 82:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case 78:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case 72:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case 49:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      case 81:\n        return this.flowParseTypeofType();\n\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(119)) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(41);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(41)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(39);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(39)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 122 && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(47)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.isContextual(119)) {\n      const lookahead = this.lookahead();\n\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(74) || tokenIsIdentifier(this.state.type) || this.match(62) || this.match(68) || this.match(76)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\n      return !this.state.containsEsc;\n    }\n\n    return super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\n      return this.state.containsEsc;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(116)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(120)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(121)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(119)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(120) && this.lookahead().type === 49) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(115)) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(122, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 44 : 43, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.match(43) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(43)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(43)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(43)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(104)) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.match(43)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.match(43) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(27) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(81)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(120)) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n\n      if (kind === \"type\" && type === 49) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(type) || type === 5 || type === 49) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(87) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(87)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 72:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.match(43)) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(43)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(43)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = this.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.match(43)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(12) || this.match(8);\n\n    switch (this.state.type) {\n      case 124:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 123:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 79:\n      case 80:\n        {\n          const literal = this.parseBooleanLiteral(this.match(79));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(27) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(95)) {\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(132);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(131, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(123, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(130, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(130)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case 132:\n      case 123:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(5)) {\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(27) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(133)) {\n      this.expect(133);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(50) && !this.match(133)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(50);\n    this.expect(133);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(133)) {\n      this.expect(133);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(133);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 132:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(50)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case 131:\n            children.push(this.parseExprAtom());\n            break;\n\n          case 5:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.match(43)) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(131)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(132)) {\n      return this.jsxParseElement();\n    } else if (this.match(43) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(132);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(133);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(132);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === 50 && prevType === 132) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 132) {\n      context.push(types.j_expr, types.j_oTag);\n    } else if (type === 133) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === 50 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(49) || this.match(21) || this.match(128) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n\n      case \"HeritageClauseElement\":\n        return this.match(5);\n\n      case \"TupleElementTypes\":\n        return this.match(3);\n\n      case \"TypeParametersOrArguments\":\n        return this.match(44);\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      trailingCommaPos = -1;\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(12);\n      }\n\n      return undefined;\n    }\n\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(43);\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(44);\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(77);\n    this.expect(10);\n\n    if (!this.match(123)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(11);\n\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(81);\n\n    if (this.match(77)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(75);\n    node.default = this.tsEatThenParseType(27);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.match(43)) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.match(43) || this.match(132)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === 69) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n\n    return false;\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(10) || this.match(43)) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.match(43)) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(10) || this.match(43)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(71)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(10) || this.match(43)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(47)) {\n      return this.isContextual(112);\n    }\n\n    if (this.isContextual(112)) {\n      this.next();\n    }\n\n    if (!this.match(0)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(52);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(52);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n\n    if (this.match(47)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(112);\n    } else if (this.eatContextual(112)) {\n      node.readonly = true;\n    }\n\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(87) ? this.tsParseType() : null;\n    this.expect(3);\n\n    if (this.match(47)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(19, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 124:\n        case 125:\n        case 123:\n        case 79:\n        case 80:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 123:\n      case 124:\n      case 125:\n      case 79:\n      case 80:\n        return this.tsParseLiteralTypeNode();\n\n      case 47:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== 124 && nextToken.type !== 125) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case 72:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case 81:\n        return this.tsParseTypeQuery();\n\n      case 77:\n        return this.tsParseImportType();\n\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case 0:\n        return this.tsParseTupleType();\n\n      case 10:\n        return this.tsParseParenthesizedType();\n\n      case 22:\n        return this.tsParseTemplateLiteralType();\n\n      default:\n        {\n          const {\n            type\n          } = this.state;\n\n          if (tokenIsIdentifier(type) || type === 82 || type === 78) {\n            const nodeType = type === 82 ? \"TSVoidKeyword\" : type === 78 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(106);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(106) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 41);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 39);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.match(43)) {\n      return true;\n    }\n\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(72)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(5)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(5)) {\n          ++braceStackCounter;\n        } else if (this.match(8)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(0)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(0)) {\n          ++braceStackCounter;\n        } else if (this.match(3)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(27)) {\n        return true;\n      }\n\n      if (this.match(11)) {\n        this.next();\n\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(72)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 100) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!tokenIsIdentifier(this.state.type) && !this.match(72)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(75)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(17);\n    node.trueType = this.tsParseType();\n    this.expect(14);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(114) && this.lookahead().type === 71;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(71)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n    }\n\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expect(44);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(75)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(27);\n\n      if (this.isContextual(105) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(27)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(103)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(123)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(27);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(110) && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(110);\n    this.expect(10);\n\n    if (!this.match(123)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(93)) {\n      starttype = 68;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case 62:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case 74:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case 69:\n          if (this.match(69) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(69);\n            this.expectContextual(116);\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case 68:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case 103:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n\n        default:\n          {\n            if (tokenIsIdentifier(starttype)) {\n              return this.tsParseDeclaration(nany, this.state.value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(74) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || tokenIsIdentifier(this.state.type)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(123)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.match(43)) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(43);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expect(44);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(33)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.match(43)) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(10)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(10)) {\n            node.arguments = this.parseCallExpressionArguments(11, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(22)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, 10);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.match(43)) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(10)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (tokenOperatorPrecedence(52) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(87)) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (tokenIsIdentifier(this.state.type) || this.match(49) || this.match(5)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(120) && ahead.type !== 12 && ahead.type !== 91 && ahead.type !== 27) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 27) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(77)) {\n      this.next();\n\n      if (this.isContextual(120) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(27)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(87)) {\n      const decl = node;\n      this.expectContextual(118);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(120) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(114) && this.lookahead().type === 74;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.match(119)) {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === 69) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === 116) {\n        const node = this.startNode();\n        this.next();\n        this.expectContextual(116);\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(98) && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(115);\n\n    if (isDeclare && (this.isContextual(115) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (tokenIsIdentifier(this.state.type)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(104)) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(33)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(27)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(27)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(43)) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(104)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(33)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(43)) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.match(43)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 72:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(43)) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, 10);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.match(43) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(33) || this.match(14) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(44, 1);\n      }\n\n      if (code === 60) {\n        return this.finishOp(43, 1);\n      }\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 43) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 44) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(43)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(74)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(119)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 74);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\n  }\n\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const pos = leftOfAs.start;\n\n    if (this.isContextual(87)) {\n      const firstAs = this.parseIdentifier();\n\n      if (this.isContextual(87)) {\n        const secondAs = this.parseIdentifier();\n\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = this.parseIdentifier();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = this.parseIdentifier();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      leftOfAs = this.parseIdentifier();\n    }\n\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\n    }\n\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n    if (canParseAsKeyword && this.eatContextual(87)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n\n    if (isImport) {\n      this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n    }\n  }\n\n});\n\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(134)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(134);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(134, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(93)) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === 134) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(75) || this.match(134) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(91) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(59)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(134), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(91) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(91);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(48)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.next();\n\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(24) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(24)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      start: startPos,\n      startLoc\n    } = this.state;\n\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    prop.method = false;\n    this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\n    return prop;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(27)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(12)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(129)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(12)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(99)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    const {\n      type\n    } = this.state;\n\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(27)) {\n        node.left = this.toAssignable(left, true);\n\n        if (refExpressionErrors.doubleProto >= startPos) {\n          refExpressionErrors.doubleProto = -1;\n        }\n\n        if (refExpressionErrors.shorthandAssign >= startPos) {\n          refExpressionErrors.shorthandAssign = -1;\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(128) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= tokenOperatorPrecedence(52) || !this.prodParam.hasIn || !this.match(52)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    const op = this.state.type;\n\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(52))) {\n      let prec = tokenOperatorPrecedence(op);\n\n      if (prec > minPrec) {\n        if (op === 35) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 37 || op === 38;\n        const coalesce = op === 36;\n\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(38);\n        }\n\n        this.next();\n\n        if (op === 35 && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.state.type === 90 && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === 37 || nextOp === 38) || logical && nextOp === 36) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case 35:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(99)) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(51)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(90);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(32);\n    const node = this.startNode();\n\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(66)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(83);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(48);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(15)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(22)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(18)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(128) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(3);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    const {\n      type\n    } = this.state;\n\n    switch (type) {\n      case 73:\n        return this.parseSuper();\n\n      case 77:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(10)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case 72:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case 84:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case 50:\n      case 29:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case 124:\n        return this.parseNumericLiteral(this.state.value);\n\n      case 125:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case 126:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case 123:\n        return this.parseStringLiteral(this.state.value);\n\n      case 78:\n        return this.parseNullLiteral();\n\n      case 79:\n        return this.parseBooleanLiteral(true);\n\n      case 80:\n        return this.parseBooleanLiteral(false);\n\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n\n      case 62:\n        return this.parseFunctionOrFunctionSent();\n\n      case 24:\n        this.parseDecorators();\n\n      case 74:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case 71:\n        return this.parseNewOrNewTarget();\n\n      case 22:\n        return this.parseTemplate(false);\n\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case 128:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case 31:\n        {\n          return this.parseTopicReferenceThenEqualsSign(48, \"%\");\n        }\n\n      case 30:\n        {\n          return this.parseTopicReferenceThenEqualsSign(40, \"^\");\n        }\n\n      case 40:\n      case 48:\n      case 25:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      case 43:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(117) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n\n            if (type === 62) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 84) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n\n    }\n  }\n\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc.column--;\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const start = this.state.start;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenLabelName(tokenType) === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === 25;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(19);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n\n      if (this.match(96)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(94)) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(11)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(21)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(18)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(22);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(23);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(8);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      let prop;\n\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(49));\n  }\n\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(24)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(24)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(49);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(49);\n        this.parsePropertyName(prop);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(49)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(27) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 124:\n            key = this.parseNumericLiteral(value);\n            break;\n\n          case 123:\n            key = this.parseStringLiteral(value);\n            break;\n\n          case 125:\n            key = this.parseBigIntLiteral(value);\n            break;\n\n          case 126:\n            key = this.parseDecimalLiteral(value);\n            break;\n\n          case 128:\n            {\n              const privateKeyPos = this.state.start + 1;\n              this.raise(privateKeyPos, ErrorMessages.UnexpectedPrivateField);\n              key = this.parsePrivateName();\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      prop.key = key;\n\n      if (type !== 128) {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(0) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.expressionScope.exit();\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(122);\n      }\n    } else {\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(49)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(47) || this.match(10) || this.match(0) || this.match(22) || this.match(127) || this.match(50) || this.hasPlugin(\"v8intrinsic\") && this.match(48);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(49);\n\n      switch (this.state.type) {\n        case 13:\n        case 129:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(19)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(5);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(8);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n  parsePropertyNamePrefixOperator(prop) {}\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n\n    if (type === 128) {\n      {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: getExportedToken(25),\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: getExportedToken(122),\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n        i++;\n        continue;\n      }\n    }\n\n    if (typeof type === \"number\") {\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = 129, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(26)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(93)) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(24)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = 68;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case 54:\n        return this.parseBreakContinueStatement(node, true);\n\n      case 57:\n        return this.parseBreakContinueStatement(node, false);\n\n      case 58:\n        return this.parseDebuggerStatement(node);\n\n      case 84:\n        return this.parseDoStatement(node);\n\n      case 85:\n        return this.parseForStatement(node);\n\n      case 62:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case 74:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case 63:\n        return this.parseIfStatement(node);\n\n      case 64:\n        return this.parseReturnStatement(node);\n\n      case 65:\n        return this.parseSwitchStatement(node);\n\n      case 66:\n        return this.parseThrowStatement(node);\n\n      case 67:\n        return this.parseTryStatement(node);\n\n      case 69:\n      case 68:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case 86:\n        return this.parseWhileStatement(node);\n\n      case 70:\n        return this.parseWithStatement(node);\n\n      case 5:\n        return this.parseBlock();\n\n      case 13:\n        return this.parseEmptyStatement(node);\n\n      case 77:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case 76:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === 77) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(74);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(24)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(76)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(10)) {\n        expr = this.parseExpression();\n        this.expect(11);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(86);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(90)) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n\n    if (this.match(13)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(93);\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(68) || this.match(69) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(52) || this.isContextual(95)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithAsync = this.isContextual(89);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(95);\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(52)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(60) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(55) || this.match(59)) {\n        const isCase = this.match(55);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(56)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(61) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(65) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(5);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(52);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(27)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(52) || this.isContextual(95))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(52) || this.isContextual(95)))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(49) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(49);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(27) || this.match(13) || this.match(8);\n  }\n\n  isClassMethod() {\n    return this.match(10);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(24)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(98);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(49)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(128);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(128);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(49);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(128);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(49) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(128);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === 122 || type === 123) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === 128) {\n      if (value === \"constructor\") {\n        this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n      }\n\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(27) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(75) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(59)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, 5);\n  }\n\n  eatExportStar(node) {\n    return this.eat(49);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(87)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(89)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(62) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(74)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(24)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(69) || this.match(68) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsIdentifier(type)) {\n      if (type === 89 && !this.state.containsEsc || type === 93) {\n        return false;\n      }\n\n      if ((type === 120 || type === 119) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n\n        if (tokenIsIdentifier(nextType) && nextType !== 91 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(59)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(59) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(91)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 24) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return type === 68 || type === 69 || type === 62 || type === 74 || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const isMaybeTypeOnly = this.isContextual(120);\n      const isString = this.match(123);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(87)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n\n  parseModuleExportName() {\n    if (this.match(123)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(123)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(91);\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(123)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(8)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(123)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(14);\n\n      if (!this.match(123)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(70) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(14);\n\n      if (!this.match(123)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(88) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(49)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(87);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(123);\n      const isMaybeTypeOnly = this.isContextual(120);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (this.eatContextual(87)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nconst tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nvar parse_1 = parse;\nvar parseExpression_1 = parseExpression;\nvar tokTypes_1 = tokTypes;\n//# sourceMappingURL=index.js.map\n\n/*#__PURE__*/Object.defineProperty({\n\tparse: parse_1,\n\tparseExpression: parseExpression_1,\n\ttokTypes: tokTypes_1\n}, '__esModule', {value: true});\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n        try {\r\n            let ret = parseExpression_1(path, {\r\n                plugins: context.expressionPlugins\r\n            });\r\n            if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n                ret = ret.expression;\r\n            }\r\n            return (ret.type === 'MemberExpression' ||\r\n                ret.type === 'OptionalMemberExpression' ||\r\n                ret.type === 'Identifier');\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\nconst isMemberExpression = isMemberExpressionNode;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert$1(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if (enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: true\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                false &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + (` /* HOISTED */` );\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    // except set custom directives.\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */) {\r\n                            constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                            return 0 /* NOT_CONSTANT */;\r\n                        }\r\n                    }\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if (!context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if (removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n            // identifier tracking only happens in non-browser builds.\r\n            {\r\n                if (isString(exp)) {\r\n                    addId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(addId);\r\n                }\r\n                else if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                    addId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        removeIdentifiers(exp) {\r\n            {\r\n                if (isString(exp)) {\r\n                    removeId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(removeId);\r\n                }\r\n                else if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                    removeId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    function addId(id) {\r\n        const { identifiers } = context;\r\n        if (identifiers[id] === undefined) {\r\n            identifiers[id] = 0;\r\n        }\r\n        identifiers[id]++;\r\n    }\r\n    function removeId(id) {\r\n        context.identifiers[id]--;\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if (children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nvar encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nvar decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\nvar base64 = {\n\tencode: encode,\n\tdecode: decode\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nvar encode$1 = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nvar decode$1 = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\nvar base64Vlq = {\n\tencode: encode$1,\n\tdecode: decode$1\n};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\nvar util = createCommonjsModule(function (module, exports) {\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n});\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nvar ArraySet_1 = ArraySet;\n\nvar arraySet = {\n\tArraySet: ArraySet_1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nvar MappingList_1 = MappingList;\n\nvar mappingList = {\n\tMappingList: MappingList_1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\nvar ArraySet$1 = arraySet.ArraySet;\nvar MappingList$1 = mappingList.MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet$1();\n  this._names = new ArraySet$1();\n  this._mappings = new MappingList$1();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet$1();\n    var newNames = new ArraySet$1();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = '';\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64Vlq.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64Vlq.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64Vlq.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64Vlq.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64Vlq.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nvar SourceMapGenerator_1 = SourceMapGenerator;\n\nvar sourceMapGenerator = {\n\tSourceMapGenerator: SourceMapGenerator_1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\nvar binarySearch = createCommonjsModule(function (module, exports) {\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n});\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nvar quickSort_1 = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\nvar quickSort = {\n\tquickSort: quickSort_1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\nvar ArraySet$2 = arraySet.ArraySet;\n\nvar quickSort$1 = quickSort.quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n};\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nvar SourceMapConsumer_1 = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet$2.fromArray(names.map(String), true);\n  this._sources = ArraySet$2.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet$2.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet$2.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort$1(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64Vlq.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort$1(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort$1(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nvar BasicSourceMapConsumer_1 = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet$2();\n  this._names = new ArraySet$2();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort$1(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort$1(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nvar IndexedSourceMapConsumer_1 = IndexedSourceMapConsumer;\n\nvar sourceMapConsumer = {\n\tSourceMapConsumer: SourceMapConsumer_1,\n\tBasicSourceMapConsumer: BasicSourceMapConsumer_1,\n\tIndexedSourceMapConsumer: IndexedSourceMapConsumer_1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$1 = sourceMapGenerator.SourceMapGenerator;\n\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator$1(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nvar SourceNode_1 = SourceNode;\n\nvar sourceNode = {\n\tSourceNode: SourceNode_1\n};\n\n/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$2 = sourceMapGenerator.SourceMapGenerator;\nvar SourceMapConsumer$1 = sourceMapConsumer.SourceMapConsumer;\nvar SourceNode$1 = sourceNode.SourceNode;\n\nvar sourceMap = {\n\tSourceMapGenerator: SourceMapGenerator$2,\n\tSourceMapConsumer: SourceMapConsumer$1,\n\tSourceNode: SourceNode$1\n};\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n            if (context.map) {\r\n                if (node) {\r\n                    let name;\r\n                    if (node.type === 4 /* SIMPLE_EXPRESSION */ && !node.isStatic) {\r\n                        const content = node.content.replace(/^_ctx\\./, '');\r\n                        if (content !== node.content && isSimpleIdentifier(content)) {\r\n                            name = content;\r\n                        }\r\n                    }\r\n                    addMapping(node.loc.start, name);\r\n                }\r\n                advancePositionWithMutation(context, code);\r\n                if (node && node.loc !== locStub) {\r\n                    addMapping(node.loc.end);\r\n                }\r\n            }\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    function addMapping(loc, name) {\r\n        context.map.addMapping({\r\n            name,\r\n            source: context.filename,\r\n            original: {\r\n                line: loc.line,\r\n                column: loc.column - 1 // source-map column is 0 based\r\n            },\r\n            generated: {\r\n                line: context.line,\r\n                column: context.column - 1\r\n            }\r\n        });\r\n    }\r\n    if (sourceMap) {\r\n        // lazy require source-map implementation, only in non-browser builds\r\n        context.map = new SourceMapGenerator$2();\r\n        context.map.setSourceContent(filename, context.source);\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    const genScopeId = scopeId != null && mode === 'module';\r\n    const isSetupInlined = !!options.inline;\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = isSetupInlined\r\n        ? createCodegenContext(ast, options)\r\n        : context;\r\n    if (mode === 'module') {\r\n        genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\r\n    }\r\n    else {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    if (options.bindingMetadata && !options.inline) {\r\n        // binding optimization args\r\n        args.push('$props', '$setup', '$data', '$options');\r\n    }\r\n    const signature = options.isTS\r\n        ? args.map(arg => `${arg}: any`).join(',')\r\n        : args.join(', ');\r\n    if (isSetupInlined) {\r\n        push(`(${signature}) => {`);\r\n    }\r\n    else {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: isSetupInlined ? preambleContext.code : ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = ssr\r\n        ? `require(${JSON.stringify(runtimeModuleName)})`\r\n        : runtimeGlobalName;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        if (prefixIdentifiers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`);\r\n        }\r\n        else {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    // generate variables for ssr helpers\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        // ssr guarantees prefixIdentifier: true\r\n        push(`const { ${ast.ssrHelpers\r\n            .map(aliasHelper)\r\n            .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`);\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genModulePreamble(ast, context, genScopeId, inline) {\r\n    const { push, newline, optimizeImports, runtimeModuleName, ssrRuntimeModuleName } = context;\r\n    if (genScopeId && ast.hoists.length) {\r\n        ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID);\r\n    }\r\n    // generate import statements for helpers\r\n    if (ast.helpers.length) {\r\n        if (optimizeImports) {\r\n            // when bundled with webpack with code-split, calling an import binding\r\n            // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n            // incurring both payload size increase and potential perf overhead.\r\n            // therefore we assign the imports to variables (which is a constant ~50b\r\n            // cost per-component instead of scaling with template size)\r\n            push(`import { ${ast.helpers\r\n                .map(s => helperNameMap[s])\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n            push(`\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n                .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n                .join(', ')}\\n`);\r\n        }\r\n        else {\r\n            push(`import { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n        }\r\n    }\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        push(`import { ${ast.ssrHelpers\r\n            .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n            .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`);\r\n    }\r\n    if (ast.imports.length) {\r\n        genImports(ast.imports, context);\r\n        newline();\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    if (!inline) {\r\n        push(`export `);\r\n    }\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    const genScopeId = scopeId != null && mode !== 'function';\r\n    newline();\r\n    // generate inlined withScopeId helper\r\n    if (genScopeId) {\r\n        push(`const _withScopeId = n => (${helper(PUSH_SCOPE_ID)}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`);\r\n        newline();\r\n    }\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            const needScopeIdWrapper = genScopeId && exp.type === 13 /* VNODE_CALL */;\r\n            push(`const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`);\r\n            genNode(exp, context);\r\n            if (needScopeIdWrapper) {\r\n                push(`)`);\r\n            }\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction genImports(importsOptions, context) {\r\n    if (!importsOptions.length) {\r\n        return;\r\n    }\r\n    importsOptions.forEach(imports => {\r\n        context.push(`import `);\r\n        genNode(imports.exp, context);\r\n        context.push(` from '${imports.path}'`);\r\n        context.newline();\r\n    });\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            assert$1(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            genTemplateLiteral(node, context);\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            genIfStatement(node, context);\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            genAssignmentExpression(node, context);\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            genSequenceExpression(node, context);\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            genReturnStatement(node, context);\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            {\r\n                assert$1(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\r\nfunction genTemplateLiteral(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    push('`');\r\n    const l = node.elements.length;\r\n    const multilines = l > 3;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = node.elements[i];\r\n        if (isString(e)) {\r\n            push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'));\r\n        }\r\n        else {\r\n            push('${');\r\n            if (multilines)\r\n                indent();\r\n            genNode(e, context);\r\n            if (multilines)\r\n                deindent();\r\n            push('}');\r\n        }\r\n    }\r\n    push('`');\r\n}\r\nfunction genIfStatement(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { test, consequent, alternate } = node;\r\n    push(`if (`);\r\n    genNode(test, context);\r\n    push(`) {`);\r\n    indent();\r\n    genNode(consequent, context);\r\n    deindent();\r\n    push(`}`);\r\n    if (alternate) {\r\n        push(` else `);\r\n        if (alternate.type === 23 /* JS_IF_STATEMENT */) {\r\n            genIfStatement(alternate, context);\r\n        }\r\n        else {\r\n            push(`{`);\r\n            indent();\r\n            genNode(alternate, context);\r\n            deindent();\r\n            push(`}`);\r\n        }\r\n    }\r\n}\r\nfunction genAssignmentExpression(node, context) {\r\n    genNode(node.left, context);\r\n    context.push(` = `);\r\n    genNode(node.right, context);\r\n}\r\nfunction genSequenceExpression(node, context) {\r\n    context.push(`(`);\r\n    genNodeList(node.expressions, context);\r\n    context.push(`)`);\r\n}\r\nfunction genReturnStatement({ returns }, context) {\r\n    context.push(`return `);\r\n    if (isArray(returns)) {\r\n        genNodeListAsArray(returns, context);\r\n    }\r\n    else {\r\n        genNode(returns, context);\r\n    }\r\n}\n\n// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk$1(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    const rootExp = root.type === 'Program' &&\r\n        root.body[0].type === 'ExpressionStatement' &&\r\n        root.body[0].expression;\r\n    walk$1(root, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier') {\r\n                const isLocal = !!knownIds[node.name];\r\n                const isRefed = isReferencedIdentifier(node, parent, parentStack);\r\n                if (includeAll || (isRefed && !isLocal)) {\r\n                    onIdentifier(node, parent, parentStack, isRefed, isLocal);\r\n                }\r\n            }\r\n            else if (node.type === 'ObjectProperty' &&\r\n                parent.type === 'ObjectPattern') {\r\n                node.inPattern = true;\r\n            }\r\n            else if (isFunctionType(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n            else if (node.type === 'BlockStatement') {\r\n                // #3445 record block-level local variables\r\n                walkBlockDeclarations(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if (node !== rootExp && node.scopeIds) {\r\n                for (const id of node.scopeIds) {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    if (!parent) {\r\n        return true;\r\n    }\r\n    // is a special keyword but parsed as identifier\r\n    if (id.name === 'arguments') {\r\n        return false;\r\n    }\r\n    if (isReferenced(id, parent)) {\r\n        return true;\r\n    }\r\n    // babel's isReferenced check returns false for ids being assigned to, so we\r\n    // need to cover those cases here\r\n    switch (parent.type) {\r\n        case 'AssignmentExpression':\r\n        case 'AssignmentPattern':\r\n            return true;\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return isInDestructureAssignment(parent, parentStack);\r\n    }\r\n    return false;\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nfunction markScopeIdentifier(node, child, knownIds) {\r\n    const { name } = child;\r\n    if (node.scopeIds && node.scopeIds.has(name)) {\r\n        return;\r\n    }\r\n    if (name in knownIds) {\r\n        knownIds[name]++;\r\n    }\r\n    else {\r\n        knownIds[name] = 1;\r\n    }\r\n    (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\n/**\r\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\r\n * To avoid runtime dependency on @babel/types (which includes process references)\r\n * This file should not change very often in babel but we may need to keep it\r\n * up-to-date from time to time.\r\n *\r\n * https://github.com/babel/babel/blob/main/LICENSE\r\n *\r\n */\r\nfunction isReferenced(node, parent, grandparent) {\r\n    switch (parent.type) {\r\n        // yes: PARENT[NODE]\r\n        // yes: NODE.child\r\n        // no: parent.NODE\r\n        case 'MemberExpression':\r\n        case 'OptionalMemberExpression':\r\n            if (parent.property === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return parent.object === node;\r\n        case 'JSXMemberExpression':\r\n            return parent.object === node;\r\n        // no: let NODE = init;\r\n        // yes: let id = NODE;\r\n        case 'VariableDeclarator':\r\n            return parent.init === node;\r\n        // yes: () => NODE\r\n        // no: (NODE) => {}\r\n        case 'ArrowFunctionExpression':\r\n            return parent.body === node;\r\n        // no: class { #NODE; }\r\n        // no: class { get #NODE() {} }\r\n        // no: class { #NODE() {} }\r\n        // no: class { fn() { return this.#NODE; } }\r\n        case 'PrivateName':\r\n            return false;\r\n        // no: class { NODE() {} }\r\n        // yes: class { [NODE]() {} }\r\n        // no: class { foo(NODE) {} }\r\n        case 'ClassMethod':\r\n        case 'ClassPrivateMethod':\r\n        case 'ObjectMethod':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return false;\r\n        // yes: { [NODE]: \"\" }\r\n        // no: { NODE: \"\" }\r\n        // depends: { NODE }\r\n        // depends: { key: NODE }\r\n        case 'ObjectProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            // parent.value === node\r\n            return !grandparent || grandparent.type !== 'ObjectPattern';\r\n        // no: class { NODE = value; }\r\n        // yes: class { [NODE] = value; }\r\n        // yes: class { key = NODE; }\r\n        case 'ClassProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n        case 'ClassPrivateProperty':\r\n            return parent.key !== node;\r\n        // no: class NODE {}\r\n        // yes: class Foo extends NODE {}\r\n        case 'ClassDeclaration':\r\n        case 'ClassExpression':\r\n            return parent.superClass === node;\r\n        // yes: left = NODE;\r\n        // no: NODE = right;\r\n        case 'AssignmentExpression':\r\n            return parent.right === node;\r\n        // no: [NODE = foo] = [];\r\n        // yes: [foo = NODE] = [];\r\n        case 'AssignmentPattern':\r\n            return parent.right === node;\r\n        // no: NODE: for (;;) {}\r\n        case 'LabeledStatement':\r\n            return false;\r\n        // no: try {} catch (NODE) {}\r\n        case 'CatchClause':\r\n            return false;\r\n        // no: function foo(...NODE) {}\r\n        case 'RestElement':\r\n            return false;\r\n        case 'BreakStatement':\r\n        case 'ContinueStatement':\r\n            return false;\r\n        // no: function NODE() {}\r\n        // no: function foo(NODE) {}\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n            return false;\r\n        // no: export NODE from \"foo\";\r\n        // no: export * as NODE from \"foo\";\r\n        case 'ExportNamespaceSpecifier':\r\n        case 'ExportDefaultSpecifier':\r\n            return false;\r\n        // no: export { foo as NODE };\r\n        // yes: export { NODE as foo };\r\n        // no: export { NODE as foo } from \"foo\";\r\n        case 'ExportSpecifier':\r\n            // @ts-expect-error\r\n            if (grandparent === null || grandparent === void 0 ? void 0 : grandparent.source) {\r\n                return false;\r\n            }\r\n            return parent.local === node;\r\n        // no: import NODE from \"foo\";\r\n        // no: import * as NODE from \"foo\";\r\n        // no: import { NODE as foo } from \"foo\";\r\n        // no: import { foo as NODE } from \"foo\";\r\n        // no: import NODE from \"bar\";\r\n        case 'ImportDefaultSpecifier':\r\n        case 'ImportNamespaceSpecifier':\r\n        case 'ImportSpecifier':\r\n            return false;\r\n        // no: import \"foo\" assert { NODE: \"json\" }\r\n        case 'ImportAttribute':\r\n            return false;\r\n        // no: <div NODE=\"foo\" />\r\n        case 'JSXAttribute':\r\n            return false;\r\n        // no: [NODE] = [];\r\n        // no: ({ NODE }) = [];\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return false;\r\n        // no: new.NODE\r\n        // no: NODE.target\r\n        case 'MetaProperty':\r\n            return false;\r\n        // yes: type X = { someProperty: NODE }\r\n        // no: type X = { NODE: OtherType }\r\n        case 'ObjectTypeProperty':\r\n            return parent.key !== node;\r\n        // yes: enum X { Foo = NODE }\r\n        // no: enum X { NODE }\r\n        case 'TSEnumMember':\r\n            return parent.id !== node;\r\n        // yes: { [NODE]: value }\r\n        // no: { NODE: value }\r\n        case 'TSPropertySignature':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n    }\r\n    return true;\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !false check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { inline, bindingMetadata } = context;\r\n    const rewriteIdentifier = (raw, parent, id) => {\r\n        const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\r\n        if (inline) {\r\n            // x = y\r\n            const isAssignmentLVal = parent && parent.type === 'AssignmentExpression' && parent.left === id;\r\n            // x++\r\n            const isUpdateArg = parent && parent.type === 'UpdateExpression' && parent.argument === id;\r\n            // ({ x } = y)\r\n            const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\r\n            if (type === \"setup-const\" /* SETUP_CONST */ ||\r\n                type === \"setup-reactive-const\" /* SETUP_REACTIVE_CONST */ ||\r\n                localVars[raw]) {\r\n                return raw;\r\n            }\r\n            else if (type === \"setup-ref\" /* SETUP_REF */) {\r\n                return `${raw}.value`;\r\n            }\r\n            else if (type === \"setup-maybe-ref\" /* SETUP_MAYBE_REF */) {\r\n                // const binding that may or may not be ref\r\n                // if it's not a ref, then assignments don't make sense -\r\n                // so we ignore the non-ref assignment case and generate code\r\n                // that assumes the value to be a ref for more efficiency\r\n                return isAssignmentLVal || isUpdateArg || isDestructureAssignment\r\n                    ? `${raw}.value`\r\n                    : `${context.helperString(UNREF)}(${raw})`;\r\n            }\r\n            else if (type === \"setup-let\" /* SETUP_LET */) {\r\n                if (isAssignmentLVal) {\r\n                    // let binding.\r\n                    // this is a bit more tricky as we need to cover the case where\r\n                    // let is a local non-ref value, and we need to replicate the\r\n                    // right hand side value.\r\n                    // x = y --> isRef(x) ? x.value = y : x = y\r\n                    const { right: rVal, operator } = parent;\r\n                    const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\r\n                    const rExpString = stringifyExpression(processExpression(createSimpleExpression(rExp, false), context, false, false, knownIds));\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\r\n                }\r\n                else if (isUpdateArg) {\r\n                    // make id replace parent in the code range so the raw update operator\r\n                    // is removed\r\n                    id.start = parent.start;\r\n                    id.end = parent.end;\r\n                    const { prefix: isPrefix, operator } = parent;\r\n                    const prefix = isPrefix ? operator : ``;\r\n                    const postfix = isPrefix ? `` : operator;\r\n                    // let binding.\r\n                    // x++ --> isRef(a) ? a.value++ : a++\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\r\n                }\r\n                else if (isDestructureAssignment) {\r\n                    // TODO\r\n                    // let binding in a destructure assignment - it's very tricky to\r\n                    // handle both possible cases here without altering the original\r\n                    // structure of the code, so we just assume it's not a ref here\r\n                    // for now\r\n                    return raw;\r\n                }\r\n                else {\r\n                    return `${context.helperString(UNREF)}(${raw})`;\r\n                }\r\n            }\r\n            else if (type === \"props\" /* PROPS */) {\r\n                // use __props which is generated by compileScript so in ts mode\r\n                // it gets correct type\r\n                return genPropsAccessExp(raw);\r\n            }\r\n            else if (type === \"props-aliased\" /* PROPS_ALIASED */) {\r\n                // prop with a different local alias (from defineProps() destructure)\r\n                return genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\r\n            }\r\n        }\r\n        else {\r\n            if (type && type.startsWith('setup')) {\r\n                // setup bindings in non-inline mode\r\n                return `$setup.${raw}`;\r\n            }\r\n            else if (type === \"props-aliased\" /* PROPS_ALIASED */) {\r\n                return `$props['${bindingMetadata.__propsAliases[raw]}']`;\r\n            }\r\n            else if (type) {\r\n                return `$${type}.${raw}`;\r\n            }\r\n        }\r\n        // fallback to ctx\r\n        return `_ctx.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail constant on parens (function invocation) and dot (member access)\r\n    const bailConstant = rawExp.indexOf(`(`) > -1 || rawExp.indexOf('.') > 0;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        const isScopeVarReference = context.identifiers[rawExp];\r\n        const isAllowedGlobal = isGloballyWhitelisted(rawExp);\r\n        const isLiteral = isLiteralWhitelisted(rawExp);\r\n        if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\r\n            // const bindings exposed from setup can be skipped for patching but\r\n            // cannot be hoisted to module scope\r\n            if (bindingMetadata[node.content] === \"setup-const\" /* SETUP_CONST */) {\r\n                node.constType = 1 /* CAN_SKIP_PATCH */;\r\n            }\r\n            node.content = rewriteIdentifier(rawExp);\r\n        }\r\n        else if (!isScopeVarReference) {\r\n            if (isLiteral) {\r\n                node.constType = 3 /* CAN_STRINGIFY */;\r\n            }\r\n            else {\r\n                node.constType = 2 /* CAN_HOIST */;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parse_1(source, {\r\n            plugins: context.expressionPlugins\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const parentStack = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    walkIdentifiers(ast, (node, parent, _, isReferenced, isLocal) => {\r\n        if (isStaticPropertyKey(node, parent)) {\r\n            return;\r\n        }\r\n        const needPrefix = isReferenced && canPrefix(node);\r\n        if (needPrefix && !isLocal) {\r\n            if (isStaticProperty(parent) && parent.shorthand) {\r\n                node.prefix = `${node.name}: `;\r\n            }\r\n            node.name = rewriteIdentifier(node.name, parent, node);\r\n            ids.push(node);\r\n        }\r\n        else {\r\n            // The identifier is considered constant unless it's pointing to a\r\n            // local scope variable (a v-for alias, or a v-slot prop)\r\n            if (!(needPrefix && isLocal) && !bailConstant) {\r\n                node.isConstant = true;\r\n            }\r\n            // also generate sub-expressions for other identifiers for better\r\n            // source map support. (except for property keys which are static)\r\n            ids.push(node);\r\n        }\r\n    }, true, // invoke on ALL identifiers\r\n    parentStack, knownIds);\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant ? 3 /* CAN_STRINGIFY */ : 0 /* NOT_CONSTANT */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.constType = bailConstant\r\n            ? 0 /* NOT_CONSTANT */\r\n            : 3 /* CAN_STRINGIFY */;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nfunction canPrefix(id) {\r\n    // skip whitelisted globals\r\n    if (isGloballyWhitelisted(id.name)) {\r\n        return false;\r\n    }\r\n    // special case for webpack compilation\r\n    if (id.name === 'require') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction stringifyExpression(exp) {\r\n    if (isString(exp)) {\r\n        return exp;\r\n    }\r\n    else if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        return exp.content;\r\n    }\r\n    else {\r\n        return exp.children\r\n            .map(stringifyExpression)\r\n            .join('');\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (context.prefixIdentifiers && dir.exp) {\r\n        // dir.exp can only be simple expression because vIf transform is applied\r\n        // before expression transform.\r\n        dir.exp = processExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if (comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    const isTemplateIf = node.tagType === 3 /* TEMPLATE */;\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n        userKey: findProp(node, `key`),\r\n        isTemplateIf\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            '\"v-if\"' ,\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if (!branch.isTemplateIf &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        if (isTemplate) {\r\n            // #2085 / #5288 process :key and v-memo expressions need to be\r\n            // processed on `<template v-for>`. In this case the node is discarded\r\n            // and never traversed so its binding expressions won't be processed\r\n            // by the normal transforms.\r\n            if (memo) {\r\n                memo.exp = processExpression(memo.exp, context);\r\n            }\r\n            if (keyProperty && keyProp.type !== 6 /* ATTRIBUTE */) {\r\n                keyProperty.value = processExpression(keyProperty.value, context);\r\n            }\r\n        }\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            (` /* ${PatchFlagNames[fragmentFlag]} */` ), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    (` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        ), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    if (context.prefixIdentifiers) {\r\n        // scope management\r\n        // inject identifiers to context\r\n        value && addIdentifiers(value);\r\n        key && addIdentifiers(key);\r\n        index && addIdentifiers(index);\r\n    }\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (context.prefixIdentifiers) {\r\n            value && removeIdentifiers(value);\r\n            key && removeIdentifiers(key);\r\n            index && removeIdentifiers(index);\r\n        }\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if (context.prefixIdentifiers) {\r\n        result.source = processExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if (context.prefixIdentifiers) {\r\n                result.key = processExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if (context.prefixIdentifiers) {\r\n                    result.index = processExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if (context.prefixIdentifiers) {\r\n            result.value = processExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            if (context.prefixIdentifiers) {\r\n                slotProps && context.addIdentifiers(slotProps);\r\n            }\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                if (context.prefixIdentifiers) {\r\n                    slotProps && context.removeIdentifiers(slotProps);\r\n                }\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // with `prefixIdentifiers: true`, this can be further optimized to make\r\n    // it dynamic only when the slot actually uses the scope variables.\r\n    if (!context.ssr && context.prefixIdentifiers) {\r\n        hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n    }\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + (` /* ${slotFlagsText[slotFlag]} */` ), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if (node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (false )) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    // this is skipped in browser build since browser builds do not perform\r\n    // binding analysis.\r\n    {\r\n        const fromSetup = resolveSetupReference(tag, context);\r\n        if (fromSetup) {\r\n            return fromSetup;\r\n        }\r\n        const dotIndex = tag.indexOf('.');\r\n        if (dotIndex > 0) {\r\n            const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\r\n            if (ns) {\r\n                return ns + tag.slice(dotIndex);\r\n            }\r\n        }\r\n    }\r\n    // 4. Self referencing component (inferred from filename)\r\n    if (context.selfName &&\r\n        capitalize(camelize(tag)) === context.selfName) {\r\n        context.helper(RESOLVE_COMPONENT);\r\n        // codegen.ts has special check for __self postfix when generating\r\n        // component imports, which will pass additional `maybeSelfReference` flag\r\n        // to `resolveComponent`.\r\n        context.components.add(tag + `__self`);\r\n        return toValidAssetId(tag, `component`);\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction resolveSetupReference(name, context) {\r\n    const bindings = context.bindingMetadata;\r\n    if (!bindings || bindings.__isScriptSetup === false) {\r\n        return;\r\n    }\r\n    const camelName = camelize(name);\r\n    const PascalName = capitalize(camelName);\r\n    const checkType = (type) => {\r\n        if (bindings[name] === type) {\r\n            return name;\r\n        }\r\n        if (bindings[camelName] === type) {\r\n            return camelName;\r\n        }\r\n        if (bindings[PascalName] === type) {\r\n            return PascalName;\r\n        }\r\n    };\r\n    const fromConst = checkType(\"setup-const\" /* SETUP_CONST */) ||\r\n        checkType(\"setup-reactive-const\" /* SETUP_REACTIVE_CONST */);\r\n    if (fromConst) {\r\n        return context.inline\r\n            ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n                fromConst\r\n            : `$setup[${JSON.stringify(fromConst)}]`;\r\n    }\r\n    const fromMaybeRef = checkType(\"setup-let\" /* SETUP_LET */) ||\r\n        checkType(\"setup-ref\" /* SETUP_REF */) ||\r\n        checkType(\"setup-maybe-ref\" /* SETUP_MAYBE_REF */);\r\n    if (fromMaybeRef) {\r\n        return context.inline\r\n            ? // setup scope bindings that may be refs need to be unrefed\r\n                `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n            : `$setup[${JSON.stringify(fromMaybeRef)}]`;\r\n    }\r\n}\r\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (isEventHandler &&\r\n                (!isComponent || isDynamicComponent) &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n                // in inline mode there is no setupState object, so we can't use string\r\n                // keys to set the ref. Instead, we need to transform it to pass the\r\n                // actual ref instead.\r\n                if (value &&\r\n                    context.inline &&\r\n                    context.bindingMetadata[value.content]) {\r\n                    isStatic = false;\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_key', true), createSimpleExpression(value.content, true, value.loc)));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (false ))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (false )))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            (styleProp.value.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                                styleProp.value.content.trim()[0] === `[`) ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // user directive.\r\n        // see if we have directives exposed via <script setup>\r\n        const fromSetup = resolveSetupReference('v-' + dir.name, context);\r\n        if (fromSetup) {\r\n            dirArgs.push(fromSetup);\r\n        }\r\n        else {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content, context);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        // process the expression since it's been skipped\r\n        if (context.prefixIdentifiers) {\r\n            isInlineStatement && context.addIdentifiers(`$event`);\r\n            exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\r\n            isInlineStatement && context.removeIdentifiers(`$event`);\r\n            // with scope analysis, the function is hoistable if it has no reference\r\n            // to scope variables.\r\n            shouldCache =\r\n                context.cacheHandlers &&\r\n                    // unnecessary to cache inside v-once\r\n                    !context.inVOnce &&\r\n                    // runtime constants don't need to be cached\r\n                    // (this is analyzed by compileScript in SFC <script setup>)\r\n                    !(exp.type === 4 /* SIMPLE_EXPRESSION */ && exp.constType > 0) &&\r\n                    // #1541 bail if this is a member exp handler passed to a component -\r\n                    // we need to use the original function to preserve arity,\r\n                    // e.g. <transition> relies on checking cb.length to determine\r\n                    // transition end handling. Inline function is ok since its arity\r\n                    // is preserved even when cached.\r\n                    !(isMemberExp && node.tagType === 1 /* COMPONENT */) &&\r\n                    // bail if the function references closure variables (v-for, v-slot)\r\n                    // it must be passed fresh to avoid stale values.\r\n                    !hasScopeRef(exp, context.identifiers);\r\n            // If the expression is optimizable and is a member expression pointing\r\n            // to a function, turn it into invocation (and wrap in an arrow function\r\n            // below) so that it always accesses the latest value when called - thus\r\n            // avoiding the need to be patched.\r\n            if (shouldCache && isMemberExp) {\r\n                if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                    exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n                }\r\n                else {\r\n                    exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n                }\r\n            }\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? context.isTS\r\n                        ? `($event: any)`\r\n                        : `$event`\r\n                    : `${context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(false ))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            (` /* ${PatchFlagNames[1 /* TEXT */]} */` ));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    const bindingType = context.bindingMetadata[rawExp];\r\n    const maybeRef = context.inline &&\r\n        bindingType &&\r\n        bindingType !== \"setup-const\" /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString, context) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    if (context.prefixIdentifiers &&\r\n        isSimpleIdentifier(expString) &&\r\n        context.identifiers[expString]) {\r\n        context.onError(createCompilerError(43 /* X_V_MODEL_ON_SCOPE_VARIABLE */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    if (maybeRef) {\r\n        if (bindingType === \"setup-ref\" /* SETUP_REF */) {\r\n            // v-model used on known ref.\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => ((`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event)`\r\n            ]);\r\n        }\r\n        else {\r\n            // v-model used on a potentially ref binding in <script setup> inline mode.\r\n            // the assignment needs to check whether the binding is actually a ref.\r\n            const altAssignment = bindingType === \"setup-let\" /* SETUP_LET */ ? `${rawExp} = $event` : `null`;\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event : ${altAssignment})`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n    if (context.prefixIdentifiers &&\r\n        !context.inVOnce &&\r\n        context.cacheHandlers &&\r\n        !hasScopeRef(exp, context.identifiers)) {\r\n        props[1].value = context.cache(props[1].value);\r\n    }\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([]),\r\n            ...(prefixIdentifiers\r\n                ? [\r\n                    // order is important\r\n                    trackVForSlotScopes,\r\n                    transformExpression\r\n                ]\r\n                : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    const prefixIdentifiers = (options.prefixIdentifiers === true || isModuleMode);\r\n    if (!prefixIdentifiers && options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\r\n    if (options.isTS) {\r\n        const { expressionPlugins } = options;\r\n        if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n            options.expressionPlugins = [...(expressionPlugins || []), 'typescript'];\r\n        }\r\n    }\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\r\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\r\nconst V_MODEL_TEXT = Symbol(`vModelText` );\r\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\r\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\r\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\r\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\r\nconst V_SHOW = Symbol(`vShow` );\r\nconst TRANSITION = Symbol(`Transition` );\r\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\nvar namedCharacterReferences = {\n\tGT: \">\",\n\tgt: \">\",\n\tLT: \"<\",\n\tlt: \"<\",\n\t\"ac;\": \"\u223E\",\n\t\"af;\": \"\u2061\",\n\tAMP: \"&\",\n\tamp: \"&\",\n\t\"ap;\": \"\u2248\",\n\t\"DD;\": \"\u2145\",\n\t\"dd;\": \"\u2146\",\n\tdeg: \"\u00B0\",\n\t\"ee;\": \"\u2147\",\n\t\"eg;\": \"\u2A9A\",\n\t\"el;\": \"\u2A99\",\n\tETH: \"\u00D0\",\n\teth: \"\u00F0\",\n\t\"gE;\": \"\u2267\",\n\t\"ge;\": \"\u2265\",\n\t\"Gg;\": \"\u22D9\",\n\t\"gg;\": \"\u226B\",\n\t\"gl;\": \"\u2277\",\n\t\"GT;\": \">\",\n\t\"Gt;\": \"\u226B\",\n\t\"gt;\": \">\",\n\t\"ic;\": \"\u2063\",\n\t\"ii;\": \"\u2148\",\n\t\"Im;\": \"\u2111\",\n\t\"in;\": \"\u2208\",\n\t\"it;\": \"\u2062\",\n\t\"lE;\": \"\u2266\",\n\t\"le;\": \"\u2264\",\n\t\"lg;\": \"\u2276\",\n\t\"Ll;\": \"\u22D8\",\n\t\"ll;\": \"\u226A\",\n\t\"LT;\": \"<\",\n\t\"Lt;\": \"\u226A\",\n\t\"lt;\": \"<\",\n\t\"mp;\": \"\u2213\",\n\t\"Mu;\": \"\u039C\",\n\t\"mu;\": \"\u03BC\",\n\t\"ne;\": \"\u2260\",\n\t\"ni;\": \"\u220B\",\n\tnot: \"\u00AC\",\n\t\"Nu;\": \"\u039D\",\n\t\"nu;\": \"\u03BD\",\n\t\"Or;\": \"\u2A54\",\n\t\"or;\": \"\u2228\",\n\t\"oS;\": \"\u24C8\",\n\t\"Pi;\": \"\u03A0\",\n\t\"pi;\": \"\u03C0\",\n\t\"pm;\": \"\u00B1\",\n\t\"Pr;\": \"\u2ABB\",\n\t\"pr;\": \"\u227A\",\n\t\"Re;\": \"\u211C\",\n\tREG: \"\u00AE\",\n\treg: \"\u00AE\",\n\t\"rx;\": \"\u211E\",\n\t\"Sc;\": \"\u2ABC\",\n\t\"sc;\": \"\u227B\",\n\tshy: \"\u00AD\",\n\tuml: \"\u00A8\",\n\t\"wp;\": \"\u2118\",\n\t\"wr;\": \"\u2240\",\n\t\"Xi;\": \"\u039E\",\n\t\"xi;\": \"\u03BE\",\n\tyen: \"\u00A5\",\n\t\"acd;\": \"\u223F\",\n\t\"acE;\": \"\u223E\u0333\",\n\t\"Acy;\": \"\u0410\",\n\t\"acy;\": \"\u0430\",\n\t\"Afr;\": \"\uD835\uDD04\",\n\t\"afr;\": \"\uD835\uDD1E\",\n\t\"AMP;\": \"&\",\n\t\"amp;\": \"&\",\n\t\"And;\": \"\u2A53\",\n\t\"and;\": \"\u2227\",\n\t\"ang;\": \"\u2220\",\n\t\"apE;\": \"\u2A70\",\n\t\"ape;\": \"\u224A\",\n\t\"ast;\": \"*\",\n\tAuml: \"\u00C4\",\n\tauml: \"\u00E4\",\n\t\"Bcy;\": \"\u0411\",\n\t\"bcy;\": \"\u0431\",\n\t\"Bfr;\": \"\uD835\uDD05\",\n\t\"bfr;\": \"\uD835\uDD1F\",\n\t\"bne;\": \"=\u20E5\",\n\t\"bot;\": \"\u22A5\",\n\t\"Cap;\": \"\u22D2\",\n\t\"cap;\": \"\u2229\",\n\tcent: \"\u00A2\",\n\t\"Cfr;\": \"\u212D\",\n\t\"cfr;\": \"\uD835\uDD20\",\n\t\"Chi;\": \"\u03A7\",\n\t\"chi;\": \"\u03C7\",\n\t\"cir;\": \"\u25CB\",\n\tCOPY: \"\u00A9\",\n\tcopy: \"\u00A9\",\n\t\"Cup;\": \"\u22D3\",\n\t\"cup;\": \"\u222A\",\n\t\"Dcy;\": \"\u0414\",\n\t\"dcy;\": \"\u0434\",\n\t\"deg;\": \"\u00B0\",\n\t\"Del;\": \"\u2207\",\n\t\"Dfr;\": \"\uD835\uDD07\",\n\t\"dfr;\": \"\uD835\uDD21\",\n\t\"die;\": \"\u00A8\",\n\t\"div;\": \"\u00F7\",\n\t\"Dot;\": \"\u00A8\",\n\t\"dot;\": \"\u02D9\",\n\t\"Ecy;\": \"\u042D\",\n\t\"ecy;\": \"\u044D\",\n\t\"Efr;\": \"\uD835\uDD08\",\n\t\"efr;\": \"\uD835\uDD22\",\n\t\"egs;\": \"\u2A96\",\n\t\"ell;\": \"\u2113\",\n\t\"els;\": \"\u2A95\",\n\t\"ENG;\": \"\u014A\",\n\t\"eng;\": \"\u014B\",\n\t\"Eta;\": \"\u0397\",\n\t\"eta;\": \"\u03B7\",\n\t\"ETH;\": \"\u00D0\",\n\t\"eth;\": \"\u00F0\",\n\tEuml: \"\u00CB\",\n\teuml: \"\u00EB\",\n\t\"Fcy;\": \"\u0424\",\n\t\"fcy;\": \"\u0444\",\n\t\"Ffr;\": \"\uD835\uDD09\",\n\t\"ffr;\": \"\uD835\uDD23\",\n\t\"gap;\": \"\u2A86\",\n\t\"Gcy;\": \"\u0413\",\n\t\"gcy;\": \"\u0433\",\n\t\"gEl;\": \"\u2A8C\",\n\t\"gel;\": \"\u22DB\",\n\t\"geq;\": \"\u2265\",\n\t\"ges;\": \"\u2A7E\",\n\t\"Gfr;\": \"\uD835\uDD0A\",\n\t\"gfr;\": \"\uD835\uDD24\",\n\t\"ggg;\": \"\u22D9\",\n\t\"gla;\": \"\u2AA5\",\n\t\"glE;\": \"\u2A92\",\n\t\"glj;\": \"\u2AA4\",\n\t\"gnE;\": \"\u2269\",\n\t\"gne;\": \"\u2A88\",\n\t\"Hat;\": \"^\",\n\t\"Hfr;\": \"\u210C\",\n\t\"hfr;\": \"\uD835\uDD25\",\n\t\"Icy;\": \"\u0418\",\n\t\"icy;\": \"\u0438\",\n\t\"iff;\": \"\u21D4\",\n\t\"Ifr;\": \"\u2111\",\n\t\"ifr;\": \"\uD835\uDD26\",\n\t\"Int;\": \"\u222C\",\n\t\"int;\": \"\u222B\",\n\tIuml: \"\u00CF\",\n\tiuml: \"\u00EF\",\n\t\"Jcy;\": \"\u0419\",\n\t\"jcy;\": \"\u0439\",\n\t\"Jfr;\": \"\uD835\uDD0D\",\n\t\"jfr;\": \"\uD835\uDD27\",\n\t\"Kcy;\": \"\u041A\",\n\t\"kcy;\": \"\u043A\",\n\t\"Kfr;\": \"\uD835\uDD0E\",\n\t\"kfr;\": \"\uD835\uDD28\",\n\t\"lap;\": \"\u2A85\",\n\t\"lat;\": \"\u2AAB\",\n\t\"Lcy;\": \"\u041B\",\n\t\"lcy;\": \"\u043B\",\n\t\"lEg;\": \"\u2A8B\",\n\t\"leg;\": \"\u22DA\",\n\t\"leq;\": \"\u2264\",\n\t\"les;\": \"\u2A7D\",\n\t\"Lfr;\": \"\uD835\uDD0F\",\n\t\"lfr;\": \"\uD835\uDD29\",\n\t\"lgE;\": \"\u2A91\",\n\t\"lnE;\": \"\u2268\",\n\t\"lne;\": \"\u2A87\",\n\t\"loz;\": \"\u25CA\",\n\t\"lrm;\": \"\u200E\",\n\t\"Lsh;\": \"\u21B0\",\n\t\"lsh;\": \"\u21B0\",\n\tmacr: \"\u00AF\",\n\t\"Map;\": \"\u2905\",\n\t\"map;\": \"\u21A6\",\n\t\"Mcy;\": \"\u041C\",\n\t\"mcy;\": \"\u043C\",\n\t\"Mfr;\": \"\uD835\uDD10\",\n\t\"mfr;\": \"\uD835\uDD2A\",\n\t\"mho;\": \"\u2127\",\n\t\"mid;\": \"\u2223\",\n\t\"nap;\": \"\u2249\",\n\tnbsp: \"\u00A0\",\n\t\"Ncy;\": \"\u041D\",\n\t\"ncy;\": \"\u043D\",\n\t\"Nfr;\": \"\uD835\uDD11\",\n\t\"nfr;\": \"\uD835\uDD2B\",\n\t\"ngE;\": \"\u2267\u0338\",\n\t\"nge;\": \"\u2271\",\n\t\"nGg;\": \"\u22D9\u0338\",\n\t\"nGt;\": \"\u226B\u20D2\",\n\t\"ngt;\": \"\u226F\",\n\t\"nis;\": \"\u22FC\",\n\t\"niv;\": \"\u220B\",\n\t\"nlE;\": \"\u2266\u0338\",\n\t\"nle;\": \"\u2270\",\n\t\"nLl;\": \"\u22D8\u0338\",\n\t\"nLt;\": \"\u226A\u20D2\",\n\t\"nlt;\": \"\u226E\",\n\t\"Not;\": \"\u2AEC\",\n\t\"not;\": \"\u00AC\",\n\t\"npr;\": \"\u2280\",\n\t\"nsc;\": \"\u2281\",\n\t\"num;\": \"#\",\n\t\"Ocy;\": \"\u041E\",\n\t\"ocy;\": \"\u043E\",\n\t\"Ofr;\": \"\uD835\uDD12\",\n\t\"ofr;\": \"\uD835\uDD2C\",\n\t\"ogt;\": \"\u29C1\",\n\t\"ohm;\": \"\u03A9\",\n\t\"olt;\": \"\u29C0\",\n\t\"ord;\": \"\u2A5D\",\n\tordf: \"\u00AA\",\n\tordm: \"\u00BA\",\n\t\"orv;\": \"\u2A5B\",\n\tOuml: \"\u00D6\",\n\touml: \"\u00F6\",\n\t\"par;\": \"\u2225\",\n\tpara: \"\u00B6\",\n\t\"Pcy;\": \"\u041F\",\n\t\"pcy;\": \"\u043F\",\n\t\"Pfr;\": \"\uD835\uDD13\",\n\t\"pfr;\": \"\uD835\uDD2D\",\n\t\"Phi;\": \"\u03A6\",\n\t\"phi;\": \"\u03C6\",\n\t\"piv;\": \"\u03D6\",\n\t\"prE;\": \"\u2AB3\",\n\t\"pre;\": \"\u2AAF\",\n\t\"Psi;\": \"\u03A8\",\n\t\"psi;\": \"\u03C8\",\n\t\"Qfr;\": \"\uD835\uDD14\",\n\t\"qfr;\": \"\uD835\uDD2E\",\n\tQUOT: \"\\\"\",\n\tquot: \"\\\"\",\n\t\"Rcy;\": \"\u0420\",\n\t\"rcy;\": \"\u0440\",\n\t\"REG;\": \"\u00AE\",\n\t\"reg;\": \"\u00AE\",\n\t\"Rfr;\": \"\u211C\",\n\t\"rfr;\": \"\uD835\uDD2F\",\n\t\"Rho;\": \"\u03A1\",\n\t\"rho;\": \"\u03C1\",\n\t\"rlm;\": \"\u200F\",\n\t\"Rsh;\": \"\u21B1\",\n\t\"rsh;\": \"\u21B1\",\n\t\"scE;\": \"\u2AB4\",\n\t\"sce;\": \"\u2AB0\",\n\t\"Scy;\": \"\u0421\",\n\t\"scy;\": \"\u0441\",\n\tsect: \"\u00A7\",\n\t\"Sfr;\": \"\uD835\uDD16\",\n\t\"sfr;\": \"\uD835\uDD30\",\n\t\"shy;\": \"\u00AD\",\n\t\"sim;\": \"\u223C\",\n\t\"smt;\": \"\u2AAA\",\n\t\"sol;\": \"/\",\n\t\"squ;\": \"\u25A1\",\n\t\"Sub;\": \"\u22D0\",\n\t\"sub;\": \"\u2282\",\n\t\"Sum;\": \"\u2211\",\n\t\"sum;\": \"\u2211\",\n\t\"Sup;\": \"\u22D1\",\n\t\"sup;\": \"\u2283\",\n\tsup1: \"\u00B9\",\n\tsup2: \"\u00B2\",\n\tsup3: \"\u00B3\",\n\t\"Tab;\": \"\\t\",\n\t\"Tau;\": \"\u03A4\",\n\t\"tau;\": \"\u03C4\",\n\t\"Tcy;\": \"\u0422\",\n\t\"tcy;\": \"\u0442\",\n\t\"Tfr;\": \"\uD835\uDD17\",\n\t\"tfr;\": \"\uD835\uDD31\",\n\t\"top;\": \"\u22A4\",\n\t\"Ucy;\": \"\u0423\",\n\t\"ucy;\": \"\u0443\",\n\t\"Ufr;\": \"\uD835\uDD18\",\n\t\"ufr;\": \"\uD835\uDD32\",\n\t\"uml;\": \"\u00A8\",\n\tUuml: \"\u00DC\",\n\tuuml: \"\u00FC\",\n\t\"Vcy;\": \"\u0412\",\n\t\"vcy;\": \"\u0432\",\n\t\"Vee;\": \"\u22C1\",\n\t\"vee;\": \"\u2228\",\n\t\"Vfr;\": \"\uD835\uDD19\",\n\t\"vfr;\": \"\uD835\uDD33\",\n\t\"Wfr;\": \"\uD835\uDD1A\",\n\t\"wfr;\": \"\uD835\uDD34\",\n\t\"Xfr;\": \"\uD835\uDD1B\",\n\t\"xfr;\": \"\uD835\uDD35\",\n\t\"Ycy;\": \"\u042B\",\n\t\"ycy;\": \"\u044B\",\n\t\"yen;\": \"\u00A5\",\n\t\"Yfr;\": \"\uD835\uDD1C\",\n\t\"yfr;\": \"\uD835\uDD36\",\n\tyuml: \"\u00FF\",\n\t\"Zcy;\": \"\u0417\",\n\t\"zcy;\": \"\u0437\",\n\t\"Zfr;\": \"\u2128\",\n\t\"zfr;\": \"\uD835\uDD37\",\n\t\"zwj;\": \"\u200D\",\n\tAcirc: \"\u00C2\",\n\tacirc: \"\u00E2\",\n\tacute: \"\u00B4\",\n\tAElig: \"\u00C6\",\n\taelig: \"\u00E6\",\n\t\"andd;\": \"\u2A5C\",\n\t\"andv;\": \"\u2A5A\",\n\t\"ange;\": \"\u29A4\",\n\t\"Aopf;\": \"\uD835\uDD38\",\n\t\"aopf;\": \"\uD835\uDD52\",\n\t\"apid;\": \"\u224B\",\n\t\"apos;\": \"'\",\n\tAring: \"\u00C5\",\n\taring: \"\u00E5\",\n\t\"Ascr;\": \"\uD835\uDC9C\",\n\t\"ascr;\": \"\uD835\uDCB6\",\n\t\"Auml;\": \"\u00C4\",\n\t\"auml;\": \"\u00E4\",\n\t\"Barv;\": \"\u2AE7\",\n\t\"bbrk;\": \"\u23B5\",\n\t\"Beta;\": \"\u0392\",\n\t\"beta;\": \"\u03B2\",\n\t\"beth;\": \"\u2136\",\n\t\"bNot;\": \"\u2AED\",\n\t\"bnot;\": \"\u2310\",\n\t\"Bopf;\": \"\uD835\uDD39\",\n\t\"bopf;\": \"\uD835\uDD53\",\n\t\"boxH;\": \"\u2550\",\n\t\"boxh;\": \"\u2500\",\n\t\"boxV;\": \"\u2551\",\n\t\"boxv;\": \"\u2502\",\n\t\"Bscr;\": \"\u212C\",\n\t\"bscr;\": \"\uD835\uDCB7\",\n\t\"bsim;\": \"\u223D\",\n\t\"bsol;\": \"\\\\\",\n\t\"bull;\": \"\u2022\",\n\t\"bump;\": \"\u224E\",\n\t\"caps;\": \"\u2229\uFE00\",\n\t\"Cdot;\": \"\u010A\",\n\t\"cdot;\": \"\u010B\",\n\tcedil: \"\u00B8\",\n\t\"cent;\": \"\u00A2\",\n\t\"CHcy;\": \"\u0427\",\n\t\"chcy;\": \"\u0447\",\n\t\"circ;\": \"\u02C6\",\n\t\"cirE;\": \"\u29C3\",\n\t\"cire;\": \"\u2257\",\n\t\"comp;\": \"\u2201\",\n\t\"cong;\": \"\u2245\",\n\t\"Copf;\": \"\u2102\",\n\t\"copf;\": \"\uD835\uDD54\",\n\t\"COPY;\": \"\u00A9\",\n\t\"copy;\": \"\u00A9\",\n\t\"Cscr;\": \"\uD835\uDC9E\",\n\t\"cscr;\": \"\uD835\uDCB8\",\n\t\"csub;\": \"\u2ACF\",\n\t\"csup;\": \"\u2AD0\",\n\t\"cups;\": \"\u222A\uFE00\",\n\t\"Darr;\": \"\u21A1\",\n\t\"dArr;\": \"\u21D3\",\n\t\"darr;\": \"\u2193\",\n\t\"dash;\": \"\u2010\",\n\t\"dHar;\": \"\u2965\",\n\t\"diam;\": \"\u22C4\",\n\t\"DJcy;\": \"\u0402\",\n\t\"djcy;\": \"\u0452\",\n\t\"Dopf;\": \"\uD835\uDD3B\",\n\t\"dopf;\": \"\uD835\uDD55\",\n\t\"Dscr;\": \"\uD835\uDC9F\",\n\t\"dscr;\": \"\uD835\uDCB9\",\n\t\"DScy;\": \"\u0405\",\n\t\"dscy;\": \"\u0455\",\n\t\"dsol;\": \"\u29F6\",\n\t\"dtri;\": \"\u25BF\",\n\t\"DZcy;\": \"\u040F\",\n\t\"dzcy;\": \"\u045F\",\n\t\"ecir;\": \"\u2256\",\n\tEcirc: \"\u00CA\",\n\tecirc: \"\u00EA\",\n\t\"Edot;\": \"\u0116\",\n\t\"eDot;\": \"\u2251\",\n\t\"edot;\": \"\u0117\",\n\t\"emsp;\": \"\u2003\",\n\t\"ensp;\": \"\u2002\",\n\t\"Eopf;\": \"\uD835\uDD3C\",\n\t\"eopf;\": \"\uD835\uDD56\",\n\t\"epar;\": \"\u22D5\",\n\t\"epsi;\": \"\u03B5\",\n\t\"Escr;\": \"\u2130\",\n\t\"escr;\": \"\u212F\",\n\t\"Esim;\": \"\u2A73\",\n\t\"esim;\": \"\u2242\",\n\t\"Euml;\": \"\u00CB\",\n\t\"euml;\": \"\u00EB\",\n\t\"euro;\": \"\u20AC\",\n\t\"excl;\": \"!\",\n\t\"flat;\": \"\u266D\",\n\t\"fnof;\": \"\u0192\",\n\t\"Fopf;\": \"\uD835\uDD3D\",\n\t\"fopf;\": \"\uD835\uDD57\",\n\t\"fork;\": \"\u22D4\",\n\t\"Fscr;\": \"\u2131\",\n\t\"fscr;\": \"\uD835\uDCBB\",\n\t\"Gdot;\": \"\u0120\",\n\t\"gdot;\": \"\u0121\",\n\t\"geqq;\": \"\u2267\",\n\t\"gesl;\": \"\u22DB\uFE00\",\n\t\"GJcy;\": \"\u0403\",\n\t\"gjcy;\": \"\u0453\",\n\t\"gnap;\": \"\u2A8A\",\n\t\"gneq;\": \"\u2A88\",\n\t\"Gopf;\": \"\uD835\uDD3E\",\n\t\"gopf;\": \"\uD835\uDD58\",\n\t\"Gscr;\": \"\uD835\uDCA2\",\n\t\"gscr;\": \"\u210A\",\n\t\"gsim;\": \"\u2273\",\n\t\"gtcc;\": \"\u2AA7\",\n\t\"gvnE;\": \"\u2269\uFE00\",\n\t\"half;\": \"\u00BD\",\n\t\"hArr;\": \"\u21D4\",\n\t\"harr;\": \"\u2194\",\n\t\"hbar;\": \"\u210F\",\n\t\"Hopf;\": \"\u210D\",\n\t\"hopf;\": \"\uD835\uDD59\",\n\t\"Hscr;\": \"\u210B\",\n\t\"hscr;\": \"\uD835\uDCBD\",\n\tIcirc: \"\u00CE\",\n\ticirc: \"\u00EE\",\n\t\"Idot;\": \"\u0130\",\n\t\"IEcy;\": \"\u0415\",\n\t\"iecy;\": \"\u0435\",\n\tiexcl: \"\u00A1\",\n\t\"imof;\": \"\u22B7\",\n\t\"IOcy;\": \"\u0401\",\n\t\"iocy;\": \"\u0451\",\n\t\"Iopf;\": \"\uD835\uDD40\",\n\t\"iopf;\": \"\uD835\uDD5A\",\n\t\"Iota;\": \"\u0399\",\n\t\"iota;\": \"\u03B9\",\n\t\"Iscr;\": \"\u2110\",\n\t\"iscr;\": \"\uD835\uDCBE\",\n\t\"isin;\": \"\u2208\",\n\t\"Iuml;\": \"\u00CF\",\n\t\"iuml;\": \"\u00EF\",\n\t\"Jopf;\": \"\uD835\uDD41\",\n\t\"jopf;\": \"\uD835\uDD5B\",\n\t\"Jscr;\": \"\uD835\uDCA5\",\n\t\"jscr;\": \"\uD835\uDCBF\",\n\t\"KHcy;\": \"\u0425\",\n\t\"khcy;\": \"\u0445\",\n\t\"KJcy;\": \"\u040C\",\n\t\"kjcy;\": \"\u045C\",\n\t\"Kopf;\": \"\uD835\uDD42\",\n\t\"kopf;\": \"\uD835\uDD5C\",\n\t\"Kscr;\": \"\uD835\uDCA6\",\n\t\"kscr;\": \"\uD835\uDCC0\",\n\t\"Lang;\": \"\u27EA\",\n\t\"lang;\": \"\u27E8\",\n\tlaquo: \"\u00AB\",\n\t\"Larr;\": \"\u219E\",\n\t\"lArr;\": \"\u21D0\",\n\t\"larr;\": \"\u2190\",\n\t\"late;\": \"\u2AAD\",\n\t\"lcub;\": \"{\",\n\t\"ldca;\": \"\u2936\",\n\t\"ldsh;\": \"\u21B2\",\n\t\"leqq;\": \"\u2266\",\n\t\"lesg;\": \"\u22DA\uFE00\",\n\t\"lHar;\": \"\u2962\",\n\t\"LJcy;\": \"\u0409\",\n\t\"ljcy;\": \"\u0459\",\n\t\"lnap;\": \"\u2A89\",\n\t\"lneq;\": \"\u2A87\",\n\t\"Lopf;\": \"\uD835\uDD43\",\n\t\"lopf;\": \"\uD835\uDD5D\",\n\t\"lozf;\": \"\u29EB\",\n\t\"lpar;\": \"(\",\n\t\"Lscr;\": \"\u2112\",\n\t\"lscr;\": \"\uD835\uDCC1\",\n\t\"lsim;\": \"\u2272\",\n\t\"lsqb;\": \"[\",\n\t\"ltcc;\": \"\u2AA6\",\n\t\"ltri;\": \"\u25C3\",\n\t\"lvnE;\": \"\u2268\uFE00\",\n\t\"macr;\": \"\u00AF\",\n\t\"male;\": \"\u2642\",\n\t\"malt;\": \"\u2720\",\n\tmicro: \"\u00B5\",\n\t\"mlcp;\": \"\u2ADB\",\n\t\"mldr;\": \"\u2026\",\n\t\"Mopf;\": \"\uD835\uDD44\",\n\t\"mopf;\": \"\uD835\uDD5E\",\n\t\"Mscr;\": \"\u2133\",\n\t\"mscr;\": \"\uD835\uDCC2\",\n\t\"nang;\": \"\u2220\u20D2\",\n\t\"napE;\": \"\u2A70\u0338\",\n\t\"nbsp;\": \"\u00A0\",\n\t\"ncap;\": \"\u2A43\",\n\t\"ncup;\": \"\u2A42\",\n\t\"ngeq;\": \"\u2271\",\n\t\"nges;\": \"\u2A7E\u0338\",\n\t\"ngtr;\": \"\u226F\",\n\t\"nGtv;\": \"\u226B\u0338\",\n\t\"nisd;\": \"\u22FA\",\n\t\"NJcy;\": \"\u040A\",\n\t\"njcy;\": \"\u045A\",\n\t\"nldr;\": \"\u2025\",\n\t\"nleq;\": \"\u2270\",\n\t\"nles;\": \"\u2A7D\u0338\",\n\t\"nLtv;\": \"\u226A\u0338\",\n\t\"nmid;\": \"\u2224\",\n\t\"Nopf;\": \"\u2115\",\n\t\"nopf;\": \"\uD835\uDD5F\",\n\t\"npar;\": \"\u2226\",\n\t\"npre;\": \"\u2AAF\u0338\",\n\t\"nsce;\": \"\u2AB0\u0338\",\n\t\"Nscr;\": \"\uD835\uDCA9\",\n\t\"nscr;\": \"\uD835\uDCC3\",\n\t\"nsim;\": \"\u2241\",\n\t\"nsub;\": \"\u2284\",\n\t\"nsup;\": \"\u2285\",\n\t\"ntgl;\": \"\u2279\",\n\t\"ntlg;\": \"\u2278\",\n\t\"nvap;\": \"\u224D\u20D2\",\n\t\"nvge;\": \"\u2265\u20D2\",\n\t\"nvgt;\": \">\u20D2\",\n\t\"nvle;\": \"\u2264\u20D2\",\n\t\"nvlt;\": \"<\u20D2\",\n\t\"oast;\": \"\u229B\",\n\t\"ocir;\": \"\u229A\",\n\tOcirc: \"\u00D4\",\n\tocirc: \"\u00F4\",\n\t\"odiv;\": \"\u2A38\",\n\t\"odot;\": \"\u2299\",\n\t\"ogon;\": \"\u02DB\",\n\t\"oint;\": \"\u222E\",\n\t\"omid;\": \"\u29B6\",\n\t\"Oopf;\": \"\uD835\uDD46\",\n\t\"oopf;\": \"\uD835\uDD60\",\n\t\"opar;\": \"\u29B7\",\n\t\"ordf;\": \"\u00AA\",\n\t\"ordm;\": \"\u00BA\",\n\t\"oror;\": \"\u2A56\",\n\t\"Oscr;\": \"\uD835\uDCAA\",\n\t\"oscr;\": \"\u2134\",\n\t\"osol;\": \"\u2298\",\n\t\"Ouml;\": \"\u00D6\",\n\t\"ouml;\": \"\u00F6\",\n\t\"para;\": \"\u00B6\",\n\t\"part;\": \"\u2202\",\n\t\"perp;\": \"\u22A5\",\n\t\"phiv;\": \"\u03D5\",\n\t\"plus;\": \"+\",\n\t\"Popf;\": \"\u2119\",\n\t\"popf;\": \"\uD835\uDD61\",\n\tpound: \"\u00A3\",\n\t\"prap;\": \"\u2AB7\",\n\t\"prec;\": \"\u227A\",\n\t\"prnE;\": \"\u2AB5\",\n\t\"prod;\": \"\u220F\",\n\t\"prop;\": \"\u221D\",\n\t\"Pscr;\": \"\uD835\uDCAB\",\n\t\"pscr;\": \"\uD835\uDCC5\",\n\t\"qint;\": \"\u2A0C\",\n\t\"Qopf;\": \"\u211A\",\n\t\"qopf;\": \"\uD835\uDD62\",\n\t\"Qscr;\": \"\uD835\uDCAC\",\n\t\"qscr;\": \"\uD835\uDCC6\",\n\t\"QUOT;\": \"\\\"\",\n\t\"quot;\": \"\\\"\",\n\t\"race;\": \"\u223D\u0331\",\n\t\"Rang;\": \"\u27EB\",\n\t\"rang;\": \"\u27E9\",\n\traquo: \"\u00BB\",\n\t\"Rarr;\": \"\u21A0\",\n\t\"rArr;\": \"\u21D2\",\n\t\"rarr;\": \"\u2192\",\n\t\"rcub;\": \"}\",\n\t\"rdca;\": \"\u2937\",\n\t\"rdsh;\": \"\u21B3\",\n\t\"real;\": \"\u211C\",\n\t\"rect;\": \"\u25AD\",\n\t\"rHar;\": \"\u2964\",\n\t\"rhov;\": \"\u03F1\",\n\t\"ring;\": \"\u02DA\",\n\t\"Ropf;\": \"\u211D\",\n\t\"ropf;\": \"\uD835\uDD63\",\n\t\"rpar;\": \")\",\n\t\"Rscr;\": \"\u211B\",\n\t\"rscr;\": \"\uD835\uDCC7\",\n\t\"rsqb;\": \"]\",\n\t\"rtri;\": \"\u25B9\",\n\t\"scap;\": \"\u2AB8\",\n\t\"scnE;\": \"\u2AB6\",\n\t\"sdot;\": \"\u22C5\",\n\t\"sect;\": \"\u00A7\",\n\t\"semi;\": \";\",\n\t\"sext;\": \"\u2736\",\n\t\"SHcy;\": \"\u0428\",\n\t\"shcy;\": \"\u0448\",\n\t\"sime;\": \"\u2243\",\n\t\"simg;\": \"\u2A9E\",\n\t\"siml;\": \"\u2A9D\",\n\t\"smid;\": \"\u2223\",\n\t\"smte;\": \"\u2AAC\",\n\t\"solb;\": \"\u29C4\",\n\t\"Sopf;\": \"\uD835\uDD4A\",\n\t\"sopf;\": \"\uD835\uDD64\",\n\t\"spar;\": \"\u2225\",\n\t\"Sqrt;\": \"\u221A\",\n\t\"squf;\": \"\u25AA\",\n\t\"Sscr;\": \"\uD835\uDCAE\",\n\t\"sscr;\": \"\uD835\uDCC8\",\n\t\"Star;\": \"\u22C6\",\n\t\"star;\": \"\u2606\",\n\t\"subE;\": \"\u2AC5\",\n\t\"sube;\": \"\u2286\",\n\t\"succ;\": \"\u227B\",\n\t\"sung;\": \"\u266A\",\n\t\"sup1;\": \"\u00B9\",\n\t\"sup2;\": \"\u00B2\",\n\t\"sup3;\": \"\u00B3\",\n\t\"supE;\": \"\u2AC6\",\n\t\"supe;\": \"\u2287\",\n\tszlig: \"\u00DF\",\n\t\"tbrk;\": \"\u23B4\",\n\t\"tdot;\": \"\u20DB\",\n\tTHORN: \"\u00DE\",\n\tthorn: \"\u00FE\",\n\ttimes: \"\u00D7\",\n\t\"tint;\": \"\u222D\",\n\t\"toea;\": \"\u2928\",\n\t\"Topf;\": \"\uD835\uDD4B\",\n\t\"topf;\": \"\uD835\uDD65\",\n\t\"tosa;\": \"\u2929\",\n\t\"trie;\": \"\u225C\",\n\t\"Tscr;\": \"\uD835\uDCAF\",\n\t\"tscr;\": \"\uD835\uDCC9\",\n\t\"TScy;\": \"\u0426\",\n\t\"tscy;\": \"\u0446\",\n\t\"Uarr;\": \"\u219F\",\n\t\"uArr;\": \"\u21D1\",\n\t\"uarr;\": \"\u2191\",\n\tUcirc: \"\u00DB\",\n\tucirc: \"\u00FB\",\n\t\"uHar;\": \"\u2963\",\n\t\"Uopf;\": \"\uD835\uDD4C\",\n\t\"uopf;\": \"\uD835\uDD66\",\n\t\"Upsi;\": \"\u03D2\",\n\t\"upsi;\": \"\u03C5\",\n\t\"Uscr;\": \"\uD835\uDCB0\",\n\t\"uscr;\": \"\uD835\uDCCA\",\n\t\"utri;\": \"\u25B5\",\n\t\"Uuml;\": \"\u00DC\",\n\t\"uuml;\": \"\u00FC\",\n\t\"vArr;\": \"\u21D5\",\n\t\"varr;\": \"\u2195\",\n\t\"Vbar;\": \"\u2AEB\",\n\t\"vBar;\": \"\u2AE8\",\n\t\"Vert;\": \"\u2016\",\n\t\"vert;\": \"|\",\n\t\"Vopf;\": \"\uD835\uDD4D\",\n\t\"vopf;\": \"\uD835\uDD67\",\n\t\"Vscr;\": \"\uD835\uDCB1\",\n\t\"vscr;\": \"\uD835\uDCCB\",\n\t\"Wopf;\": \"\uD835\uDD4E\",\n\t\"wopf;\": \"\uD835\uDD68\",\n\t\"Wscr;\": \"\uD835\uDCB2\",\n\t\"wscr;\": \"\uD835\uDCCC\",\n\t\"xcap;\": \"\u22C2\",\n\t\"xcup;\": \"\u22C3\",\n\t\"xmap;\": \"\u27FC\",\n\t\"xnis;\": \"\u22FB\",\n\t\"Xopf;\": \"\uD835\uDD4F\",\n\t\"xopf;\": \"\uD835\uDD69\",\n\t\"Xscr;\": \"\uD835\uDCB3\",\n\t\"xscr;\": \"\uD835\uDCCD\",\n\t\"xvee;\": \"\u22C1\",\n\t\"YAcy;\": \"\u042F\",\n\t\"yacy;\": \"\u044F\",\n\t\"YIcy;\": \"\u0407\",\n\t\"yicy;\": \"\u0457\",\n\t\"Yopf;\": \"\uD835\uDD50\",\n\t\"yopf;\": \"\uD835\uDD6A\",\n\t\"Yscr;\": \"\uD835\uDCB4\",\n\t\"yscr;\": \"\uD835\uDCCE\",\n\t\"YUcy;\": \"\u042E\",\n\t\"yucy;\": \"\u044E\",\n\t\"Yuml;\": \"\u0178\",\n\t\"yuml;\": \"\u00FF\",\n\t\"Zdot;\": \"\u017B\",\n\t\"zdot;\": \"\u017C\",\n\t\"Zeta;\": \"\u0396\",\n\t\"zeta;\": \"\u03B6\",\n\t\"ZHcy;\": \"\u0416\",\n\t\"zhcy;\": \"\u0436\",\n\t\"Zopf;\": \"\u2124\",\n\t\"zopf;\": \"\uD835\uDD6B\",\n\t\"Zscr;\": \"\uD835\uDCB5\",\n\t\"zscr;\": \"\uD835\uDCCF\",\n\t\"zwnj;\": \"\u200C\",\n\tAacute: \"\u00C1\",\n\taacute: \"\u00E1\",\n\t\"Acirc;\": \"\u00C2\",\n\t\"acirc;\": \"\u00E2\",\n\t\"acute;\": \"\u00B4\",\n\t\"AElig;\": \"\u00C6\",\n\t\"aelig;\": \"\u00E6\",\n\tAgrave: \"\u00C0\",\n\tagrave: \"\u00E0\",\n\t\"aleph;\": \"\u2135\",\n\t\"Alpha;\": \"\u0391\",\n\t\"alpha;\": \"\u03B1\",\n\t\"Amacr;\": \"\u0100\",\n\t\"amacr;\": \"\u0101\",\n\t\"amalg;\": \"\u2A3F\",\n\t\"angle;\": \"\u2220\",\n\t\"angrt;\": \"\u221F\",\n\t\"angst;\": \"\u00C5\",\n\t\"Aogon;\": \"\u0104\",\n\t\"aogon;\": \"\u0105\",\n\t\"Aring;\": \"\u00C5\",\n\t\"aring;\": \"\u00E5\",\n\t\"asymp;\": \"\u2248\",\n\tAtilde: \"\u00C3\",\n\tatilde: \"\u00E3\",\n\t\"awint;\": \"\u2A11\",\n\t\"bcong;\": \"\u224C\",\n\t\"bdquo;\": \"\u201E\",\n\t\"bepsi;\": \"\u03F6\",\n\t\"blank;\": \"\u2423\",\n\t\"blk12;\": \"\u2592\",\n\t\"blk14;\": \"\u2591\",\n\t\"blk34;\": \"\u2593\",\n\t\"block;\": \"\u2588\",\n\t\"boxDL;\": \"\u2557\",\n\t\"boxDl;\": \"\u2556\",\n\t\"boxdL;\": \"\u2555\",\n\t\"boxdl;\": \"\u2510\",\n\t\"boxDR;\": \"\u2554\",\n\t\"boxDr;\": \"\u2553\",\n\t\"boxdR;\": \"\u2552\",\n\t\"boxdr;\": \"\u250C\",\n\t\"boxHD;\": \"\u2566\",\n\t\"boxHd;\": \"\u2564\",\n\t\"boxhD;\": \"\u2565\",\n\t\"boxhd;\": \"\u252C\",\n\t\"boxHU;\": \"\u2569\",\n\t\"boxHu;\": \"\u2567\",\n\t\"boxhU;\": \"\u2568\",\n\t\"boxhu;\": \"\u2534\",\n\t\"boxUL;\": \"\u255D\",\n\t\"boxUl;\": \"\u255C\",\n\t\"boxuL;\": \"\u255B\",\n\t\"boxul;\": \"\u2518\",\n\t\"boxUR;\": \"\u255A\",\n\t\"boxUr;\": \"\u2559\",\n\t\"boxuR;\": \"\u2558\",\n\t\"boxur;\": \"\u2514\",\n\t\"boxVH;\": \"\u256C\",\n\t\"boxVh;\": \"\u256B\",\n\t\"boxvH;\": \"\u256A\",\n\t\"boxvh;\": \"\u253C\",\n\t\"boxVL;\": \"\u2563\",\n\t\"boxVl;\": \"\u2562\",\n\t\"boxvL;\": \"\u2561\",\n\t\"boxvl;\": \"\u2524\",\n\t\"boxVR;\": \"\u2560\",\n\t\"boxVr;\": \"\u255F\",\n\t\"boxvR;\": \"\u255E\",\n\t\"boxvr;\": \"\u251C\",\n\t\"Breve;\": \"\u02D8\",\n\t\"breve;\": \"\u02D8\",\n\tbrvbar: \"\u00A6\",\n\t\"bsemi;\": \"\u204F\",\n\t\"bsime;\": \"\u22CD\",\n\t\"bsolb;\": \"\u29C5\",\n\t\"bumpE;\": \"\u2AAE\",\n\t\"bumpe;\": \"\u224F\",\n\t\"caret;\": \"\u2041\",\n\t\"caron;\": \"\u02C7\",\n\t\"ccaps;\": \"\u2A4D\",\n\tCcedil: \"\u00C7\",\n\tccedil: \"\u00E7\",\n\t\"Ccirc;\": \"\u0108\",\n\t\"ccirc;\": \"\u0109\",\n\t\"ccups;\": \"\u2A4C\",\n\t\"cedil;\": \"\u00B8\",\n\t\"check;\": \"\u2713\",\n\t\"clubs;\": \"\u2663\",\n\t\"Colon;\": \"\u2237\",\n\t\"colon;\": \":\",\n\t\"comma;\": \",\",\n\t\"crarr;\": \"\u21B5\",\n\t\"Cross;\": \"\u2A2F\",\n\t\"cross;\": \"\u2717\",\n\t\"csube;\": \"\u2AD1\",\n\t\"csupe;\": \"\u2AD2\",\n\t\"ctdot;\": \"\u22EF\",\n\t\"cuepr;\": \"\u22DE\",\n\t\"cuesc;\": \"\u22DF\",\n\t\"cupor;\": \"\u2A45\",\n\tcurren: \"\u00A4\",\n\t\"cuvee;\": \"\u22CE\",\n\t\"cuwed;\": \"\u22CF\",\n\t\"cwint;\": \"\u2231\",\n\t\"Dashv;\": \"\u2AE4\",\n\t\"dashv;\": \"\u22A3\",\n\t\"dblac;\": \"\u02DD\",\n\t\"ddarr;\": \"\u21CA\",\n\t\"Delta;\": \"\u0394\",\n\t\"delta;\": \"\u03B4\",\n\t\"dharl;\": \"\u21C3\",\n\t\"dharr;\": \"\u21C2\",\n\t\"diams;\": \"\u2666\",\n\t\"disin;\": \"\u22F2\",\n\tdivide: \"\u00F7\",\n\t\"doteq;\": \"\u2250\",\n\t\"dtdot;\": \"\u22F1\",\n\t\"dtrif;\": \"\u25BE\",\n\t\"duarr;\": \"\u21F5\",\n\t\"duhar;\": \"\u296F\",\n\tEacute: \"\u00C9\",\n\teacute: \"\u00E9\",\n\t\"Ecirc;\": \"\u00CA\",\n\t\"ecirc;\": \"\u00EA\",\n\t\"eDDot;\": \"\u2A77\",\n\t\"efDot;\": \"\u2252\",\n\tEgrave: \"\u00C8\",\n\tegrave: \"\u00E8\",\n\t\"Emacr;\": \"\u0112\",\n\t\"emacr;\": \"\u0113\",\n\t\"empty;\": \"\u2205\",\n\t\"Eogon;\": \"\u0118\",\n\t\"eogon;\": \"\u0119\",\n\t\"eplus;\": \"\u2A71\",\n\t\"epsiv;\": \"\u03F5\",\n\t\"eqsim;\": \"\u2242\",\n\t\"Equal;\": \"\u2A75\",\n\t\"equiv;\": \"\u2261\",\n\t\"erarr;\": \"\u2971\",\n\t\"erDot;\": \"\u2253\",\n\t\"esdot;\": \"\u2250\",\n\t\"exist;\": \"\u2203\",\n\t\"fflig;\": \"\uFB00\",\n\t\"filig;\": \"\uFB01\",\n\t\"fjlig;\": \"fj\",\n\t\"fllig;\": \"\uFB02\",\n\t\"fltns;\": \"\u25B1\",\n\t\"forkv;\": \"\u2AD9\",\n\tfrac12: \"\u00BD\",\n\tfrac14: \"\u00BC\",\n\tfrac34: \"\u00BE\",\n\t\"frasl;\": \"\u2044\",\n\t\"frown;\": \"\u2322\",\n\t\"Gamma;\": \"\u0393\",\n\t\"gamma;\": \"\u03B3\",\n\t\"Gcirc;\": \"\u011C\",\n\t\"gcirc;\": \"\u011D\",\n\t\"gescc;\": \"\u2AA9\",\n\t\"gimel;\": \"\u2137\",\n\t\"gneqq;\": \"\u2269\",\n\t\"gnsim;\": \"\u22E7\",\n\t\"grave;\": \"`\",\n\t\"gsime;\": \"\u2A8E\",\n\t\"gsiml;\": \"\u2A90\",\n\t\"gtcir;\": \"\u2A7A\",\n\t\"gtdot;\": \"\u22D7\",\n\t\"Hacek;\": \"\u02C7\",\n\t\"harrw;\": \"\u21AD\",\n\t\"Hcirc;\": \"\u0124\",\n\t\"hcirc;\": \"\u0125\",\n\t\"hoarr;\": \"\u21FF\",\n\tIacute: \"\u00CD\",\n\tiacute: \"\u00ED\",\n\t\"Icirc;\": \"\u00CE\",\n\t\"icirc;\": \"\u00EE\",\n\t\"iexcl;\": \"\u00A1\",\n\tIgrave: \"\u00CC\",\n\tigrave: \"\u00EC\",\n\t\"iiint;\": \"\u222D\",\n\t\"iiota;\": \"\u2129\",\n\t\"IJlig;\": \"\u0132\",\n\t\"ijlig;\": \"\u0133\",\n\t\"Imacr;\": \"\u012A\",\n\t\"imacr;\": \"\u012B\",\n\t\"image;\": \"\u2111\",\n\t\"imath;\": \"\u0131\",\n\t\"imped;\": \"\u01B5\",\n\t\"infin;\": \"\u221E\",\n\t\"Iogon;\": \"\u012E\",\n\t\"iogon;\": \"\u012F\",\n\t\"iprod;\": \"\u2A3C\",\n\tiquest: \"\u00BF\",\n\t\"isinE;\": \"\u22F9\",\n\t\"isins;\": \"\u22F4\",\n\t\"isinv;\": \"\u2208\",\n\t\"Iukcy;\": \"\u0406\",\n\t\"iukcy;\": \"\u0456\",\n\t\"Jcirc;\": \"\u0134\",\n\t\"jcirc;\": \"\u0135\",\n\t\"jmath;\": \"\u0237\",\n\t\"Jukcy;\": \"\u0404\",\n\t\"jukcy;\": \"\u0454\",\n\t\"Kappa;\": \"\u039A\",\n\t\"kappa;\": \"\u03BA\",\n\t\"lAarr;\": \"\u21DA\",\n\t\"langd;\": \"\u2991\",\n\t\"laquo;\": \"\u00AB\",\n\t\"larrb;\": \"\u21E4\",\n\t\"lates;\": \"\u2AAD\uFE00\",\n\t\"lBarr;\": \"\u290E\",\n\t\"lbarr;\": \"\u290C\",\n\t\"lbbrk;\": \"\u2772\",\n\t\"lbrke;\": \"\u298B\",\n\t\"lceil;\": \"\u2308\",\n\t\"ldquo;\": \"\u201C\",\n\t\"lescc;\": \"\u2AA8\",\n\t\"lhard;\": \"\u21BD\",\n\t\"lharu;\": \"\u21BC\",\n\t\"lhblk;\": \"\u2584\",\n\t\"llarr;\": \"\u21C7\",\n\t\"lltri;\": \"\u25FA\",\n\t\"lneqq;\": \"\u2268\",\n\t\"lnsim;\": \"\u22E6\",\n\t\"loang;\": \"\u27EC\",\n\t\"loarr;\": \"\u21FD\",\n\t\"lobrk;\": \"\u27E6\",\n\t\"lopar;\": \"\u2985\",\n\t\"lrarr;\": \"\u21C6\",\n\t\"lrhar;\": \"\u21CB\",\n\t\"lrtri;\": \"\u22BF\",\n\t\"lsime;\": \"\u2A8D\",\n\t\"lsimg;\": \"\u2A8F\",\n\t\"lsquo;\": \"\u2018\",\n\t\"ltcir;\": \"\u2A79\",\n\t\"ltdot;\": \"\u22D6\",\n\t\"ltrie;\": \"\u22B4\",\n\t\"ltrif;\": \"\u25C2\",\n\t\"mdash;\": \"\u2014\",\n\t\"mDDot;\": \"\u223A\",\n\t\"micro;\": \"\u00B5\",\n\tmiddot: \"\u00B7\",\n\t\"minus;\": \"\u2212\",\n\t\"mumap;\": \"\u22B8\",\n\t\"nabla;\": \"\u2207\",\n\t\"napid;\": \"\u224B\u0338\",\n\t\"napos;\": \"\u0149\",\n\t\"natur;\": \"\u266E\",\n\t\"nbump;\": \"\u224E\u0338\",\n\t\"ncong;\": \"\u2247\",\n\t\"ndash;\": \"\u2013\",\n\t\"neArr;\": \"\u21D7\",\n\t\"nearr;\": \"\u2197\",\n\t\"nedot;\": \"\u2250\u0338\",\n\t\"nesim;\": \"\u2242\u0338\",\n\t\"ngeqq;\": \"\u2267\u0338\",\n\t\"ngsim;\": \"\u2275\",\n\t\"nhArr;\": \"\u21CE\",\n\t\"nharr;\": \"\u21AE\",\n\t\"nhpar;\": \"\u2AF2\",\n\t\"nlArr;\": \"\u21CD\",\n\t\"nlarr;\": \"\u219A\",\n\t\"nleqq;\": \"\u2266\u0338\",\n\t\"nless;\": \"\u226E\",\n\t\"nlsim;\": \"\u2274\",\n\t\"nltri;\": \"\u22EA\",\n\t\"notin;\": \"\u2209\",\n\t\"notni;\": \"\u220C\",\n\t\"npart;\": \"\u2202\u0338\",\n\t\"nprec;\": \"\u2280\",\n\t\"nrArr;\": \"\u21CF\",\n\t\"nrarr;\": \"\u219B\",\n\t\"nrtri;\": \"\u22EB\",\n\t\"nsime;\": \"\u2244\",\n\t\"nsmid;\": \"\u2224\",\n\t\"nspar;\": \"\u2226\",\n\t\"nsubE;\": \"\u2AC5\u0338\",\n\t\"nsube;\": \"\u2288\",\n\t\"nsucc;\": \"\u2281\",\n\t\"nsupE;\": \"\u2AC6\u0338\",\n\t\"nsupe;\": \"\u2289\",\n\tNtilde: \"\u00D1\",\n\tntilde: \"\u00F1\",\n\t\"numsp;\": \"\u2007\",\n\t\"nvsim;\": \"\u223C\u20D2\",\n\t\"nwArr;\": \"\u21D6\",\n\t\"nwarr;\": \"\u2196\",\n\tOacute: \"\u00D3\",\n\toacute: \"\u00F3\",\n\t\"Ocirc;\": \"\u00D4\",\n\t\"ocirc;\": \"\u00F4\",\n\t\"odash;\": \"\u229D\",\n\t\"OElig;\": \"\u0152\",\n\t\"oelig;\": \"\u0153\",\n\t\"ofcir;\": \"\u29BF\",\n\tOgrave: \"\u00D2\",\n\tograve: \"\u00F2\",\n\t\"ohbar;\": \"\u29B5\",\n\t\"olarr;\": \"\u21BA\",\n\t\"olcir;\": \"\u29BE\",\n\t\"oline;\": \"\u203E\",\n\t\"Omacr;\": \"\u014C\",\n\t\"omacr;\": \"\u014D\",\n\t\"Omega;\": \"\u03A9\",\n\t\"omega;\": \"\u03C9\",\n\t\"operp;\": \"\u29B9\",\n\t\"oplus;\": \"\u2295\",\n\t\"orarr;\": \"\u21BB\",\n\t\"order;\": \"\u2134\",\n\tOslash: \"\u00D8\",\n\toslash: \"\u00F8\",\n\tOtilde: \"\u00D5\",\n\totilde: \"\u00F5\",\n\t\"ovbar;\": \"\u233D\",\n\t\"parsl;\": \"\u2AFD\",\n\t\"phone;\": \"\u260E\",\n\t\"plusb;\": \"\u229E\",\n\t\"pluse;\": \"\u2A72\",\n\tplusmn: \"\u00B1\",\n\t\"pound;\": \"\u00A3\",\n\t\"prcue;\": \"\u227C\",\n\t\"Prime;\": \"\u2033\",\n\t\"prime;\": \"\u2032\",\n\t\"prnap;\": \"\u2AB9\",\n\t\"prsim;\": \"\u227E\",\n\t\"quest;\": \"?\",\n\t\"rAarr;\": \"\u21DB\",\n\t\"radic;\": \"\u221A\",\n\t\"rangd;\": \"\u2992\",\n\t\"range;\": \"\u29A5\",\n\t\"raquo;\": \"\u00BB\",\n\t\"rarrb;\": \"\u21E5\",\n\t\"rarrc;\": \"\u2933\",\n\t\"rarrw;\": \"\u219D\",\n\t\"ratio;\": \"\u2236\",\n\t\"RBarr;\": \"\u2910\",\n\t\"rBarr;\": \"\u290F\",\n\t\"rbarr;\": \"\u290D\",\n\t\"rbbrk;\": \"\u2773\",\n\t\"rbrke;\": \"\u298C\",\n\t\"rceil;\": \"\u2309\",\n\t\"rdquo;\": \"\u201D\",\n\t\"reals;\": \"\u211D\",\n\t\"rhard;\": \"\u21C1\",\n\t\"rharu;\": \"\u21C0\",\n\t\"rlarr;\": \"\u21C4\",\n\t\"rlhar;\": \"\u21CC\",\n\t\"rnmid;\": \"\u2AEE\",\n\t\"roang;\": \"\u27ED\",\n\t\"roarr;\": \"\u21FE\",\n\t\"robrk;\": \"\u27E7\",\n\t\"ropar;\": \"\u2986\",\n\t\"rrarr;\": \"\u21C9\",\n\t\"rsquo;\": \"\u2019\",\n\t\"rtrie;\": \"\u22B5\",\n\t\"rtrif;\": \"\u25B8\",\n\t\"sbquo;\": \"\u201A\",\n\t\"sccue;\": \"\u227D\",\n\t\"Scirc;\": \"\u015C\",\n\t\"scirc;\": \"\u015D\",\n\t\"scnap;\": \"\u2ABA\",\n\t\"scsim;\": \"\u227F\",\n\t\"sdotb;\": \"\u22A1\",\n\t\"sdote;\": \"\u2A66\",\n\t\"seArr;\": \"\u21D8\",\n\t\"searr;\": \"\u2198\",\n\t\"setmn;\": \"\u2216\",\n\t\"sharp;\": \"\u266F\",\n\t\"Sigma;\": \"\u03A3\",\n\t\"sigma;\": \"\u03C3\",\n\t\"simeq;\": \"\u2243\",\n\t\"simgE;\": \"\u2AA0\",\n\t\"simlE;\": \"\u2A9F\",\n\t\"simne;\": \"\u2246\",\n\t\"slarr;\": \"\u2190\",\n\t\"smile;\": \"\u2323\",\n\t\"smtes;\": \"\u2AAC\uFE00\",\n\t\"sqcap;\": \"\u2293\",\n\t\"sqcup;\": \"\u2294\",\n\t\"sqsub;\": \"\u228F\",\n\t\"sqsup;\": \"\u2290\",\n\t\"srarr;\": \"\u2192\",\n\t\"starf;\": \"\u2605\",\n\t\"strns;\": \"\u00AF\",\n\t\"subnE;\": \"\u2ACB\",\n\t\"subne;\": \"\u228A\",\n\t\"supnE;\": \"\u2ACC\",\n\t\"supne;\": \"\u228B\",\n\t\"swArr;\": \"\u21D9\",\n\t\"swarr;\": \"\u2199\",\n\t\"szlig;\": \"\u00DF\",\n\t\"Theta;\": \"\u0398\",\n\t\"theta;\": \"\u03B8\",\n\t\"thkap;\": \"\u2248\",\n\t\"THORN;\": \"\u00DE\",\n\t\"thorn;\": \"\u00FE\",\n\t\"Tilde;\": \"\u223C\",\n\t\"tilde;\": \"\u02DC\",\n\t\"times;\": \"\u00D7\",\n\t\"TRADE;\": \"\u2122\",\n\t\"trade;\": \"\u2122\",\n\t\"trisb;\": \"\u29CD\",\n\t\"TSHcy;\": \"\u040B\",\n\t\"tshcy;\": \"\u045B\",\n\t\"twixt;\": \"\u226C\",\n\tUacute: \"\u00DA\",\n\tuacute: \"\u00FA\",\n\t\"Ubrcy;\": \"\u040E\",\n\t\"ubrcy;\": \"\u045E\",\n\t\"Ucirc;\": \"\u00DB\",\n\t\"ucirc;\": \"\u00FB\",\n\t\"udarr;\": \"\u21C5\",\n\t\"udhar;\": \"\u296E\",\n\tUgrave: \"\u00D9\",\n\tugrave: \"\u00F9\",\n\t\"uharl;\": \"\u21BF\",\n\t\"uharr;\": \"\u21BE\",\n\t\"uhblk;\": \"\u2580\",\n\t\"ultri;\": \"\u25F8\",\n\t\"Umacr;\": \"\u016A\",\n\t\"umacr;\": \"\u016B\",\n\t\"Union;\": \"\u22C3\",\n\t\"Uogon;\": \"\u0172\",\n\t\"uogon;\": \"\u0173\",\n\t\"uplus;\": \"\u228E\",\n\t\"upsih;\": \"\u03D2\",\n\t\"UpTee;\": \"\u22A5\",\n\t\"Uring;\": \"\u016E\",\n\t\"uring;\": \"\u016F\",\n\t\"urtri;\": \"\u25F9\",\n\t\"utdot;\": \"\u22F0\",\n\t\"utrif;\": \"\u25B4\",\n\t\"uuarr;\": \"\u21C8\",\n\t\"varpi;\": \"\u03D6\",\n\t\"vBarv;\": \"\u2AE9\",\n\t\"VDash;\": \"\u22AB\",\n\t\"Vdash;\": \"\u22A9\",\n\t\"vDash;\": \"\u22A8\",\n\t\"vdash;\": \"\u22A2\",\n\t\"veeeq;\": \"\u225A\",\n\t\"vltri;\": \"\u22B2\",\n\t\"vnsub;\": \"\u2282\u20D2\",\n\t\"vnsup;\": \"\u2283\u20D2\",\n\t\"vprop;\": \"\u221D\",\n\t\"vrtri;\": \"\u22B3\",\n\t\"Wcirc;\": \"\u0174\",\n\t\"wcirc;\": \"\u0175\",\n\t\"Wedge;\": \"\u22C0\",\n\t\"wedge;\": \"\u2227\",\n\t\"xcirc;\": \"\u25EF\",\n\t\"xdtri;\": \"\u25BD\",\n\t\"xhArr;\": \"\u27FA\",\n\t\"xharr;\": \"\u27F7\",\n\t\"xlArr;\": \"\u27F8\",\n\t\"xlarr;\": \"\u27F5\",\n\t\"xodot;\": \"\u2A00\",\n\t\"xrArr;\": \"\u27F9\",\n\t\"xrarr;\": \"\u27F6\",\n\t\"xutri;\": \"\u25B3\",\n\tYacute: \"\u00DD\",\n\tyacute: \"\u00FD\",\n\t\"Ycirc;\": \"\u0176\",\n\t\"ycirc;\": \"\u0177\",\n\t\"Aacute;\": \"\u00C1\",\n\t\"aacute;\": \"\u00E1\",\n\t\"Abreve;\": \"\u0102\",\n\t\"abreve;\": \"\u0103\",\n\t\"Agrave;\": \"\u00C0\",\n\t\"agrave;\": \"\u00E0\",\n\t\"andand;\": \"\u2A55\",\n\t\"angmsd;\": \"\u2221\",\n\t\"angsph;\": \"\u2222\",\n\t\"apacir;\": \"\u2A6F\",\n\t\"approx;\": \"\u2248\",\n\t\"Assign;\": \"\u2254\",\n\t\"Atilde;\": \"\u00C3\",\n\t\"atilde;\": \"\u00E3\",\n\t\"barvee;\": \"\u22BD\",\n\t\"Barwed;\": \"\u2306\",\n\t\"barwed;\": \"\u2305\",\n\t\"becaus;\": \"\u2235\",\n\t\"bernou;\": \"\u212C\",\n\t\"bigcap;\": \"\u22C2\",\n\t\"bigcup;\": \"\u22C3\",\n\t\"bigvee;\": \"\u22C1\",\n\t\"bkarow;\": \"\u290D\",\n\t\"bottom;\": \"\u22A5\",\n\t\"bowtie;\": \"\u22C8\",\n\t\"boxbox;\": \"\u29C9\",\n\t\"bprime;\": \"\u2035\",\n\t\"brvbar;\": \"\u00A6\",\n\t\"bullet;\": \"\u2022\",\n\t\"Bumpeq;\": \"\u224E\",\n\t\"bumpeq;\": \"\u224F\",\n\t\"Cacute;\": \"\u0106\",\n\t\"cacute;\": \"\u0107\",\n\t\"capand;\": \"\u2A44\",\n\t\"capcap;\": \"\u2A4B\",\n\t\"capcup;\": \"\u2A47\",\n\t\"capdot;\": \"\u2A40\",\n\t\"Ccaron;\": \"\u010C\",\n\t\"ccaron;\": \"\u010D\",\n\t\"Ccedil;\": \"\u00C7\",\n\t\"ccedil;\": \"\u00E7\",\n\t\"circeq;\": \"\u2257\",\n\t\"cirmid;\": \"\u2AEF\",\n\t\"Colone;\": \"\u2A74\",\n\t\"colone;\": \"\u2254\",\n\t\"commat;\": \"@\",\n\t\"compfn;\": \"\u2218\",\n\t\"Conint;\": \"\u222F\",\n\t\"conint;\": \"\u222E\",\n\t\"coprod;\": \"\u2210\",\n\t\"copysr;\": \"\u2117\",\n\t\"cularr;\": \"\u21B6\",\n\t\"CupCap;\": \"\u224D\",\n\t\"cupcap;\": \"\u2A46\",\n\t\"cupcup;\": \"\u2A4A\",\n\t\"cupdot;\": \"\u228D\",\n\t\"curarr;\": \"\u21B7\",\n\t\"curren;\": \"\u00A4\",\n\t\"cylcty;\": \"\u232D\",\n\t\"Dagger;\": \"\u2021\",\n\t\"dagger;\": \"\u2020\",\n\t\"daleth;\": \"\u2138\",\n\t\"Dcaron;\": \"\u010E\",\n\t\"dcaron;\": \"\u010F\",\n\t\"dfisht;\": \"\u297F\",\n\t\"divide;\": \"\u00F7\",\n\t\"divonx;\": \"\u22C7\",\n\t\"dlcorn;\": \"\u231E\",\n\t\"dlcrop;\": \"\u230D\",\n\t\"dollar;\": \"$\",\n\t\"DotDot;\": \"\u20DC\",\n\t\"drcorn;\": \"\u231F\",\n\t\"drcrop;\": \"\u230C\",\n\t\"Dstrok;\": \"\u0110\",\n\t\"dstrok;\": \"\u0111\",\n\t\"Eacute;\": \"\u00C9\",\n\t\"eacute;\": \"\u00E9\",\n\t\"easter;\": \"\u2A6E\",\n\t\"Ecaron;\": \"\u011A\",\n\t\"ecaron;\": \"\u011B\",\n\t\"ecolon;\": \"\u2255\",\n\t\"Egrave;\": \"\u00C8\",\n\t\"egrave;\": \"\u00E8\",\n\t\"egsdot;\": \"\u2A98\",\n\t\"elsdot;\": \"\u2A97\",\n\t\"emptyv;\": \"\u2205\",\n\t\"emsp13;\": \"\u2004\",\n\t\"emsp14;\": \"\u2005\",\n\t\"eparsl;\": \"\u29E3\",\n\t\"eqcirc;\": \"\u2256\",\n\t\"equals;\": \"=\",\n\t\"equest;\": \"\u225F\",\n\t\"Exists;\": \"\u2203\",\n\t\"female;\": \"\u2640\",\n\t\"ffilig;\": \"\uFB03\",\n\t\"ffllig;\": \"\uFB04\",\n\t\"ForAll;\": \"\u2200\",\n\t\"forall;\": \"\u2200\",\n\t\"frac12;\": \"\u00BD\",\n\t\"frac13;\": \"\u2153\",\n\t\"frac14;\": \"\u00BC\",\n\t\"frac15;\": \"\u2155\",\n\t\"frac16;\": \"\u2159\",\n\t\"frac18;\": \"\u215B\",\n\t\"frac23;\": \"\u2154\",\n\t\"frac25;\": \"\u2156\",\n\t\"frac34;\": \"\u00BE\",\n\t\"frac35;\": \"\u2157\",\n\t\"frac38;\": \"\u215C\",\n\t\"frac45;\": \"\u2158\",\n\t\"frac56;\": \"\u215A\",\n\t\"frac58;\": \"\u215D\",\n\t\"frac78;\": \"\u215E\",\n\t\"gacute;\": \"\u01F5\",\n\t\"Gammad;\": \"\u03DC\",\n\t\"gammad;\": \"\u03DD\",\n\t\"Gbreve;\": \"\u011E\",\n\t\"gbreve;\": \"\u011F\",\n\t\"Gcedil;\": \"\u0122\",\n\t\"gesdot;\": \"\u2A80\",\n\t\"gesles;\": \"\u2A94\",\n\t\"gtlPar;\": \"\u2995\",\n\t\"gtrarr;\": \"\u2978\",\n\t\"gtrdot;\": \"\u22D7\",\n\t\"gtrsim;\": \"\u2273\",\n\t\"hairsp;\": \"\u200A\",\n\t\"hamilt;\": \"\u210B\",\n\t\"HARDcy;\": \"\u042A\",\n\t\"hardcy;\": \"\u044A\",\n\t\"hearts;\": \"\u2665\",\n\t\"hellip;\": \"\u2026\",\n\t\"hercon;\": \"\u22B9\",\n\t\"homtht;\": \"\u223B\",\n\t\"horbar;\": \"\u2015\",\n\t\"hslash;\": \"\u210F\",\n\t\"Hstrok;\": \"\u0126\",\n\t\"hstrok;\": \"\u0127\",\n\t\"hybull;\": \"\u2043\",\n\t\"hyphen;\": \"\u2010\",\n\t\"Iacute;\": \"\u00CD\",\n\t\"iacute;\": \"\u00ED\",\n\t\"Igrave;\": \"\u00CC\",\n\t\"igrave;\": \"\u00EC\",\n\t\"iiiint;\": \"\u2A0C\",\n\t\"iinfin;\": \"\u29DC\",\n\t\"incare;\": \"\u2105\",\n\t\"inodot;\": \"\u0131\",\n\t\"intcal;\": \"\u22BA\",\n\t\"iquest;\": \"\u00BF\",\n\t\"isinsv;\": \"\u22F3\",\n\t\"Itilde;\": \"\u0128\",\n\t\"itilde;\": \"\u0129\",\n\t\"Jsercy;\": \"\u0408\",\n\t\"jsercy;\": \"\u0458\",\n\t\"kappav;\": \"\u03F0\",\n\t\"Kcedil;\": \"\u0136\",\n\t\"kcedil;\": \"\u0137\",\n\t\"kgreen;\": \"\u0138\",\n\t\"Lacute;\": \"\u0139\",\n\t\"lacute;\": \"\u013A\",\n\t\"lagran;\": \"\u2112\",\n\t\"Lambda;\": \"\u039B\",\n\t\"lambda;\": \"\u03BB\",\n\t\"langle;\": \"\u27E8\",\n\t\"larrfs;\": \"\u291D\",\n\t\"larrhk;\": \"\u21A9\",\n\t\"larrlp;\": \"\u21AB\",\n\t\"larrpl;\": \"\u2939\",\n\t\"larrtl;\": \"\u21A2\",\n\t\"lAtail;\": \"\u291B\",\n\t\"latail;\": \"\u2919\",\n\t\"lbrace;\": \"{\",\n\t\"lbrack;\": \"[\",\n\t\"Lcaron;\": \"\u013D\",\n\t\"lcaron;\": \"\u013E\",\n\t\"Lcedil;\": \"\u013B\",\n\t\"lcedil;\": \"\u013C\",\n\t\"ldquor;\": \"\u201E\",\n\t\"lesdot;\": \"\u2A7F\",\n\t\"lesges;\": \"\u2A93\",\n\t\"lfisht;\": \"\u297C\",\n\t\"lfloor;\": \"\u230A\",\n\t\"lharul;\": \"\u296A\",\n\t\"llhard;\": \"\u296B\",\n\t\"Lmidot;\": \"\u013F\",\n\t\"lmidot;\": \"\u0140\",\n\t\"lmoust;\": \"\u23B0\",\n\t\"loplus;\": \"\u2A2D\",\n\t\"lowast;\": \"\u2217\",\n\t\"lowbar;\": \"_\",\n\t\"lparlt;\": \"\u2993\",\n\t\"lrhard;\": \"\u296D\",\n\t\"lsaquo;\": \"\u2039\",\n\t\"lsquor;\": \"\u201A\",\n\t\"Lstrok;\": \"\u0141\",\n\t\"lstrok;\": \"\u0142\",\n\t\"lthree;\": \"\u22CB\",\n\t\"ltimes;\": \"\u22C9\",\n\t\"ltlarr;\": \"\u2976\",\n\t\"ltrPar;\": \"\u2996\",\n\t\"mapsto;\": \"\u21A6\",\n\t\"marker;\": \"\u25AE\",\n\t\"mcomma;\": \"\u2A29\",\n\t\"midast;\": \"*\",\n\t\"midcir;\": \"\u2AF0\",\n\t\"middot;\": \"\u00B7\",\n\t\"minusb;\": \"\u229F\",\n\t\"minusd;\": \"\u2238\",\n\t\"mnplus;\": \"\u2213\",\n\t\"models;\": \"\u22A7\",\n\t\"mstpos;\": \"\u223E\",\n\t\"Nacute;\": \"\u0143\",\n\t\"nacute;\": \"\u0144\",\n\t\"nbumpe;\": \"\u224F\u0338\",\n\t\"Ncaron;\": \"\u0147\",\n\t\"ncaron;\": \"\u0148\",\n\t\"Ncedil;\": \"\u0145\",\n\t\"ncedil;\": \"\u0146\",\n\t\"nearhk;\": \"\u2924\",\n\t\"nequiv;\": \"\u2262\",\n\t\"nesear;\": \"\u2928\",\n\t\"nexist;\": \"\u2204\",\n\t\"nltrie;\": \"\u22EC\",\n\t\"notinE;\": \"\u22F9\u0338\",\n\t\"nparsl;\": \"\u2AFD\u20E5\",\n\t\"nprcue;\": \"\u22E0\",\n\t\"nrarrc;\": \"\u2933\u0338\",\n\t\"nrarrw;\": \"\u219D\u0338\",\n\t\"nrtrie;\": \"\u22ED\",\n\t\"nsccue;\": \"\u22E1\",\n\t\"nsimeq;\": \"\u2244\",\n\t\"Ntilde;\": \"\u00D1\",\n\t\"ntilde;\": \"\u00F1\",\n\t\"numero;\": \"\u2116\",\n\t\"nVDash;\": \"\u22AF\",\n\t\"nVdash;\": \"\u22AE\",\n\t\"nvDash;\": \"\u22AD\",\n\t\"nvdash;\": \"\u22AC\",\n\t\"nvHarr;\": \"\u2904\",\n\t\"nvlArr;\": \"\u2902\",\n\t\"nvrArr;\": \"\u2903\",\n\t\"nwarhk;\": \"\u2923\",\n\t\"nwnear;\": \"\u2927\",\n\t\"Oacute;\": \"\u00D3\",\n\t\"oacute;\": \"\u00F3\",\n\t\"Odblac;\": \"\u0150\",\n\t\"odblac;\": \"\u0151\",\n\t\"odsold;\": \"\u29BC\",\n\t\"Ograve;\": \"\u00D2\",\n\t\"ograve;\": \"\u00F2\",\n\t\"ominus;\": \"\u2296\",\n\t\"origof;\": \"\u22B6\",\n\t\"Oslash;\": \"\u00D8\",\n\t\"oslash;\": \"\u00F8\",\n\t\"Otilde;\": \"\u00D5\",\n\t\"otilde;\": \"\u00F5\",\n\t\"Otimes;\": \"\u2A37\",\n\t\"otimes;\": \"\u2297\",\n\t\"parsim;\": \"\u2AF3\",\n\t\"percnt;\": \"%\",\n\t\"period;\": \".\",\n\t\"permil;\": \"\u2030\",\n\t\"phmmat;\": \"\u2133\",\n\t\"planck;\": \"\u210F\",\n\t\"plankv;\": \"\u210F\",\n\t\"plusdo;\": \"\u2214\",\n\t\"plusdu;\": \"\u2A25\",\n\t\"plusmn;\": \"\u00B1\",\n\t\"preceq;\": \"\u2AAF\",\n\t\"primes;\": \"\u2119\",\n\t\"prnsim;\": \"\u22E8\",\n\t\"propto;\": \"\u221D\",\n\t\"prurel;\": \"\u22B0\",\n\t\"puncsp;\": \"\u2008\",\n\t\"qprime;\": \"\u2057\",\n\t\"Racute;\": \"\u0154\",\n\t\"racute;\": \"\u0155\",\n\t\"rangle;\": \"\u27E9\",\n\t\"rarrap;\": \"\u2975\",\n\t\"rarrfs;\": \"\u291E\",\n\t\"rarrhk;\": \"\u21AA\",\n\t\"rarrlp;\": \"\u21AC\",\n\t\"rarrpl;\": \"\u2945\",\n\t\"Rarrtl;\": \"\u2916\",\n\t\"rarrtl;\": \"\u21A3\",\n\t\"rAtail;\": \"\u291C\",\n\t\"ratail;\": \"\u291A\",\n\t\"rbrace;\": \"}\",\n\t\"rbrack;\": \"]\",\n\t\"Rcaron;\": \"\u0158\",\n\t\"rcaron;\": \"\u0159\",\n\t\"Rcedil;\": \"\u0156\",\n\t\"rcedil;\": \"\u0157\",\n\t\"rdquor;\": \"\u201D\",\n\t\"rfisht;\": \"\u297D\",\n\t\"rfloor;\": \"\u230B\",\n\t\"rharul;\": \"\u296C\",\n\t\"rmoust;\": \"\u23B1\",\n\t\"roplus;\": \"\u2A2E\",\n\t\"rpargt;\": \"\u2994\",\n\t\"rsaquo;\": \"\u203A\",\n\t\"rsquor;\": \"\u2019\",\n\t\"rthree;\": \"\u22CC\",\n\t\"rtimes;\": \"\u22CA\",\n\t\"Sacute;\": \"\u015A\",\n\t\"sacute;\": \"\u015B\",\n\t\"Scaron;\": \"\u0160\",\n\t\"scaron;\": \"\u0161\",\n\t\"Scedil;\": \"\u015E\",\n\t\"scedil;\": \"\u015F\",\n\t\"scnsim;\": \"\u22E9\",\n\t\"searhk;\": \"\u2925\",\n\t\"seswar;\": \"\u2929\",\n\t\"sfrown;\": \"\u2322\",\n\t\"SHCHcy;\": \"\u0429\",\n\t\"shchcy;\": \"\u0449\",\n\t\"sigmaf;\": \"\u03C2\",\n\t\"sigmav;\": \"\u03C2\",\n\t\"simdot;\": \"\u2A6A\",\n\t\"smashp;\": \"\u2A33\",\n\t\"SOFTcy;\": \"\u042C\",\n\t\"softcy;\": \"\u044C\",\n\t\"solbar;\": \"\u233F\",\n\t\"spades;\": \"\u2660\",\n\t\"sqcaps;\": \"\u2293\uFE00\",\n\t\"sqcups;\": \"\u2294\uFE00\",\n\t\"sqsube;\": \"\u2291\",\n\t\"sqsupe;\": \"\u2292\",\n\t\"Square;\": \"\u25A1\",\n\t\"square;\": \"\u25A1\",\n\t\"squarf;\": \"\u25AA\",\n\t\"ssetmn;\": \"\u2216\",\n\t\"ssmile;\": \"\u2323\",\n\t\"sstarf;\": \"\u22C6\",\n\t\"subdot;\": \"\u2ABD\",\n\t\"Subset;\": \"\u22D0\",\n\t\"subset;\": \"\u2282\",\n\t\"subsim;\": \"\u2AC7\",\n\t\"subsub;\": \"\u2AD5\",\n\t\"subsup;\": \"\u2AD3\",\n\t\"succeq;\": \"\u2AB0\",\n\t\"supdot;\": \"\u2ABE\",\n\t\"Supset;\": \"\u22D1\",\n\t\"supset;\": \"\u2283\",\n\t\"supsim;\": \"\u2AC8\",\n\t\"supsub;\": \"\u2AD4\",\n\t\"supsup;\": \"\u2AD6\",\n\t\"swarhk;\": \"\u2926\",\n\t\"swnwar;\": \"\u292A\",\n\t\"target;\": \"\u2316\",\n\t\"Tcaron;\": \"\u0164\",\n\t\"tcaron;\": \"\u0165\",\n\t\"Tcedil;\": \"\u0162\",\n\t\"tcedil;\": \"\u0163\",\n\t\"telrec;\": \"\u2315\",\n\t\"there4;\": \"\u2234\",\n\t\"thetav;\": \"\u03D1\",\n\t\"thinsp;\": \"\u2009\",\n\t\"thksim;\": \"\u223C\",\n\t\"timesb;\": \"\u22A0\",\n\t\"timesd;\": \"\u2A30\",\n\t\"topbot;\": \"\u2336\",\n\t\"topcir;\": \"\u2AF1\",\n\t\"tprime;\": \"\u2034\",\n\t\"tridot;\": \"\u25EC\",\n\t\"Tstrok;\": \"\u0166\",\n\t\"tstrok;\": \"\u0167\",\n\t\"Uacute;\": \"\u00DA\",\n\t\"uacute;\": \"\u00FA\",\n\t\"Ubreve;\": \"\u016C\",\n\t\"ubreve;\": \"\u016D\",\n\t\"Udblac;\": \"\u0170\",\n\t\"udblac;\": \"\u0171\",\n\t\"ufisht;\": \"\u297E\",\n\t\"Ugrave;\": \"\u00D9\",\n\t\"ugrave;\": \"\u00F9\",\n\t\"ulcorn;\": \"\u231C\",\n\t\"ulcrop;\": \"\u230F\",\n\t\"urcorn;\": \"\u231D\",\n\t\"urcrop;\": \"\u230E\",\n\t\"Utilde;\": \"\u0168\",\n\t\"utilde;\": \"\u0169\",\n\t\"vangrt;\": \"\u299C\",\n\t\"varphi;\": \"\u03D5\",\n\t\"varrho;\": \"\u03F1\",\n\t\"Vdashl;\": \"\u2AE6\",\n\t\"veebar;\": \"\u22BB\",\n\t\"vellip;\": \"\u22EE\",\n\t\"Verbar;\": \"\u2016\",\n\t\"verbar;\": \"|\",\n\t\"vsubnE;\": \"\u2ACB\uFE00\",\n\t\"vsubne;\": \"\u228A\uFE00\",\n\t\"vsupnE;\": \"\u2ACC\uFE00\",\n\t\"vsupne;\": \"\u228B\uFE00\",\n\t\"Vvdash;\": \"\u22AA\",\n\t\"wedbar;\": \"\u2A5F\",\n\t\"wedgeq;\": \"\u2259\",\n\t\"weierp;\": \"\u2118\",\n\t\"wreath;\": \"\u2240\",\n\t\"xoplus;\": \"\u2A01\",\n\t\"xotime;\": \"\u2A02\",\n\t\"xsqcup;\": \"\u2A06\",\n\t\"xuplus;\": \"\u2A04\",\n\t\"xwedge;\": \"\u22C0\",\n\t\"Yacute;\": \"\u00DD\",\n\t\"yacute;\": \"\u00FD\",\n\t\"Zacute;\": \"\u0179\",\n\t\"zacute;\": \"\u017A\",\n\t\"Zcaron;\": \"\u017D\",\n\t\"zcaron;\": \"\u017E\",\n\t\"zeetrf;\": \"\u2128\",\n\t\"alefsym;\": \"\u2135\",\n\t\"angrtvb;\": \"\u22BE\",\n\t\"angzarr;\": \"\u237C\",\n\t\"asympeq;\": \"\u224D\",\n\t\"backsim;\": \"\u223D\",\n\t\"Because;\": \"\u2235\",\n\t\"because;\": \"\u2235\",\n\t\"bemptyv;\": \"\u29B0\",\n\t\"between;\": \"\u226C\",\n\t\"bigcirc;\": \"\u25EF\",\n\t\"bigodot;\": \"\u2A00\",\n\t\"bigstar;\": \"\u2605\",\n\t\"bnequiv;\": \"\u2261\u20E5\",\n\t\"boxplus;\": \"\u229E\",\n\t\"Cayleys;\": \"\u212D\",\n\t\"Cconint;\": \"\u2230\",\n\t\"ccupssm;\": \"\u2A50\",\n\t\"Cedilla;\": \"\u00B8\",\n\t\"cemptyv;\": \"\u29B2\",\n\t\"cirscir;\": \"\u29C2\",\n\t\"coloneq;\": \"\u2254\",\n\t\"congdot;\": \"\u2A6D\",\n\t\"cudarrl;\": \"\u2938\",\n\t\"cudarrr;\": \"\u2935\",\n\t\"cularrp;\": \"\u293D\",\n\t\"curarrm;\": \"\u293C\",\n\t\"dbkarow;\": \"\u290F\",\n\t\"ddagger;\": \"\u2021\",\n\t\"ddotseq;\": \"\u2A77\",\n\t\"demptyv;\": \"\u29B1\",\n\t\"Diamond;\": \"\u22C4\",\n\t\"diamond;\": \"\u22C4\",\n\t\"digamma;\": \"\u03DD\",\n\t\"dotplus;\": \"\u2214\",\n\t\"DownTee;\": \"\u22A4\",\n\t\"dwangle;\": \"\u29A6\",\n\t\"Element;\": \"\u2208\",\n\t\"Epsilon;\": \"\u0395\",\n\t\"epsilon;\": \"\u03B5\",\n\t\"eqcolon;\": \"\u2255\",\n\t\"equivDD;\": \"\u2A78\",\n\t\"gesdoto;\": \"\u2A82\",\n\t\"gtquest;\": \"\u2A7C\",\n\t\"gtrless;\": \"\u2277\",\n\t\"harrcir;\": \"\u2948\",\n\t\"Implies;\": \"\u21D2\",\n\t\"intprod;\": \"\u2A3C\",\n\t\"isindot;\": \"\u22F5\",\n\t\"larrbfs;\": \"\u291F\",\n\t\"larrsim;\": \"\u2973\",\n\t\"lbrksld;\": \"\u298F\",\n\t\"lbrkslu;\": \"\u298D\",\n\t\"ldrdhar;\": \"\u2967\",\n\t\"LeftTee;\": \"\u22A3\",\n\t\"lesdoto;\": \"\u2A81\",\n\t\"lessdot;\": \"\u22D6\",\n\t\"lessgtr;\": \"\u2276\",\n\t\"lesssim;\": \"\u2272\",\n\t\"lotimes;\": \"\u2A34\",\n\t\"lozenge;\": \"\u25CA\",\n\t\"ltquest;\": \"\u2A7B\",\n\t\"luruhar;\": \"\u2966\",\n\t\"maltese;\": \"\u2720\",\n\t\"minusdu;\": \"\u2A2A\",\n\t\"napprox;\": \"\u2249\",\n\t\"natural;\": \"\u266E\",\n\t\"nearrow;\": \"\u2197\",\n\t\"NewLine;\": \"\\n\",\n\t\"nexists;\": \"\u2204\",\n\t\"NoBreak;\": \"\u2060\",\n\t\"notinva;\": \"\u2209\",\n\t\"notinvb;\": \"\u22F7\",\n\t\"notinvc;\": \"\u22F6\",\n\t\"NotLess;\": \"\u226E\",\n\t\"notniva;\": \"\u220C\",\n\t\"notnivb;\": \"\u22FE\",\n\t\"notnivc;\": \"\u22FD\",\n\t\"npolint;\": \"\u2A14\",\n\t\"npreceq;\": \"\u2AAF\u0338\",\n\t\"nsqsube;\": \"\u22E2\",\n\t\"nsqsupe;\": \"\u22E3\",\n\t\"nsubset;\": \"\u2282\u20D2\",\n\t\"nsucceq;\": \"\u2AB0\u0338\",\n\t\"nsupset;\": \"\u2283\u20D2\",\n\t\"nvinfin;\": \"\u29DE\",\n\t\"nvltrie;\": \"\u22B4\u20D2\",\n\t\"nvrtrie;\": \"\u22B5\u20D2\",\n\t\"nwarrow;\": \"\u2196\",\n\t\"olcross;\": \"\u29BB\",\n\t\"Omicron;\": \"\u039F\",\n\t\"omicron;\": \"\u03BF\",\n\t\"orderof;\": \"\u2134\",\n\t\"orslope;\": \"\u2A57\",\n\t\"OverBar;\": \"\u203E\",\n\t\"pertenk;\": \"\u2031\",\n\t\"planckh;\": \"\u210E\",\n\t\"pluscir;\": \"\u2A22\",\n\t\"plussim;\": \"\u2A26\",\n\t\"plustwo;\": \"\u2A27\",\n\t\"precsim;\": \"\u227E\",\n\t\"Product;\": \"\u220F\",\n\t\"quatint;\": \"\u2A16\",\n\t\"questeq;\": \"\u225F\",\n\t\"rarrbfs;\": \"\u2920\",\n\t\"rarrsim;\": \"\u2974\",\n\t\"rbrksld;\": \"\u298E\",\n\t\"rbrkslu;\": \"\u2990\",\n\t\"rdldhar;\": \"\u2969\",\n\t\"realine;\": \"\u211B\",\n\t\"rotimes;\": \"\u2A35\",\n\t\"ruluhar;\": \"\u2968\",\n\t\"searrow;\": \"\u2198\",\n\t\"simplus;\": \"\u2A24\",\n\t\"simrarr;\": \"\u2972\",\n\t\"subedot;\": \"\u2AC3\",\n\t\"submult;\": \"\u2AC1\",\n\t\"subplus;\": \"\u2ABF\",\n\t\"subrarr;\": \"\u2979\",\n\t\"succsim;\": \"\u227F\",\n\t\"supdsub;\": \"\u2AD8\",\n\t\"supedot;\": \"\u2AC4\",\n\t\"suphsol;\": \"\u27C9\",\n\t\"suphsub;\": \"\u2AD7\",\n\t\"suplarr;\": \"\u297B\",\n\t\"supmult;\": \"\u2AC2\",\n\t\"supplus;\": \"\u2AC0\",\n\t\"swarrow;\": \"\u2199\",\n\t\"topfork;\": \"\u2ADA\",\n\t\"triplus;\": \"\u2A39\",\n\t\"tritime;\": \"\u2A3B\",\n\t\"UpArrow;\": \"\u2191\",\n\t\"Uparrow;\": \"\u21D1\",\n\t\"uparrow;\": \"\u2191\",\n\t\"Upsilon;\": \"\u03A5\",\n\t\"upsilon;\": \"\u03C5\",\n\t\"uwangle;\": \"\u29A7\",\n\t\"vzigzag;\": \"\u299A\",\n\t\"zigrarr;\": \"\u21DD\",\n\t\"andslope;\": \"\u2A58\",\n\t\"angmsdaa;\": \"\u29A8\",\n\t\"angmsdab;\": \"\u29A9\",\n\t\"angmsdac;\": \"\u29AA\",\n\t\"angmsdad;\": \"\u29AB\",\n\t\"angmsdae;\": \"\u29AC\",\n\t\"angmsdaf;\": \"\u29AD\",\n\t\"angmsdag;\": \"\u29AE\",\n\t\"angmsdah;\": \"\u29AF\",\n\t\"angrtvbd;\": \"\u299D\",\n\t\"approxeq;\": \"\u224A\",\n\t\"awconint;\": \"\u2233\",\n\t\"backcong;\": \"\u224C\",\n\t\"barwedge;\": \"\u2305\",\n\t\"bbrktbrk;\": \"\u23B6\",\n\t\"bigoplus;\": \"\u2A01\",\n\t\"bigsqcup;\": \"\u2A06\",\n\t\"biguplus;\": \"\u2A04\",\n\t\"bigwedge;\": \"\u22C0\",\n\t\"boxminus;\": \"\u229F\",\n\t\"boxtimes;\": \"\u22A0\",\n\t\"bsolhsub;\": \"\u27C8\",\n\t\"capbrcup;\": \"\u2A49\",\n\t\"circledR;\": \"\u00AE\",\n\t\"circledS;\": \"\u24C8\",\n\t\"cirfnint;\": \"\u2A10\",\n\t\"clubsuit;\": \"\u2663\",\n\t\"cupbrcap;\": \"\u2A48\",\n\t\"curlyvee;\": \"\u22CE\",\n\t\"cwconint;\": \"\u2232\",\n\t\"DDotrahd;\": \"\u2911\",\n\t\"doteqdot;\": \"\u2251\",\n\t\"DotEqual;\": \"\u2250\",\n\t\"dotminus;\": \"\u2238\",\n\t\"drbkarow;\": \"\u2910\",\n\t\"dzigrarr;\": \"\u27FF\",\n\t\"elinters;\": \"\u23E7\",\n\t\"emptyset;\": \"\u2205\",\n\t\"eqvparsl;\": \"\u29E5\",\n\t\"fpartint;\": \"\u2A0D\",\n\t\"geqslant;\": \"\u2A7E\",\n\t\"gesdotol;\": \"\u2A84\",\n\t\"gnapprox;\": \"\u2A8A\",\n\t\"hksearow;\": \"\u2925\",\n\t\"hkswarow;\": \"\u2926\",\n\t\"imagline;\": \"\u2110\",\n\t\"imagpart;\": \"\u2111\",\n\t\"infintie;\": \"\u29DD\",\n\t\"integers;\": \"\u2124\",\n\t\"Integral;\": \"\u222B\",\n\t\"intercal;\": \"\u22BA\",\n\t\"intlarhk;\": \"\u2A17\",\n\t\"laemptyv;\": \"\u29B4\",\n\t\"ldrushar;\": \"\u294B\",\n\t\"leqslant;\": \"\u2A7D\",\n\t\"lesdotor;\": \"\u2A83\",\n\t\"LessLess;\": \"\u2AA1\",\n\t\"llcorner;\": \"\u231E\",\n\t\"lnapprox;\": \"\u2A89\",\n\t\"lrcorner;\": \"\u231F\",\n\t\"lurdshar;\": \"\u294A\",\n\t\"mapstoup;\": \"\u21A5\",\n\t\"multimap;\": \"\u22B8\",\n\t\"naturals;\": \"\u2115\",\n\t\"ncongdot;\": \"\u2A6D\u0338\",\n\t\"NotEqual;\": \"\u2260\",\n\t\"notindot;\": \"\u22F5\u0338\",\n\t\"NotTilde;\": \"\u2241\",\n\t\"otimesas;\": \"\u2A36\",\n\t\"parallel;\": \"\u2225\",\n\t\"PartialD;\": \"\u2202\",\n\t\"plusacir;\": \"\u2A23\",\n\t\"pointint;\": \"\u2A15\",\n\t\"Precedes;\": \"\u227A\",\n\t\"precneqq;\": \"\u2AB5\",\n\t\"precnsim;\": \"\u22E8\",\n\t\"profalar;\": \"\u232E\",\n\t\"profline;\": \"\u2312\",\n\t\"profsurf;\": \"\u2313\",\n\t\"raemptyv;\": \"\u29B3\",\n\t\"realpart;\": \"\u211C\",\n\t\"RightTee;\": \"\u22A2\",\n\t\"rppolint;\": \"\u2A12\",\n\t\"rtriltri;\": \"\u29CE\",\n\t\"scpolint;\": \"\u2A13\",\n\t\"setminus;\": \"\u2216\",\n\t\"shortmid;\": \"\u2223\",\n\t\"smeparsl;\": \"\u29E4\",\n\t\"sqsubset;\": \"\u228F\",\n\t\"sqsupset;\": \"\u2290\",\n\t\"subseteq;\": \"\u2286\",\n\t\"Succeeds;\": \"\u227B\",\n\t\"succneqq;\": \"\u2AB6\",\n\t\"succnsim;\": \"\u22E9\",\n\t\"SuchThat;\": \"\u220B\",\n\t\"Superset;\": \"\u2283\",\n\t\"supseteq;\": \"\u2287\",\n\t\"thetasym;\": \"\u03D1\",\n\t\"thicksim;\": \"\u223C\",\n\t\"timesbar;\": \"\u2A31\",\n\t\"triangle;\": \"\u25B5\",\n\t\"triminus;\": \"\u2A3A\",\n\t\"trpezium;\": \"\u23E2\",\n\t\"Uarrocir;\": \"\u2949\",\n\t\"ulcorner;\": \"\u231C\",\n\t\"UnderBar;\": \"_\",\n\t\"urcorner;\": \"\u231D\",\n\t\"varkappa;\": \"\u03F0\",\n\t\"varsigma;\": \"\u03C2\",\n\t\"vartheta;\": \"\u03D1\",\n\t\"backprime;\": \"\u2035\",\n\t\"backsimeq;\": \"\u22CD\",\n\t\"Backslash;\": \"\u2216\",\n\t\"bigotimes;\": \"\u2A02\",\n\t\"CenterDot;\": \"\u00B7\",\n\t\"centerdot;\": \"\u00B7\",\n\t\"checkmark;\": \"\u2713\",\n\t\"CircleDot;\": \"\u2299\",\n\t\"complexes;\": \"\u2102\",\n\t\"Congruent;\": \"\u2261\",\n\t\"Coproduct;\": \"\u2210\",\n\t\"dotsquare;\": \"\u22A1\",\n\t\"DoubleDot;\": \"\u00A8\",\n\t\"DownArrow;\": \"\u2193\",\n\t\"Downarrow;\": \"\u21D3\",\n\t\"downarrow;\": \"\u2193\",\n\t\"DownBreve;\": \"\u0311\",\n\t\"gtrapprox;\": \"\u2A86\",\n\t\"gtreqless;\": \"\u22DB\",\n\t\"gvertneqq;\": \"\u2269\uFE00\",\n\t\"heartsuit;\": \"\u2665\",\n\t\"HumpEqual;\": \"\u224F\",\n\t\"LeftArrow;\": \"\u2190\",\n\t\"Leftarrow;\": \"\u21D0\",\n\t\"leftarrow;\": \"\u2190\",\n\t\"LeftFloor;\": \"\u230A\",\n\t\"lesseqgtr;\": \"\u22DA\",\n\t\"LessTilde;\": \"\u2272\",\n\t\"lvertneqq;\": \"\u2268\uFE00\",\n\t\"Mellintrf;\": \"\u2133\",\n\t\"MinusPlus;\": \"\u2213\",\n\t\"ngeqslant;\": \"\u2A7E\u0338\",\n\t\"nleqslant;\": \"\u2A7D\u0338\",\n\t\"NotCupCap;\": \"\u226D\",\n\t\"NotExists;\": \"\u2204\",\n\t\"NotSubset;\": \"\u2282\u20D2\",\n\t\"nparallel;\": \"\u2226\",\n\t\"nshortmid;\": \"\u2224\",\n\t\"nsubseteq;\": \"\u2288\",\n\t\"nsupseteq;\": \"\u2289\",\n\t\"OverBrace;\": \"\u23DE\",\n\t\"pitchfork;\": \"\u22D4\",\n\t\"PlusMinus;\": \"\u00B1\",\n\t\"rationals;\": \"\u211A\",\n\t\"spadesuit;\": \"\u2660\",\n\t\"subseteqq;\": \"\u2AC5\",\n\t\"subsetneq;\": \"\u228A\",\n\t\"supseteqq;\": \"\u2AC6\",\n\t\"supsetneq;\": \"\u228B\",\n\t\"Therefore;\": \"\u2234\",\n\t\"therefore;\": \"\u2234\",\n\t\"ThinSpace;\": \"\u2009\",\n\t\"triangleq;\": \"\u225C\",\n\t\"TripleDot;\": \"\u20DB\",\n\t\"UnionPlus;\": \"\u228E\",\n\t\"varpropto;\": \"\u221D\",\n\t\"Bernoullis;\": \"\u212C\",\n\t\"circledast;\": \"\u229B\",\n\t\"CirclePlus;\": \"\u2295\",\n\t\"complement;\": \"\u2201\",\n\t\"curlywedge;\": \"\u22CF\",\n\t\"eqslantgtr;\": \"\u2A96\",\n\t\"EqualTilde;\": \"\u2242\",\n\t\"Fouriertrf;\": \"\u2131\",\n\t\"gtreqqless;\": \"\u2A8C\",\n\t\"ImaginaryI;\": \"\u2148\",\n\t\"Laplacetrf;\": \"\u2112\",\n\t\"LeftVector;\": \"\u21BC\",\n\t\"lessapprox;\": \"\u2A85\",\n\t\"lesseqqgtr;\": \"\u2A8B\",\n\t\"Lleftarrow;\": \"\u21DA\",\n\t\"lmoustache;\": \"\u23B0\",\n\t\"longmapsto;\": \"\u27FC\",\n\t\"mapstodown;\": \"\u21A7\",\n\t\"mapstoleft;\": \"\u21A4\",\n\t\"nLeftarrow;\": \"\u21CD\",\n\t\"nleftarrow;\": \"\u219A\",\n\t\"NotElement;\": \"\u2209\",\n\t\"NotGreater;\": \"\u226F\",\n\t\"nsubseteqq;\": \"\u2AC5\u0338\",\n\t\"nsupseteqq;\": \"\u2AC6\u0338\",\n\t\"precapprox;\": \"\u2AB7\",\n\t\"Proportion;\": \"\u2237\",\n\t\"RightArrow;\": \"\u2192\",\n\t\"Rightarrow;\": \"\u21D2\",\n\t\"rightarrow;\": \"\u2192\",\n\t\"RightFloor;\": \"\u230B\",\n\t\"rmoustache;\": \"\u23B1\",\n\t\"sqsubseteq;\": \"\u2291\",\n\t\"sqsupseteq;\": \"\u2292\",\n\t\"subsetneqq;\": \"\u2ACB\",\n\t\"succapprox;\": \"\u2AB8\",\n\t\"supsetneqq;\": \"\u2ACC\",\n\t\"ThickSpace;\": \"\u205F\u200A\",\n\t\"TildeEqual;\": \"\u2243\",\n\t\"TildeTilde;\": \"\u2248\",\n\t\"UnderBrace;\": \"\u23DF\",\n\t\"UpArrowBar;\": \"\u2912\",\n\t\"UpTeeArrow;\": \"\u21A5\",\n\t\"upuparrows;\": \"\u21C8\",\n\t\"varepsilon;\": \"\u03F5\",\n\t\"varnothing;\": \"\u2205\",\n\t\"backepsilon;\": \"\u03F6\",\n\t\"blacksquare;\": \"\u25AA\",\n\t\"circledcirc;\": \"\u229A\",\n\t\"circleddash;\": \"\u229D\",\n\t\"CircleMinus;\": \"\u2296\",\n\t\"CircleTimes;\": \"\u2297\",\n\t\"curlyeqprec;\": \"\u22DE\",\n\t\"curlyeqsucc;\": \"\u22DF\",\n\t\"diamondsuit;\": \"\u2666\",\n\t\"eqslantless;\": \"\u2A95\",\n\t\"Equilibrium;\": \"\u21CC\",\n\t\"expectation;\": \"\u2130\",\n\t\"GreaterLess;\": \"\u2277\",\n\t\"LeftCeiling;\": \"\u2308\",\n\t\"LessGreater;\": \"\u2276\",\n\t\"MediumSpace;\": \"\u205F\",\n\t\"NotLessLess;\": \"\u226A\u0338\",\n\t\"NotPrecedes;\": \"\u2280\",\n\t\"NotSucceeds;\": \"\u2281\",\n\t\"NotSuperset;\": \"\u2283\u20D2\",\n\t\"nRightarrow;\": \"\u21CF\",\n\t\"nrightarrow;\": \"\u219B\",\n\t\"OverBracket;\": \"\u23B4\",\n\t\"preccurlyeq;\": \"\u227C\",\n\t\"precnapprox;\": \"\u2AB9\",\n\t\"quaternions;\": \"\u210D\",\n\t\"RightVector;\": \"\u21C0\",\n\t\"Rrightarrow;\": \"\u21DB\",\n\t\"RuleDelayed;\": \"\u29F4\",\n\t\"SmallCircle;\": \"\u2218\",\n\t\"SquareUnion;\": \"\u2294\",\n\t\"straightphi;\": \"\u03D5\",\n\t\"SubsetEqual;\": \"\u2286\",\n\t\"succcurlyeq;\": \"\u227D\",\n\t\"succnapprox;\": \"\u2ABA\",\n\t\"thickapprox;\": \"\u2248\",\n\t\"UpDownArrow;\": \"\u2195\",\n\t\"Updownarrow;\": \"\u21D5\",\n\t\"updownarrow;\": \"\u2195\",\n\t\"VerticalBar;\": \"\u2223\",\n\t\"blacklozenge;\": \"\u29EB\",\n\t\"DownArrowBar;\": \"\u2913\",\n\t\"DownTeeArrow;\": \"\u21A7\",\n\t\"ExponentialE;\": \"\u2147\",\n\t\"exponentiale;\": \"\u2147\",\n\t\"GreaterEqual;\": \"\u2265\",\n\t\"GreaterTilde;\": \"\u2273\",\n\t\"HilbertSpace;\": \"\u210B\",\n\t\"HumpDownHump;\": \"\u224E\",\n\t\"Intersection;\": \"\u22C2\",\n\t\"LeftArrowBar;\": \"\u21E4\",\n\t\"LeftTeeArrow;\": \"\u21A4\",\n\t\"LeftTriangle;\": \"\u22B2\",\n\t\"LeftUpVector;\": \"\u21BF\",\n\t\"NotCongruent;\": \"\u2262\",\n\t\"NotHumpEqual;\": \"\u224F\u0338\",\n\t\"NotLessEqual;\": \"\u2270\",\n\t\"NotLessTilde;\": \"\u2274\",\n\t\"Proportional;\": \"\u221D\",\n\t\"RightCeiling;\": \"\u2309\",\n\t\"risingdotseq;\": \"\u2253\",\n\t\"RoundImplies;\": \"\u2970\",\n\t\"ShortUpArrow;\": \"\u2191\",\n\t\"SquareSubset;\": \"\u228F\",\n\t\"triangledown;\": \"\u25BF\",\n\t\"triangleleft;\": \"\u25C3\",\n\t\"UnderBracket;\": \"\u23B5\",\n\t\"varsubsetneq;\": \"\u228A\uFE00\",\n\t\"varsupsetneq;\": \"\u228B\uFE00\",\n\t\"VerticalLine;\": \"|\",\n\t\"ApplyFunction;\": \"\u2061\",\n\t\"bigtriangleup;\": \"\u25B3\",\n\t\"blacktriangle;\": \"\u25B4\",\n\t\"DifferentialD;\": \"\u2146\",\n\t\"divideontimes;\": \"\u22C7\",\n\t\"DoubleLeftTee;\": \"\u2AE4\",\n\t\"DoubleUpArrow;\": \"\u21D1\",\n\t\"fallingdotseq;\": \"\u2252\",\n\t\"hookleftarrow;\": \"\u21A9\",\n\t\"leftarrowtail;\": \"\u21A2\",\n\t\"leftharpoonup;\": \"\u21BC\",\n\t\"LeftTeeVector;\": \"\u295A\",\n\t\"LeftVectorBar;\": \"\u2952\",\n\t\"LessFullEqual;\": \"\u2266\",\n\t\"LongLeftArrow;\": \"\u27F5\",\n\t\"Longleftarrow;\": \"\u27F8\",\n\t\"longleftarrow;\": \"\u27F5\",\n\t\"looparrowleft;\": \"\u21AB\",\n\t\"measuredangle;\": \"\u2221\",\n\t\"NotEqualTilde;\": \"\u2242\u0338\",\n\t\"NotTildeEqual;\": \"\u2244\",\n\t\"NotTildeTilde;\": \"\u2249\",\n\t\"ntriangleleft;\": \"\u22EA\",\n\t\"Poincareplane;\": \"\u210C\",\n\t\"PrecedesEqual;\": \"\u2AAF\",\n\t\"PrecedesTilde;\": \"\u227E\",\n\t\"RightArrowBar;\": \"\u21E5\",\n\t\"RightTeeArrow;\": \"\u21A6\",\n\t\"RightTriangle;\": \"\u22B3\",\n\t\"RightUpVector;\": \"\u21BE\",\n\t\"shortparallel;\": \"\u2225\",\n\t\"smallsetminus;\": \"\u2216\",\n\t\"SucceedsEqual;\": \"\u2AB0\",\n\t\"SucceedsTilde;\": \"\u227F\",\n\t\"SupersetEqual;\": \"\u2287\",\n\t\"triangleright;\": \"\u25B9\",\n\t\"UpEquilibrium;\": \"\u296E\",\n\t\"upharpoonleft;\": \"\u21BF\",\n\t\"varsubsetneqq;\": \"\u2ACB\uFE00\",\n\t\"varsupsetneqq;\": \"\u2ACC\uFE00\",\n\t\"VerticalTilde;\": \"\u2240\",\n\t\"VeryThinSpace;\": \"\u200A\",\n\t\"curvearrowleft;\": \"\u21B6\",\n\t\"DiacriticalDot;\": \"\u02D9\",\n\t\"doublebarwedge;\": \"\u2306\",\n\t\"DoubleRightTee;\": \"\u22A8\",\n\t\"downdownarrows;\": \"\u21CA\",\n\t\"DownLeftVector;\": \"\u21BD\",\n\t\"GreaterGreater;\": \"\u2AA2\",\n\t\"hookrightarrow;\": \"\u21AA\",\n\t\"HorizontalLine;\": \"\u2500\",\n\t\"InvisibleComma;\": \"\u2063\",\n\t\"InvisibleTimes;\": \"\u2062\",\n\t\"LeftDownVector;\": \"\u21C3\",\n\t\"leftleftarrows;\": \"\u21C7\",\n\t\"LeftRightArrow;\": \"\u2194\",\n\t\"Leftrightarrow;\": \"\u21D4\",\n\t\"leftrightarrow;\": \"\u2194\",\n\t\"leftthreetimes;\": \"\u22CB\",\n\t\"LessSlantEqual;\": \"\u2A7D\",\n\t\"LongRightArrow;\": \"\u27F6\",\n\t\"Longrightarrow;\": \"\u27F9\",\n\t\"longrightarrow;\": \"\u27F6\",\n\t\"looparrowright;\": \"\u21AC\",\n\t\"LowerLeftArrow;\": \"\u2199\",\n\t\"NestedLessLess;\": \"\u226A\",\n\t\"NotGreaterLess;\": \"\u2279\",\n\t\"NotLessGreater;\": \"\u2278\",\n\t\"NotSubsetEqual;\": \"\u2288\",\n\t\"NotVerticalBar;\": \"\u2224\",\n\t\"nshortparallel;\": \"\u2226\",\n\t\"ntriangleright;\": \"\u22EB\",\n\t\"OpenCurlyQuote;\": \"\u2018\",\n\t\"ReverseElement;\": \"\u220B\",\n\t\"rightarrowtail;\": \"\u21A3\",\n\t\"rightharpoonup;\": \"\u21C0\",\n\t\"RightTeeVector;\": \"\u295B\",\n\t\"RightVectorBar;\": \"\u2953\",\n\t\"ShortDownArrow;\": \"\u2193\",\n\t\"ShortLeftArrow;\": \"\u2190\",\n\t\"SquareSuperset;\": \"\u2290\",\n\t\"TildeFullEqual;\": \"\u2245\",\n\t\"trianglelefteq;\": \"\u22B4\",\n\t\"upharpoonright;\": \"\u21BE\",\n\t\"UpperLeftArrow;\": \"\u2196\",\n\t\"ZeroWidthSpace;\": \"\u200B\",\n\t\"bigtriangledown;\": \"\u25BD\",\n\t\"circlearrowleft;\": \"\u21BA\",\n\t\"CloseCurlyQuote;\": \"\u2019\",\n\t\"ContourIntegral;\": \"\u222E\",\n\t\"curvearrowright;\": \"\u21B7\",\n\t\"DoubleDownArrow;\": \"\u21D3\",\n\t\"DoubleLeftArrow;\": \"\u21D0\",\n\t\"downharpoonleft;\": \"\u21C3\",\n\t\"DownRightVector;\": \"\u21C1\",\n\t\"leftharpoondown;\": \"\u21BD\",\n\t\"leftrightarrows;\": \"\u21C6\",\n\t\"LeftRightVector;\": \"\u294E\",\n\t\"LeftTriangleBar;\": \"\u29CF\",\n\t\"LeftUpTeeVector;\": \"\u2960\",\n\t\"LeftUpVectorBar;\": \"\u2958\",\n\t\"LowerRightArrow;\": \"\u2198\",\n\t\"nLeftrightarrow;\": \"\u21CE\",\n\t\"nleftrightarrow;\": \"\u21AE\",\n\t\"NotGreaterEqual;\": \"\u2271\",\n\t\"NotGreaterTilde;\": \"\u2275\",\n\t\"NotHumpDownHump;\": \"\u224E\u0338\",\n\t\"NotLeftTriangle;\": \"\u22EA\",\n\t\"NotSquareSubset;\": \"\u228F\u0338\",\n\t\"ntrianglelefteq;\": \"\u22EC\",\n\t\"OverParenthesis;\": \"\u23DC\",\n\t\"RightDownVector;\": \"\u21C2\",\n\t\"rightleftarrows;\": \"\u21C4\",\n\t\"rightsquigarrow;\": \"\u219D\",\n\t\"rightthreetimes;\": \"\u22CC\",\n\t\"ShortRightArrow;\": \"\u2192\",\n\t\"straightepsilon;\": \"\u03F5\",\n\t\"trianglerighteq;\": \"\u22B5\",\n\t\"UpperRightArrow;\": \"\u2197\",\n\t\"vartriangleleft;\": \"\u22B2\",\n\t\"circlearrowright;\": \"\u21BB\",\n\t\"DiacriticalAcute;\": \"\u00B4\",\n\t\"DiacriticalGrave;\": \"`\",\n\t\"DiacriticalTilde;\": \"\u02DC\",\n\t\"DoubleRightArrow;\": \"\u21D2\",\n\t\"DownArrowUpArrow;\": \"\u21F5\",\n\t\"downharpoonright;\": \"\u21C2\",\n\t\"EmptySmallSquare;\": \"\u25FB\",\n\t\"GreaterEqualLess;\": \"\u22DB\",\n\t\"GreaterFullEqual;\": \"\u2267\",\n\t\"LeftAngleBracket;\": \"\u27E8\",\n\t\"LeftUpDownVector;\": \"\u2951\",\n\t\"LessEqualGreater;\": \"\u22DA\",\n\t\"NonBreakingSpace;\": \"\u00A0\",\n\t\"NotPrecedesEqual;\": \"\u2AAF\u0338\",\n\t\"NotRightTriangle;\": \"\u22EB\",\n\t\"NotSucceedsEqual;\": \"\u2AB0\u0338\",\n\t\"NotSucceedsTilde;\": \"\u227F\u0338\",\n\t\"NotSupersetEqual;\": \"\u2289\",\n\t\"ntrianglerighteq;\": \"\u22ED\",\n\t\"rightharpoondown;\": \"\u21C1\",\n\t\"rightrightarrows;\": \"\u21C9\",\n\t\"RightTriangleBar;\": \"\u29D0\",\n\t\"RightUpTeeVector;\": \"\u295C\",\n\t\"RightUpVectorBar;\": \"\u2954\",\n\t\"twoheadleftarrow;\": \"\u219E\",\n\t\"UnderParenthesis;\": \"\u23DD\",\n\t\"UpArrowDownArrow;\": \"\u21C5\",\n\t\"vartriangleright;\": \"\u22B3\",\n\t\"blacktriangledown;\": \"\u25BE\",\n\t\"blacktriangleleft;\": \"\u25C2\",\n\t\"DoubleUpDownArrow;\": \"\u21D5\",\n\t\"DoubleVerticalBar;\": \"\u2225\",\n\t\"DownLeftTeeVector;\": \"\u295E\",\n\t\"DownLeftVectorBar;\": \"\u2956\",\n\t\"FilledSmallSquare;\": \"\u25FC\",\n\t\"GreaterSlantEqual;\": \"\u2A7E\",\n\t\"LeftDoubleBracket;\": \"\u27E6\",\n\t\"LeftDownTeeVector;\": \"\u2961\",\n\t\"LeftDownVectorBar;\": \"\u2959\",\n\t\"leftrightharpoons;\": \"\u21CB\",\n\t\"LeftTriangleEqual;\": \"\u22B4\",\n\t\"NegativeThinSpace;\": \"\u200B\",\n\t\"NotGreaterGreater;\": \"\u226B\u0338\",\n\t\"NotLessSlantEqual;\": \"\u2A7D\u0338\",\n\t\"NotNestedLessLess;\": \"\u2AA1\u0338\",\n\t\"NotReverseElement;\": \"\u220C\",\n\t\"NotSquareSuperset;\": \"\u2290\u0338\",\n\t\"NotTildeFullEqual;\": \"\u2247\",\n\t\"RightAngleBracket;\": \"\u27E9\",\n\t\"rightleftharpoons;\": \"\u21CC\",\n\t\"RightUpDownVector;\": \"\u294F\",\n\t\"SquareSubsetEqual;\": \"\u2291\",\n\t\"twoheadrightarrow;\": \"\u21A0\",\n\t\"VerticalSeparator;\": \"\u2758\",\n\t\"blacktriangleright;\": \"\u25B8\",\n\t\"DownRightTeeVector;\": \"\u295F\",\n\t\"DownRightVectorBar;\": \"\u2957\",\n\t\"LongLeftRightArrow;\": \"\u27F7\",\n\t\"Longleftrightarrow;\": \"\u27FA\",\n\t\"longleftrightarrow;\": \"\u27F7\",\n\t\"NegativeThickSpace;\": \"\u200B\",\n\t\"NotLeftTriangleBar;\": \"\u29CF\u0338\",\n\t\"PrecedesSlantEqual;\": \"\u227C\",\n\t\"ReverseEquilibrium;\": \"\u21CB\",\n\t\"RightDoubleBracket;\": \"\u27E7\",\n\t\"RightDownTeeVector;\": \"\u295D\",\n\t\"RightDownVectorBar;\": \"\u2955\",\n\t\"RightTriangleEqual;\": \"\u22B5\",\n\t\"SquareIntersection;\": \"\u2293\",\n\t\"SucceedsSlantEqual;\": \"\u227D\",\n\t\"DoubleLongLeftArrow;\": \"\u27F8\",\n\t\"DownLeftRightVector;\": \"\u2950\",\n\t\"LeftArrowRightArrow;\": \"\u21C6\",\n\t\"leftrightsquigarrow;\": \"\u21AD\",\n\t\"NegativeMediumSpace;\": \"\u200B\",\n\t\"NotGreaterFullEqual;\": \"\u2267\u0338\",\n\t\"NotRightTriangleBar;\": \"\u29D0\u0338\",\n\t\"RightArrowLeftArrow;\": \"\u21C4\",\n\t\"SquareSupersetEqual;\": \"\u2292\",\n\t\"CapitalDifferentialD;\": \"\u2145\",\n\t\"DoubleLeftRightArrow;\": \"\u21D4\",\n\t\"DoubleLongRightArrow;\": \"\u27F9\",\n\t\"EmptyVerySmallSquare;\": \"\u25AB\",\n\t\"NestedGreaterGreater;\": \"\u226B\",\n\t\"NotDoubleVerticalBar;\": \"\u2226\",\n\t\"NotGreaterSlantEqual;\": \"\u2A7E\u0338\",\n\t\"NotLeftTriangleEqual;\": \"\u22EC\",\n\t\"NotSquareSubsetEqual;\": \"\u22E2\",\n\t\"OpenCurlyDoubleQuote;\": \"\u201C\",\n\t\"ReverseUpEquilibrium;\": \"\u296F\",\n\t\"CloseCurlyDoubleQuote;\": \"\u201D\",\n\t\"DoubleContourIntegral;\": \"\u222F\",\n\t\"FilledVerySmallSquare;\": \"\u25AA\",\n\t\"NegativeVeryThinSpace;\": \"\u200B\",\n\t\"NotPrecedesSlantEqual;\": \"\u22E0\",\n\t\"NotRightTriangleEqual;\": \"\u22ED\",\n\t\"NotSucceedsSlantEqual;\": \"\u22E1\",\n\t\"DiacriticalDoubleAcute;\": \"\u02DD\",\n\t\"NotSquareSupersetEqual;\": \"\u22E3\",\n\t\"NotNestedGreaterGreater;\": \"\u2AA2\u0338\",\n\t\"ClockwiseContourIntegral;\": \"\u2232\",\n\t\"DoubleLongLeftRightArrow;\": \"\u27FA\",\n\t\"CounterClockwiseContourIntegral;\": \"\u2233\"\n};\n\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) ;\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtml,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, DOMErrorMessages );\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? getConstantType(exp, context) > 0\r\n                    ? exp\r\n                    : createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel$1 = (dir, node, context) => {\r\n    const baseResult = transformModel(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn$1 = (dir, node, context) => {\r\n    return transformOn(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst transformTransition = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (!node.children.length) {\r\n                    return;\r\n                }\r\n                // warn multiple transition children\r\n                if (hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n                // check if it's s single child w/ v-show\r\n                // if yes, inject \"persisted: true\" to the transition props\r\n                const child = node.children[0];\r\n                if (child.type === 1 /* ELEMENT */) {\r\n                    for (const p of child.props) {\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'show') {\r\n                            node.props.push({\r\n                                type: 6 /* ATTRIBUTE */,\r\n                                name: 'persisted',\r\n                                value: undefined,\r\n                                loc: node.loc\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */ &&\r\n        !(c.type === 2 /* TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\n/**\r\n * This module is Node-only.\r\n */\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nconst stringifyStatic = (children, context, parent) => {\r\n    // bail stringification for slot content\r\n    if (context.scopes.vSlot > 0) {\r\n        return;\r\n    }\r\n    let nc = 0; // current node count\r\n    let ec = 0; // current element with binding count\r\n    const currentChunk = [];\r\n    const stringifyCurrentChunk = (currentIndex) => {\r\n        if (nc >= 20 /* NODE_COUNT */ ||\r\n            ec >= 5 /* ELEMENT_WITH_BINDING_COUNT */) {\r\n            // combine all currently eligible nodes into a single static vnode call\r\n            const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\r\n                JSON.stringify(currentChunk.map(node => stringifyNode(node, context)).join('')).replace(expReplaceRE, `\" + $1 + \"`),\r\n                // the 2nd argument indicates the number of DOM nodes this static vnode\r\n                // will insert / hydrate\r\n                String(currentChunk.length)\r\n            ]);\r\n            // replace the first node's hoisted expression with the static vnode call\r\n            replaceHoist(currentChunk[0], staticCall, context);\r\n            if (currentChunk.length > 1) {\r\n                for (let i = 1; i < currentChunk.length; i++) {\r\n                    // for the merged nodes, set their hoisted expression to null\r\n                    replaceHoist(currentChunk[i], null, context);\r\n                }\r\n                // also remove merged nodes from children\r\n                const deleteCount = currentChunk.length - 1;\r\n                children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n                return deleteCount;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    let i = 0;\r\n    for (; i < children.length; i++) {\r\n        const child = children[i];\r\n        const hoisted = getHoistedNode(child);\r\n        if (hoisted) {\r\n            // presence of hoisted means child must be a stringifiable node\r\n            const node = child;\r\n            const result = analyzeNode(node);\r\n            if (result) {\r\n                // node is stringifiable, record state\r\n                nc += result[0];\r\n                ec += result[1];\r\n                currentChunk.push(node);\r\n                continue;\r\n            }\r\n        }\r\n        // we only reach here if we ran into a node that is not stringifiable\r\n        // check if currently analyzed nodes meet criteria for stringification.\r\n        // adjust iteration index\r\n        i -= stringifyCurrentChunk(i);\r\n        // reset state\r\n        nc = 0;\r\n        ec = 0;\r\n        currentChunk.length = 0;\r\n    }\r\n    // in case the last node was also stringifiable\r\n    stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => ((node.type === 1 /* ELEMENT */ && node.tagType === 0 /* ELEMENT */) ||\r\n    node.type == 12 /* TEXT_CALL */) &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n    node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n    return ((ns === 0 /* HTML */\r\n        ? isKnownHtmlAttr(name)\r\n        : ns === 1 /* SVG */\r\n            ? isKnownSvgAttr(name)\r\n            : false) || dataAriaRE.test(name));\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n    const hoistToReplace = node.codegenNode.hoisted;\r\n    context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /*#__PURE__*/ makeMap(`caption,thead,tr,th,tbody,td,tfoot,colgroup,col`);\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node) {\r\n    if (node.type === 1 /* ELEMENT */ && isNonStringifiable(node.tag)) {\r\n        return false;\r\n    }\r\n    if (node.type === 12 /* TEXT_CALL */) {\r\n        return [1, 0];\r\n    }\r\n    let nc = 1; // node count\r\n    let ec = node.props.length > 0 ? 1 : 0; // element w/ binding count\r\n    let bailed = false;\r\n    const bail = () => {\r\n        bailed = true;\r\n        return false;\r\n    };\r\n    // TODO: check for cases where using innerHTML will result in different\r\n    // output compared to imperative node insertions.\r\n    // probably only need to check for most common case\r\n    // i.e. non-phrasing-content tags inside `<p>`\r\n    function walk(node) {\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            // bail on non-attr bindings\r\n            if (p.type === 6 /* ATTRIBUTE */ &&\r\n                !isStringifiableAttr(p.name, node.ns)) {\r\n                return bail();\r\n            }\r\n            if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind') {\r\n                // bail on non-attr bindings\r\n                if (p.arg &&\r\n                    (p.arg.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                        (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))) {\r\n                    return bail();\r\n                }\r\n                if (p.exp &&\r\n                    (p.exp.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                        p.exp.constType < 3 /* CAN_STRINGIFY */)) {\r\n                    return bail();\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            nc++;\r\n            const child = node.children[i];\r\n            if (child.type === 1 /* ELEMENT */) {\r\n                if (child.props.length > 0) {\r\n                    ec++;\r\n                }\r\n                walk(child);\r\n                if (bailed) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n    if (isString(node)) {\r\n        return node;\r\n    }\r\n    if (isSymbol(node)) {\r\n        return ``;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            return stringifyElement(node, context);\r\n        case 2 /* TEXT */:\r\n            return escapeHtml(node.content);\r\n        case 3 /* COMMENT */:\r\n            return `<!--${escapeHtml(node.content)}-->`;\r\n        case 5 /* INTERPOLATION */:\r\n            return escapeHtml(toDisplayString(evaluateConstant(node.content)));\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return escapeHtml(evaluateConstant(node));\r\n        case 12 /* TEXT_CALL */:\r\n            return stringifyNode(node.content, context);\r\n        default:\r\n            // static trees will not contain if/for nodes\r\n            return '';\r\n    }\r\n}\r\nfunction stringifyElement(node, context) {\r\n    let res = `<${node.tag}`;\r\n    let innerHTML = '';\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            res += ` ${p.name}`;\r\n            if (p.value) {\r\n                res += `=\"${escapeHtml(p.value.content)}\"`;\r\n            }\r\n        }\r\n        else if (p.type === 7 /* DIRECTIVE */) {\r\n            if (p.name === 'bind') {\r\n                const exp = p.exp;\r\n                if (exp.content[0] === '_') {\r\n                    // internally generated string constant references\r\n                    // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n                    res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n                    continue;\r\n                }\r\n                // constant v-bind, e.g. :foo=\"1\"\r\n                let evaluated = evaluateConstant(exp);\r\n                if (evaluated != null) {\r\n                    const arg = p.arg && p.arg.content;\r\n                    if (arg === 'class') {\r\n                        evaluated = normalizeClass(evaluated);\r\n                    }\r\n                    else if (arg === 'style') {\r\n                        evaluated = stringifyStyle(normalizeStyle(evaluated));\r\n                    }\r\n                    res += ` ${p.arg.content}=\"${escapeHtml(evaluated)}\"`;\r\n                }\r\n            }\r\n            else if (p.name === 'html') {\r\n                // #5439 v-html with constant value\r\n                // not sure why would anyone do this but it can happen\r\n                innerHTML = evaluateConstant(p.exp);\r\n            }\r\n            else if (p.name === 'text') {\r\n                innerHTML = escapeHtml(toDisplayString(evaluateConstant(p.exp)));\r\n            }\r\n        }\r\n    }\r\n    if (context.scopeId) {\r\n        res += ` ${context.scopeId}`;\r\n    }\r\n    res += `>`;\r\n    if (innerHTML) {\r\n        res += innerHTML;\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            res += stringifyNode(node.children[i], context);\r\n        }\r\n    }\r\n    if (!isVoidTag(node.tag)) {\r\n        res += `</${node.tag}>`;\r\n    }\r\n    return res;\r\n}\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transforms/transformExpression)\r\nfunction evaluateConstant(exp) {\r\n    if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        return new Function(`return ${exp.content}`)();\r\n    }\r\n    else {\r\n        // compound\r\n        let res = ``;\r\n        exp.children.forEach(c => {\r\n            if (isString(c) || isSymbol(c)) {\r\n                return;\r\n            }\r\n            if (c.type === 2 /* TEXT */) {\r\n                res += c.content;\r\n            }\r\n            else if (c.type === 5 /* INTERPOLATION */) {\r\n                res += toDisplayString(evaluateConstant(c.content));\r\n            }\r\n            else {\r\n                res += evaluateConstant(c);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...([transformTransition] )\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel$1,\r\n    on: transformOn$1,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: stringifyStatic\r\n    }));\r\n}\r\nfunction parse$1(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nvar CompilerDOM = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parserOptions: parserOptions,\n  DOMNodeTransforms: DOMNodeTransforms,\n  DOMDirectiveTransforms: DOMDirectiveTransforms,\n  compile: compile,\n  parse: parse$1,\n  transformStyle: transformStyle,\n  createDOMCompilerError: createDOMCompilerError,\n  V_MODEL_RADIO: V_MODEL_RADIO,\n  V_MODEL_CHECKBOX: V_MODEL_CHECKBOX,\n  V_MODEL_TEXT: V_MODEL_TEXT,\n  V_MODEL_SELECT: V_MODEL_SELECT,\n  V_MODEL_DYNAMIC: V_MODEL_DYNAMIC,\n  V_ON_WITH_MODIFIERS: V_ON_WITH_MODIFIERS,\n  V_ON_WITH_KEYS: V_ON_WITH_KEYS,\n  V_SHOW: V_SHOW,\n  TRANSITION: TRANSITION,\n  TRANSITION_GROUP: TRANSITION_GROUP,\n  baseCompile: baseCompile,\n  baseParse: baseParse,\n  transform: transform,\n  createTransformContext: createTransformContext,\n  traverseNode: traverseNode,\n  createStructuralDirectiveTransform: createStructuralDirectiveTransform,\n  generate: generate,\n  createCompilerError: createCompilerError,\n  getBaseTransformPreset: getBaseTransformPreset,\n  transformModel: transformModel,\n  transformOn: transformOn,\n  transformBind: transformBind,\n  noopDirectiveTransform: noopDirectiveTransform,\n  processIf: processIf,\n  processFor: processFor,\n  createForLoopParams: createForLoopParams,\n  transformExpression: transformExpression,\n  processExpression: processExpression,\n  buildSlots: buildSlots,\n  trackVForSlotScopes: trackVForSlotScopes,\n  trackSlotScopes: trackSlotScopes,\n  transformElement: transformElement,\n  resolveComponentType: resolveComponentType,\n  buildProps: buildProps,\n  buildDirectiveArgs: buildDirectiveArgs,\n  processSlotOutlet: processSlotOutlet,\n  getConstantType: getConstantType,\n  generateCodeFrame: generateCodeFrame,\n  checkCompatEnabled: checkCompatEnabled,\n  warnDeprecation: warnDeprecation,\n  locStub: locStub,\n  createRoot: createRoot,\n  createVNodeCall: createVNodeCall,\n  createArrayExpression: createArrayExpression,\n  createObjectExpression: createObjectExpression,\n  createObjectProperty: createObjectProperty,\n  createSimpleExpression: createSimpleExpression,\n  createInterpolation: createInterpolation,\n  createCompoundExpression: createCompoundExpression,\n  createCallExpression: createCallExpression,\n  createFunctionExpression: createFunctionExpression,\n  createConditionalExpression: createConditionalExpression,\n  createCacheExpression: createCacheExpression,\n  createBlockStatement: createBlockStatement,\n  createTemplateLiteral: createTemplateLiteral,\n  createIfStatement: createIfStatement,\n  createAssignmentExpression: createAssignmentExpression,\n  createSequenceExpression: createSequenceExpression,\n  createReturnStatement: createReturnStatement,\n  isStaticExp: isStaticExp,\n  isBuiltInType: isBuiltInType,\n  isCoreComponent: isCoreComponent,\n  isSimpleIdentifier: isSimpleIdentifier,\n  isMemberExpressionBrowser: isMemberExpressionBrowser,\n  isMemberExpressionNode: isMemberExpressionNode,\n  isMemberExpression: isMemberExpression,\n  getInnerRange: getInnerRange,\n  advancePositionWithClone: advancePositionWithClone,\n  advancePositionWithMutation: advancePositionWithMutation,\n  assert: assert$1,\n  findDir: findDir,\n  findProp: findProp,\n  isStaticArgOf: isStaticArgOf,\n  hasDynamicKeyVBind: hasDynamicKeyVBind,\n  isText: isText,\n  isVSlot: isVSlot,\n  isTemplateNode: isTemplateNode,\n  isSlotOutlet: isSlotOutlet,\n  getVNodeHelper: getVNodeHelper,\n  getVNodeBlockHelper: getVNodeBlockHelper,\n  injectProp: injectProp,\n  toValidAssetId: toValidAssetId,\n  hasScopeRef: hasScopeRef,\n  getMemoedVNodeCall: getMemoedVNodeCall,\n  makeBlock: makeBlock,\n  walkIdentifiers: walkIdentifiers,\n  isReferencedIdentifier: isReferencedIdentifier,\n  isInDestructureAssignment: isInDestructureAssignment,\n  walkFunctionParams: walkFunctionParams,\n  walkBlockDeclarations: walkBlockDeclarations,\n  extractIdentifiers: extractIdentifiers,\n  isFunctionType: isFunctionType,\n  isStaticProperty: isStaticProperty,\n  isStaticPropertyKey: isStaticPropertyKey,\n  FRAGMENT: FRAGMENT,\n  TELEPORT: TELEPORT,\n  SUSPENSE: SUSPENSE,\n  KEEP_ALIVE: KEEP_ALIVE,\n  BASE_TRANSITION: BASE_TRANSITION,\n  OPEN_BLOCK: OPEN_BLOCK,\n  CREATE_BLOCK: CREATE_BLOCK,\n  CREATE_ELEMENT_BLOCK: CREATE_ELEMENT_BLOCK,\n  CREATE_VNODE: CREATE_VNODE,\n  CREATE_ELEMENT_VNODE: CREATE_ELEMENT_VNODE,\n  CREATE_COMMENT: CREATE_COMMENT,\n  CREATE_TEXT: CREATE_TEXT,\n  CREATE_STATIC: CREATE_STATIC,\n  RESOLVE_COMPONENT: RESOLVE_COMPONENT,\n  RESOLVE_DYNAMIC_COMPONENT: RESOLVE_DYNAMIC_COMPONENT,\n  RESOLVE_DIRECTIVE: RESOLVE_DIRECTIVE,\n  RESOLVE_FILTER: RESOLVE_FILTER,\n  WITH_DIRECTIVES: WITH_DIRECTIVES,\n  RENDER_LIST: RENDER_LIST,\n  RENDER_SLOT: RENDER_SLOT,\n  CREATE_SLOTS: CREATE_SLOTS,\n  TO_DISPLAY_STRING: TO_DISPLAY_STRING,\n  MERGE_PROPS: MERGE_PROPS,\n  NORMALIZE_CLASS: NORMALIZE_CLASS,\n  NORMALIZE_STYLE: NORMALIZE_STYLE,\n  NORMALIZE_PROPS: NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS: GUARD_REACTIVE_PROPS,\n  TO_HANDLERS: TO_HANDLERS,\n  CAMELIZE: CAMELIZE,\n  CAPITALIZE: CAPITALIZE,\n  TO_HANDLER_KEY: TO_HANDLER_KEY,\n  SET_BLOCK_TRACKING: SET_BLOCK_TRACKING,\n  PUSH_SCOPE_ID: PUSH_SCOPE_ID,\n  POP_SCOPE_ID: POP_SCOPE_ID,\n  WITH_CTX: WITH_CTX,\n  UNREF: UNREF,\n  IS_REF: IS_REF,\n  WITH_MEMO: WITH_MEMO,\n  IS_MEMO_SAME: IS_MEMO_SAME,\n  helperNameMap: helperNameMap,\n  registerRuntimeHelpers: registerRuntimeHelpers\n});\n\nfunction pad (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object' || typeof value === 'function') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n\n    var objHash = foldObject(hash, value, seen);\n\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\n      return objHash;\n    }\n\n    try {\n      return fold(objHash, String(value.valueOf()))\n    } catch (err) {\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\n    }\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nvar hashSum = sum;\n\nconst CSS_VARS_HELPER = `useCssVars`;\r\nfunction genCssVarsFromList(vars, id, isProd, isSSR = false) {\r\n    return `{\\n  ${vars\r\n        .map(key => `\"${isSSR ? `--` : ``}${genVarName(id, key, isProd)}\": (${key})`)\r\n        .join(',\\n  ')}\\n}`;\r\n}\r\nfunction genVarName(id, raw, isProd) {\r\n    if (isProd) {\r\n        return hashSum(id + raw);\r\n    }\r\n    else {\r\n        return `${id}-${raw.replace(/([^\\w-])/g, '_')}`;\r\n    }\r\n}\r\nfunction normalizeExpression(exp) {\r\n    exp = exp.trim();\r\n    if ((exp[0] === `'` && exp[exp.length - 1] === `'`) ||\r\n        (exp[0] === `\"` && exp[exp.length - 1] === `\"`)) {\r\n        return exp.slice(1, -1);\r\n    }\r\n    return exp;\r\n}\r\nconst vBindRE = /v-bind\\s*\\(/g;\r\nfunction parseCssVars(sfc) {\r\n    const vars = [];\r\n    sfc.styles.forEach(style => {\r\n        let match;\r\n        // ignore v-bind() in comments /* ... */\r\n        const content = style.content.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, '');\r\n        while ((match = vBindRE.exec(content))) {\r\n            const start = match.index + match[0].length;\r\n            const end = lexBinding(content, start);\r\n            if (end !== null) {\r\n                const variable = normalizeExpression(content.slice(start, end));\r\n                if (!vars.includes(variable)) {\r\n                    vars.push(variable);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return vars;\r\n}\r\nfunction lexBinding(content, start) {\r\n    let state = 0 /* inParens */;\r\n    let parenDepth = 0;\r\n    for (let i = start; i < content.length; i++) {\r\n        const char = content.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inParens */:\r\n                if (char === `'`) {\r\n                    state = 1 /* inSingleQuoteString */;\r\n                }\r\n                else if (char === `\"`) {\r\n                    state = 2 /* inDoubleQuoteString */;\r\n                }\r\n                else if (char === `(`) {\r\n                    parenDepth++;\r\n                }\r\n                else if (char === `)`) {\r\n                    if (parenDepth > 0) {\r\n                        parenDepth--;\r\n                    }\r\n                    else {\r\n                        return i;\r\n                    }\r\n                }\r\n                break;\r\n            case 1 /* inSingleQuoteString */:\r\n                if (char === `'`) {\r\n                    state = 0 /* inParens */;\r\n                }\r\n                break;\r\n            case 2 /* inDoubleQuoteString */:\r\n                if (char === `\"`) {\r\n                    state = 0 /* inParens */;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst cssVarsPlugin = opts => {\r\n    const { id, isProd } = opts;\r\n    return {\r\n        postcssPlugin: 'vue-sfc-vars',\r\n        Declaration(decl) {\r\n            // rewrite CSS variables\r\n            const value = decl.value;\r\n            if (vBindRE.test(value)) {\r\n                vBindRE.lastIndex = 0;\r\n                let transformed = '';\r\n                let lastIndex = 0;\r\n                let match;\r\n                while ((match = vBindRE.exec(value))) {\r\n                    const start = match.index + match[0].length;\r\n                    const end = lexBinding(value, start);\r\n                    if (end !== null) {\r\n                        const variable = normalizeExpression(value.slice(start, end));\r\n                        transformed +=\r\n                            value.slice(lastIndex, match.index) +\r\n                                `var(--${genVarName(id, variable, isProd)})`;\r\n                        lastIndex = end + 1;\r\n                    }\r\n                }\r\n                decl.value = transformed + value.slice(lastIndex);\r\n            }\r\n        }\r\n    };\r\n};\r\ncssVarsPlugin.postcss = true;\r\nfunction genCssVarsCode(vars, bindings, id, isProd) {\r\n    const varsExp = genCssVarsFromList(vars, id, isProd);\r\n    const exp = createSimpleExpression(varsExp, false);\r\n    const context = createTransformContext(createRoot([]), {\r\n        prefixIdentifiers: true,\r\n        inline: true,\r\n        bindingMetadata: bindings.__isScriptSetup === false ? undefined : bindings\r\n    });\r\n    const transformed = processExpression(exp, context);\r\n    const transformedString = transformed.type === 4 /* SIMPLE_EXPRESSION */\r\n        ? transformed.content\r\n        : transformed.children\r\n            .map(c => {\r\n            return typeof c === 'string'\r\n                ? c\r\n                : c.content;\r\n        })\r\n            .join('');\r\n    return `_${CSS_VARS_HELPER}(_ctx => (${transformedString}))`;\r\n}\r\n// <script setup> already gets the calls injected as part of the transform\r\n// this is only for single normal <script>\r\nfunction genNormalScriptCssVarsCode(cssVars, bindings, id, isProd) {\r\n    return (`\\nimport { ${CSS_VARS_HELPER} as _${CSS_VARS_HELPER} } from 'vue'\\n` +\r\n        `const __injectCSSVars__ = () => {\\n${genCssVarsCode(cssVars, bindings, id, isProd)}}\\n` +\r\n        `const __setup__ = __default__.setup\\n` +\r\n        `__default__.setup = __setup__\\n` +\r\n        `  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\\n` +\r\n        `  : __injectCSSVars__\\n`);\r\n}\n\nfunction createCache(size = 500) {\r\n    return new Map()\r\n        ;\r\n}\n\nvar global = (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString$1 = {}.toString;\n\nvar isArray$1 = Array.isArray || function (arr) {\n  return toString$1.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray$1(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray$1(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap$1 (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap$1(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap$1(this, i, i + 3);\n    swap$1(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap$1(this, i, i + 7);\n    swap$1(this, i + 1, i + 6);\n    swap$1(this, i + 2, i + 5);\n    swap$1(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction encode$2(decoded) {\n    var sourceFileIndex = 0; // second field\n    var sourceCodeLine = 0; // third field\n    var sourceCodeColumn = 0; // fourth field\n    var nameIndex = 0; // fifth field\n    var mappings = '';\n    for (var i = 0; i < decoded.length; i++) {\n        var line = decoded[i];\n        if (i > 0)\n            mappings += ';';\n        if (line.length === 0)\n            continue;\n        var generatedCodeColumn = 0; // first field\n        var lineMappings = [];\n        for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n            var segment = line_1[_i];\n            var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n            generatedCodeColumn = segment[0];\n            if (segment.length > 1) {\n                segmentMappings +=\n                    encodeInteger(segment[1] - sourceFileIndex) +\n                        encodeInteger(segment[2] - sourceCodeLine) +\n                        encodeInteger(segment[3] - sourceCodeColumn);\n                sourceFileIndex = segment[1];\n                sourceCodeLine = segment[2];\n                sourceCodeColumn = segment[3];\n            }\n            if (segment.length === 5) {\n                segmentMappings += encodeInteger(segment[4] - nameIndex);\n                nameIndex = segment[4];\n            }\n            lineMappings.push(segmentMappings);\n        }\n        mappings += lineMappings.join(',');\n    }\n    return mappings;\n}\nfunction encodeInteger(num) {\n    var result = '';\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        var clamped = num & 31;\n        num >>>= 5;\n        if (num > 0) {\n            clamped |= 32;\n        }\n        result += chars[clamped];\n    } while (num > 0);\n    return result;\n}\n\nvar BitSet = function BitSet(arg) {\n\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n};\n\nBitSet.prototype.add = function add (n) {\n\tthis.bits[n >> 5] |= 1 << (n & 31);\n};\n\nBitSet.prototype.has = function has (n) {\n\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n};\n\nvar Chunk = function Chunk(start, end, content) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties(this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext:     { writable: true, value: null }\n\t});\n};\n\nChunk.prototype.appendLeft = function appendLeft (content) {\n\tthis.outro += content;\n};\n\nChunk.prototype.appendRight = function appendRight (content) {\n\tthis.intro = this.intro + content;\n};\n\nChunk.prototype.clone = function clone () {\n\tvar chunk = new Chunk(this.start, this.end, this.original);\n\n\tchunk.intro = this.intro;\n\tchunk.outro = this.outro;\n\tchunk.content = this.content;\n\tchunk.storeName = this.storeName;\n\tchunk.edited = this.edited;\n\n\treturn chunk;\n};\n\nChunk.prototype.contains = function contains (index) {\n\treturn this.start < index && index < this.end;\n};\n\nChunk.prototype.eachNext = function eachNext (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.next;\n\t}\n};\n\nChunk.prototype.eachPrevious = function eachPrevious (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.previous;\n\t}\n};\n\nChunk.prototype.edit = function edit (content, storeName, contentOnly) {\n\tthis.content = content;\n\tif (!contentOnly) {\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t}\n\tthis.storeName = storeName;\n\n\tthis.edited = true;\n\n\treturn this;\n};\n\nChunk.prototype.prependLeft = function prependLeft (content) {\n\tthis.outro = content + this.outro;\n};\n\nChunk.prototype.prependRight = function prependRight (content) {\n\tthis.intro = content + this.intro;\n};\n\nChunk.prototype.split = function split (index) {\n\tvar sliceIndex = index - this.start;\n\n\tvar originalBefore = this.original.slice(0, sliceIndex);\n\tvar originalAfter = this.original.slice(sliceIndex);\n\n\tthis.original = originalBefore;\n\n\tvar newChunk = new Chunk(index, this.end, originalAfter);\n\tnewChunk.outro = this.outro;\n\tthis.outro = '';\n\n\tthis.end = index;\n\n\tif (this.edited) {\n\t\t// TODO is this block necessary?...\n\t\tnewChunk.edit('', false);\n\t\tthis.content = '';\n\t} else {\n\t\tthis.content = originalBefore;\n\t}\n\n\tnewChunk.next = this.next;\n\tif (newChunk.next) { newChunk.next.previous = newChunk; }\n\tnewChunk.previous = this;\n\tthis.next = newChunk;\n\n\treturn newChunk;\n};\n\nChunk.prototype.toString = function toString () {\n\treturn this.intro + this.content + this.outro;\n};\n\nChunk.prototype.trimEnd = function trimEnd (rx) {\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) { return true; }\n\t}\n};\n\nChunk.prototype.trimStart = function trimStart (rx) {\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.end - trimmed.length);\n\t\t\tthis.edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) { return true; }\n\t}\n};\n\nvar btoa = function () {\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n};\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\tbtoa = function (str) { return window.btoa(unescape(encodeURIComponent(str))); };\n} else if (typeof Buffer === 'function') {\n\tbtoa = function (str) { return Buffer.from(str, 'utf-8').toString('base64'); };\n}\n\nvar SourceMap = function SourceMap(properties) {\n\tthis.version = 3;\n\tthis.file = properties.file;\n\tthis.sources = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names = properties.names;\n\tthis.mappings = encode$2(properties.mappings);\n};\n\nSourceMap.prototype.toString = function toString () {\n\treturn JSON.stringify(this);\n};\n\nSourceMap.prototype.toUrl = function toUrl () {\n\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n};\n\nfunction guessIndent(code) {\n\tvar lines = code.split('\\n');\n\n\tvar tabbed = lines.filter(function (line) { return /^\\t+/.test(line); });\n\tvar spaced = lines.filter(function (line) { return /^ {2,}/.test(line); });\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce(function (previous, current) {\n\t\tvar numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tvar fromParts = from.split(/[/\\\\]/);\n\tvar toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tvar i = fromParts.length;\n\t\twhile (i--) { fromParts[i] = '..'; }\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nvar toString$2 = Object.prototype.toString;\n\nfunction isObject$1(thing) {\n\treturn toString$2.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tvar originalLines = source.split('\\n');\n\tvar lineOffsets = [];\n\n\tfor (var i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tvar i = 0;\n\t\tvar j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tvar m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tvar line = i - 1;\n\t\tvar column = index - lineOffsets[line];\n\t\treturn { line: line, column: column };\n\t};\n}\n\nvar Mappings = function Mappings(hires) {\n\tthis.hires = hires;\n\tthis.generatedCodeLine = 0;\n\tthis.generatedCodeColumn = 0;\n\tthis.raw = [];\n\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\tthis.pending = null;\n};\n\nMappings.prototype.addEdit = function addEdit (sourceIndex, content, loc, nameIndex) {\n\tif (content.length) {\n\t\tvar segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\tif (nameIndex >= 0) {\n\t\t\tsegment.push(nameIndex);\n\t\t}\n\t\tthis.rawSegments.push(segment);\n\t} else if (this.pending) {\n\t\tthis.rawSegments.push(this.pending);\n\t}\n\n\tthis.advance(content);\n\tthis.pending = null;\n};\n\nMappings.prototype.addUneditedChunk = function addUneditedChunk (sourceIndex, chunk, original, loc, sourcemapLocations) {\n\tvar originalCharIndex = chunk.start;\n\tvar first = true;\n\n\twhile (originalCharIndex < chunk.end) {\n\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t}\n\n\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\tloc.line += 1;\n\t\t\tloc.column = 0;\n\t\t\tthis.generatedCodeLine += 1;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t\tfirst = true;\n\t\t} else {\n\t\t\tloc.column += 1;\n\t\t\tthis.generatedCodeColumn += 1;\n\t\t\tfirst = false;\n\t\t}\n\n\t\toriginalCharIndex += 1;\n\t}\n\n\tthis.pending = null;\n};\n\nMappings.prototype.advance = function advance (str) {\n\tif (!str) { return; }\n\n\tvar lines = str.split('\\n');\n\n\tif (lines.length > 1) {\n\t\tfor (var i = 0; i < lines.length - 1; i++) {\n\t\t\tthis.generatedCodeLine++;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t}\n\t\tthis.generatedCodeColumn = 0;\n\t}\n\n\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n};\n\nvar n = '\\n';\n\nvar warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false\n};\n\nvar MagicString = function MagicString(string, options) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk(0, string.length, string);\n\n\tObject.defineProperties(this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: new BitSet() },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent(string) }\n\t});\n\n\tthis.byStart[0] = chunk;\n\tthis.byEnd[string.length] = chunk;\n};\n\nMagicString.prototype.addSourcemapLocation = function addSourcemapLocation (char) {\n\tthis.sourcemapLocations.add(char);\n};\n\nMagicString.prototype.append = function append (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.outro += content;\n\treturn this;\n};\n\nMagicString.prototype.appendLeft = function appendLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.appendLeft(content);\n\t} else {\n\t\tthis.intro += content;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.appendRight = function appendRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.appendRight(content);\n\t} else {\n\t\tthis.outro += content;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.clone = function clone () {\n\tvar cloned = new MagicString(this.original, { filename: this.filename });\n\n\tvar originalChunk = this.firstChunk;\n\tvar clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\twhile (originalChunk) {\n\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\tvar nextOriginalChunk = originalChunk.next;\n\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\tif (nextClonedChunk) {\n\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\tclonedChunk = nextClonedChunk;\n\t\t}\n\n\t\toriginalChunk = nextOriginalChunk;\n\t}\n\n\tcloned.lastChunk = clonedChunk;\n\n\tif (this.indentExclusionRanges) {\n\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t}\n\n\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\tcloned.intro = this.intro;\n\tcloned.outro = this.outro;\n\n\treturn cloned;\n};\n\nMagicString.prototype.generateDecodedMap = function generateDecodedMap (options) {\n\t\tvar this$1 = this;\n\n\toptions = options || {};\n\n\tvar sourceIndex = 0;\n\tvar names = Object.keys(this.storedNames);\n\tvar mappings = new Mappings(options.hires);\n\n\tvar locate = getLocator(this.original);\n\n\tif (this.intro) {\n\t\tmappings.advance(this.intro);\n\t}\n\n\tthis.firstChunk.eachNext(function (chunk) {\n\t\tvar loc = locate(chunk.start);\n\n\t\tif (chunk.intro.length) { mappings.advance(chunk.intro); }\n\n\t\tif (chunk.edited) {\n\t\t\tmappings.addEdit(\n\t\t\t\tsourceIndex,\n\t\t\t\tchunk.content,\n\t\t\t\tloc,\n\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t);\n\t\t} else {\n\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations);\n\t\t}\n\n\t\tif (chunk.outro.length) { mappings.advance(chunk.outro); }\n\t});\n\n\treturn {\n\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\tnames: names,\n\t\tmappings: mappings.raw\n\t};\n};\n\nMagicString.prototype.generateMap = function generateMap (options) {\n\treturn new SourceMap(this.generateDecodedMap(options));\n};\n\nMagicString.prototype.getIndentString = function getIndentString () {\n\treturn this.indentStr === null ? '\\t' : this.indentStr;\n};\n\nMagicString.prototype.indent = function indent (indentStr, options) {\n\tvar pattern = /^[^\\r\\n]/gm;\n\n\tif (isObject$1(indentStr)) {\n\t\toptions = indentStr;\n\t\tindentStr = undefined;\n\t}\n\n\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n\tif (indentStr === '') { return this; } // noop\n\n\toptions = options || {};\n\n\t// Process exclusion ranges\n\tvar isExcluded = {};\n\n\tif (options.exclude) {\n\t\tvar exclusions =\n\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\texclusions.forEach(function (exclusion) {\n\t\t\tfor (var i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\tisExcluded[i] = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\tvar replacer = function (match) {\n\t\tif (shouldIndentNextCharacter) { return (\"\" + indentStr + match); }\n\t\tshouldIndentNextCharacter = true;\n\t\treturn match;\n\t};\n\n\tthis.intro = this.intro.replace(pattern, replacer);\n\n\tvar charIndex = 0;\n\tvar chunk = this.firstChunk;\n\n\twhile (chunk) {\n\t\tvar end = chunk.end;\n\n\t\tif (chunk.edited) {\n\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcharIndex = chunk.start;\n\n\t\t\twhile (charIndex < end) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tvar char = this.original[charIndex];\n\n\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex += 1;\n\t\t\t}\n\t\t}\n\n\t\tcharIndex = chunk.end;\n\t\tchunk = chunk.next;\n\t}\n\n\tthis.outro = this.outro.replace(pattern, replacer);\n\n\treturn this;\n};\n\nMagicString.prototype.insert = function insert () {\n\tthrow new Error('magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)');\n};\n\nMagicString.prototype.insertLeft = function insertLeft (index, content) {\n\tif (!warned.insertLeft) {\n\t\tconsole.warn('magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'); // eslint-disable-line no-console\n\t\twarned.insertLeft = true;\n\t}\n\n\treturn this.appendLeft(index, content);\n};\n\nMagicString.prototype.insertRight = function insertRight (index, content) {\n\tif (!warned.insertRight) {\n\t\tconsole.warn('magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'); // eslint-disable-line no-console\n\t\twarned.insertRight = true;\n\t}\n\n\treturn this.prependRight(index, content);\n};\n\nMagicString.prototype.move = function move (start, end, index) {\n\tif (index >= start && index <= end) { throw new Error('Cannot move a selection inside itself'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\tthis._split(index);\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tvar oldLeft = first.previous;\n\tvar oldRight = last.next;\n\n\tvar newRight = this.byStart[index];\n\tif (!newRight && last === this.lastChunk) { return this; }\n\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\tif (oldLeft) { oldLeft.next = oldRight; }\n\tif (oldRight) { oldRight.previous = oldLeft; }\n\n\tif (newLeft) { newLeft.next = first; }\n\tif (newRight) { newRight.previous = last; }\n\n\tif (!first.previous) { this.firstChunk = last.next; }\n\tif (!last.next) {\n\t\tthis.lastChunk = first.previous;\n\t\tthis.lastChunk.next = null;\n\t}\n\n\tfirst.previous = newLeft;\n\tlast.next = newRight || null;\n\n\tif (!newLeft) { this.firstChunk = first; }\n\tif (!newRight) { this.lastChunk = last; }\n\treturn this;\n};\n\nMagicString.prototype.overwrite = function overwrite (start, end, content, options) {\n\tif (typeof content !== 'string') { throw new TypeError('replacement content must be a string'); }\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (end > this.original.length) { throw new Error('end is out of bounds'); }\n\tif (start === end)\n\t\t{ throw new Error('Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tif (options === true) {\n\t\tif (!warned.storeName) {\n\t\t\tconsole.warn('The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'); // eslint-disable-line no-console\n\t\t\twarned.storeName = true;\n\t\t}\n\n\t\toptions = { storeName: true };\n\t}\n\tvar storeName = options !== undefined ? options.storeName : false;\n\tvar contentOnly = options !== undefined ? options.contentOnly : false;\n\n\tif (storeName) {\n\t\tvar original = this.original.slice(start, end);\n\t\tthis.storedNames[original] = true;\n\t}\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tif (first) {\n\t\tif (end > first.end && first.next !== this.byStart[first.end]) {\n\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t}\n\n\t\tfirst.edit(content, storeName, contentOnly);\n\n\t\tif (first !== last) {\n\t\t\tvar chunk = first.next;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tchunk.edit('', false);\n\t\t\t\tchunk = chunk.next;\n\t\t\t}\n\n\t\t\tchunk.edit('', false);\n\t\t}\n\t} else {\n\t\t// must be inserting at the end\n\t\tvar newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\tlast.next = newChunk;\n\t\tnewChunk.previous = last;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.prepend = function prepend (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.intro = content + this.intro;\n\treturn this;\n};\n\nMagicString.prototype.prependLeft = function prependLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.prependLeft(content);\n\t} else {\n\t\tthis.intro = content + this.intro;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.prependRight = function prependRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.prependRight(content);\n\t} else {\n\t\tthis.outro = content + this.outro;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.remove = function remove (start, end) {\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (start === end) { return this; }\n\n\tif (start < 0 || end > this.original.length) { throw new Error('Character is out of bounds'); }\n\tif (start > end) { throw new Error('end must be greater than start'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tvar chunk = this.byStart[start];\n\n\twhile (chunk) {\n\t\tchunk.intro = '';\n\t\tchunk.outro = '';\n\t\tchunk.edit('');\n\n\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t}\n\treturn this;\n};\n\nMagicString.prototype.lastChar = function lastChar () {\n\tif (this.outro.length)\n\t\t{ return this.outro[this.outro.length - 1]; }\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length)\n\t\t\t{ return chunk.outro[chunk.outro.length - 1]; }\n\t\tif (chunk.content.length)\n\t\t\t{ return chunk.content[chunk.content.length - 1]; }\n\t\tif (chunk.intro.length)\n\t\t\t{ return chunk.intro[chunk.intro.length - 1]; }\n\t} while (chunk = chunk.previous);\n\tif (this.intro.length)\n\t\t{ return this.intro[this.intro.length - 1]; }\n\treturn '';\n};\n\nMagicString.prototype.lastLine = function lastLine () {\n\tvar lineIndex = this.outro.lastIndexOf(n);\n\tif (lineIndex !== -1)\n\t\t{ return this.outro.substr(lineIndex + 1); }\n\tvar lineStr = this.outro;\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length > 0) {\n\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.outro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.outro + lineStr;\n\t\t}\n\n\t\tif (chunk.content.length > 0) {\n\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.content.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.content + lineStr;\n\t\t}\n\n\t\tif (chunk.intro.length > 0) {\n\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\tif (lineIndex !== -1)\n\t\t\t\t{ return chunk.intro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.intro + lineStr;\n\t\t}\n\t} while (chunk = chunk.previous);\n\tlineIndex = this.intro.lastIndexOf(n);\n\tif (lineIndex !== -1)\n\t\t{ return this.intro.substr(lineIndex + 1) + lineStr; }\n\treturn this.intro + lineStr;\n};\n\nMagicString.prototype.slice = function slice (start, end) {\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tvar result = '';\n\n\t// find start chunk\n\tvar chunk = this.firstChunk;\n\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t// found end chunk before start\n\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\treturn result;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t{ throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\n\n\tvar startChunk = chunk;\n\twhile (chunk) {\n\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\tresult += chunk.intro;\n\t\t}\n\n\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t{ throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\n\n\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\tresult += chunk.outro;\n\t\t}\n\n\t\tif (containsEnd) {\n\t\t\tbreak;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\treturn result;\n};\n\n// TODO deprecate this? not really very useful\nMagicString.prototype.snip = function snip (start, end) {\n\tvar clone = this.clone();\n\tclone.remove(0, start);\n\tclone.remove(end, clone.original.length);\n\n\treturn clone;\n};\n\nMagicString.prototype._split = function _split (index) {\n\tif (this.byStart[index] || this.byEnd[index]) { return; }\n\n\tvar chunk = this.lastSearchedChunk;\n\tvar searchForward = index > chunk.end;\n\n\twhile (chunk) {\n\t\tif (chunk.contains(index)) { return this._splitChunk(chunk, index); }\n\n\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t}\n};\n\nMagicString.prototype._splitChunk = function _splitChunk (chunk, index) {\n\tif (chunk.edited && chunk.content.length) {\n\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\tvar loc = getLocator(this.original)(index);\n\t\tthrow new Error(\n\t\t\t(\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" \u2013 \\\"\" + (chunk.original) + \"\\\")\")\n\t\t);\n\t}\n\n\tvar newChunk = chunk.split(index);\n\n\tthis.byEnd[index] = chunk;\n\tthis.byStart[index] = newChunk;\n\tthis.byEnd[newChunk.end] = newChunk;\n\n\tif (chunk === this.lastChunk) { this.lastChunk = newChunk; }\n\n\tthis.lastSearchedChunk = chunk;\n\treturn true;\n};\n\nMagicString.prototype.toString = function toString () {\n\tvar str = this.intro;\n\n\tvar chunk = this.firstChunk;\n\twhile (chunk) {\n\t\tstr += chunk.toString();\n\t\tchunk = chunk.next;\n\t}\n\n\treturn str + this.outro;\n};\n\nMagicString.prototype.isEmpty = function isEmpty () {\n\tvar chunk = this.firstChunk;\n\tdo {\n\t\tif (chunk.intro.length && chunk.intro.trim() ||\n\t\t\t\tchunk.content.length && chunk.content.trim() ||\n\t\t\t\tchunk.outro.length && chunk.outro.trim())\n\t\t\t{ return false; }\n\t} while (chunk = chunk.next);\n\treturn true;\n};\n\nMagicString.prototype.length = function length () {\n\tvar chunk = this.firstChunk;\n\tvar length = 0;\n\tdo {\n\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t} while (chunk = chunk.next);\n\treturn length;\n};\n\nMagicString.prototype.trimLines = function trimLines () {\n\treturn this.trim('[\\\\r\\\\n]');\n};\n\nMagicString.prototype.trim = function trim (charType) {\n\treturn this.trimStart(charType).trimEnd(charType);\n};\n\nMagicString.prototype.trimEndAborted = function trimEndAborted (charType) {\n\tvar rx = new RegExp((charType || '\\\\s') + '+$');\n\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar chunk = this.lastChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimEnd(rx);\n\n\t\t// if chunk was trimmed, we have a new lastChunk\n\t\tif (chunk.end !== end) {\n\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t}\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.previous;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString.prototype.trimEnd = function trimEnd (charType) {\n\tthis.trimEndAborted(charType);\n\treturn this;\n};\nMagicString.prototype.trimStartAborted = function trimStartAborted (charType) {\n\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar chunk = this.firstChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimStart(rx);\n\n\t\tif (chunk.end !== end) {\n\t\t\t// special case...\n\t\t\tif (chunk === this.lastChunk) { this.lastChunk = chunk.next; }\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.next;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString.prototype.trimStart = function trimStart (charType) {\n\tthis.trimStartAborted(charType);\n\treturn this;\n};\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nfunction resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n}\n// path.normalize(path)\n// posix version\nfunction normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n}\n// posix version\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nfunction join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nfunction relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nvar sep = '/';\nvar delimiter = ':';\n\nfunction dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nfunction basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nfunction extname(path) {\n  return splitPath(path)[3];\n}\nvar path = {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\nvar _polyfillNode_path = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  resolve: resolve,\n  normalize: normalize,\n  isAbsolute: isAbsolute,\n  join: join,\n  relative: relative,\n  sep: sep,\n  delimiter: delimiter,\n  dirname: dirname,\n  basename: basename,\n  extname: extname,\n  'default': path\n});\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter$1 = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nfunction encode$3(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter$1);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nfunction toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode$3(string) :\n      string;\n  });\n}\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\nvar formatRegExp = /%[sdj%]/g;\nfunction format(f) {\n  if (!isString$1(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject$2(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (browser$1.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (browser$1.throwDeprecation) {\n        throw new Error(msg);\n      } else if (browser$1.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = browser$1.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n}\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction$1(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString$1(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction$1(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray$2(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction$1(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString$1(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty$1(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty$1(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray$2(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString$1(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isSymbol$1(arg) {\n  return typeof arg === 'symbol';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject$2(re) && objectToString$1(re) === '[object RegExp]';\n}\n\nfunction isObject$2(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject$2(d) && objectToString$1(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject$2(e) &&\n      (objectToString$1(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction$1(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction isBuffer$1(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString$1(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad$1(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad$1(d.getHours()),\n              pad$1(d.getMinutes()),\n              pad$1(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject$2(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty$1(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar _polyfillNode_util = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer$1,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction$1,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject$2,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol$1,\n  isString: isString$1,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray$2,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\n\nvar _polyfillNode_util$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  format: format,\n  deprecate: deprecate,\n  debuglog: debuglog,\n  inspect: inspect,\n  isArray: isArray$2,\n  isBoolean: isBoolean,\n  isNull: isNull,\n  isNullOrUndefined: isNullOrUndefined,\n  isNumber: isNumber,\n  isString: isString$1,\n  isSymbol: isSymbol$1,\n  isUndefined: isUndefined,\n  isRegExp: isRegExp,\n  isObject: isObject$2,\n  isDate: isDate,\n  isError: isError,\n  isFunction: isFunction$1,\n  isPrimitive: isPrimitive,\n  isBuffer: isBuffer$1,\n  log: log,\n  inherits: inherits$1,\n  _extend: _extend,\n  'default': _polyfillNode_util\n});\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty$2(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray$3 = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nfunction stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map$1(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray$3(obj[k])) {\n        return map$1(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n}\nfunction map$1 (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nfunction parse$2(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty$2(obj, k)) {\n      obj[k] = v;\n    } else if (isArray$3(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n}\n\n// Copyright Joyent, Inc. and other Node contributors.\nvar _polyfillNode_url = {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n};\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject$2(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse$3(this, url, parseQueryString, slashesDenoteHost);\n};\n\nfunction parse$3(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString$1(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = parse$2(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = parse$2(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format$1(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString$1(obj)) obj = parse$3({}, obj);\n  return format$1(obj);\n}\n\nfunction format$1(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject$2(self.query) &&\n    Object.keys(self.query).length) {\n    query = stringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format$1(this);\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString$1(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n\nvar _polyfillNode_url$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  'default': _polyfillNode_url,\n  Url: Url\n});\n\nfunction isRelativeUrl(url) {\r\n    const firstChar = url.charAt(0);\r\n    return firstChar === '.' || firstChar === '~' || firstChar === '@';\r\n}\r\nconst externalRE = /^(https?:)?\\/\\//;\r\nfunction isExternalUrl(url) {\r\n    return externalRE.test(url);\r\n}\r\nconst dataUrlRE = /^\\s*data:/i;\r\nfunction isDataUrl(url) {\r\n    return dataUrlRE.test(url);\r\n}\r\n/**\r\n * Parses string url into URL object.\r\n */\r\nfunction parseUrl(url) {\r\n    const firstChar = url.charAt(0);\r\n    if (firstChar === '~') {\r\n        const secondChar = url.charAt(1);\r\n        url = url.slice(secondChar === '/' ? 2 : 1);\r\n    }\r\n    return parseUriParts(url);\r\n}\r\n/**\r\n * vuejs/component-compiler-utils#22 Support uri fragment in transformed require\r\n * @param urlString an url as a string\r\n */\r\nfunction parseUriParts(urlString) {\r\n    // A TypeError is thrown if urlString is not a string\r\n    // @see https://nodejs.org/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\r\n    return urlParse(isString(urlString) ? urlString : '', false, true);\r\n}\n\nconst defaultAssetUrlOptions = {\r\n    base: null,\r\n    includeAbsolute: false,\r\n    tags: {\r\n        video: ['src', 'poster'],\r\n        source: ['src'],\r\n        img: ['src'],\r\n        image: ['xlink:href', 'href'],\r\n        use: ['xlink:href', 'href']\r\n    }\r\n};\r\nconst normalizeOptions = (options) => {\r\n    if (Object.keys(options).some(key => isArray(options[key]))) {\r\n        // legacy option format which directly passes in tags config\r\n        return Object.assign(Object.assign({}, defaultAssetUrlOptions), { tags: options });\r\n    }\r\n    return Object.assign(Object.assign({}, defaultAssetUrlOptions), options);\r\n};\r\nconst createAssetUrlTransformWithOptions = (options) => {\r\n    return (node, context) => transformAssetUrl(node, context, options);\r\n};\r\n/**\r\n * A `@vue/compiler-core` plugin that transforms relative asset urls into\r\n * either imports or absolute urls.\r\n *\r\n * ``` js\r\n * // Before\r\n * createVNode('img', { src: './logo.png' })\r\n *\r\n * // After\r\n * import _imports_0 from './logo.png'\r\n * createVNode('img', { src: _imports_0 })\r\n * ```\r\n */\r\nconst transformAssetUrl = (node, context, options = defaultAssetUrlOptions) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        if (!node.props.length) {\r\n            return;\r\n        }\r\n        const tags = options.tags || defaultAssetUrlOptions.tags;\r\n        const attrs = tags[node.tag];\r\n        const wildCardAttrs = tags['*'];\r\n        if (!attrs && !wildCardAttrs) {\r\n            return;\r\n        }\r\n        const assetAttrs = (attrs || []).concat(wildCardAttrs || []);\r\n        node.props.forEach((attr, index) => {\r\n            if (attr.type !== 6 /* ATTRIBUTE */ ||\r\n                !assetAttrs.includes(attr.name) ||\r\n                !attr.value ||\r\n                isExternalUrl(attr.value.content) ||\r\n                isDataUrl(attr.value.content) ||\r\n                attr.value.content[0] === '#' ||\r\n                (!options.includeAbsolute && !isRelativeUrl(attr.value.content))) {\r\n                return;\r\n            }\r\n            const url = parseUrl(attr.value.content);\r\n            if (options.base && attr.value.content[0] === '.') {\r\n                // explicit base - directly rewrite relative urls into absolute url\r\n                // to avoid generating extra imports\r\n                // Allow for full hostnames provided in options.base\r\n                const base = parseUrl(options.base);\r\n                const protocol = base.protocol || '';\r\n                const host = base.host ? protocol + '//' + base.host : '';\r\n                const basePath = base.path || '/';\r\n                // when packaged in the browser, path will be using the posix-\r\n                // only version provided by rollup-plugin-node-builtins.\r\n                attr.value.content =\r\n                    host +\r\n                        (path.posix || path).join(basePath, url.path + (url.hash || ''));\r\n                return;\r\n            }\r\n            // otherwise, transform the url into an import.\r\n            // this assumes a bundler will resolve the import into the correct\r\n            // absolute url (e.g. webpack file-loader)\r\n            const exp = getImportsExpressionExp(url.path, url.hash, attr.loc, context);\r\n            node.props[index] = {\r\n                type: 7 /* DIRECTIVE */,\r\n                name: 'bind',\r\n                arg: createSimpleExpression(attr.name, true, attr.loc),\r\n                exp,\r\n                modifiers: [],\r\n                loc: attr.loc\r\n            };\r\n        });\r\n    }\r\n};\r\nfunction getImportsExpressionExp(path, hash, loc, context) {\r\n    if (path) {\r\n        let name;\r\n        let exp;\r\n        const existingIndex = context.imports.findIndex(i => i.path === path);\r\n        if (existingIndex > -1) {\r\n            name = `_imports_${existingIndex}`;\r\n            exp = context.imports[existingIndex].exp;\r\n        }\r\n        else {\r\n            name = `_imports_${context.imports.length}`;\r\n            exp = createSimpleExpression(name, false, loc, 3 /* CAN_STRINGIFY */);\r\n            context.imports.push({ exp, path });\r\n        }\r\n        if (!hash) {\r\n            return exp;\r\n        }\r\n        const hashExp = `${name} + '${hash}'`;\r\n        const finalExp = createSimpleExpression(hashExp, false, loc, 3 /* CAN_STRINGIFY */);\r\n        if (!context.hoistStatic) {\r\n            return finalExp;\r\n        }\r\n        const existingHoistIndex = context.hoists.findIndex(h => {\r\n            return (h &&\r\n                h.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                !h.isStatic &&\r\n                h.content === hashExp);\r\n        });\r\n        if (existingHoistIndex > -1) {\r\n            return createSimpleExpression(`_hoisted_${existingHoistIndex + 1}`, false, loc, 3 /* CAN_STRINGIFY */);\r\n        }\r\n        return context.hoist(finalExp);\r\n    }\r\n    else {\r\n        return createSimpleExpression(`''`, false, loc, 3 /* CAN_STRINGIFY */);\r\n    }\r\n}\n\nconst srcsetTags = ['img', 'source'];\r\n// http://w3c.github.io/html/semantics-embedded-content.html#ref-for-image-candidate-string-5\r\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\r\nconst createSrcsetTransformWithOptions = (options) => {\r\n    return (node, context) => transformSrcset(node, context, options);\r\n};\r\nconst transformSrcset = (node, context, options = defaultAssetUrlOptions) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        if (srcsetTags.includes(node.tag) && node.props.length) {\r\n            node.props.forEach((attr, index) => {\r\n                if (attr.name === 'srcset' && attr.type === 6 /* ATTRIBUTE */) {\r\n                    if (!attr.value)\r\n                        return;\r\n                    const value = attr.value.content;\r\n                    if (!value)\r\n                        return;\r\n                    const imageCandidates = value.split(',').map(s => {\r\n                        // The attribute value arrives here with all whitespace, except\r\n                        // normal spaces, represented by escape sequences\r\n                        const [url, descriptor] = s\r\n                            .replace(escapedSpaceCharacters, ' ')\r\n                            .trim()\r\n                            .split(' ', 2);\r\n                        return { url, descriptor };\r\n                    });\r\n                    // data urls contains comma after the encoding so we need to re-merge\r\n                    // them\r\n                    for (let i = 0; i < imageCandidates.length; i++) {\r\n                        const { url } = imageCandidates[i];\r\n                        if (isDataUrl(url)) {\r\n                            imageCandidates[i + 1].url =\r\n                                url + ',' + imageCandidates[i + 1].url;\r\n                            imageCandidates.splice(i, 1);\r\n                        }\r\n                    }\r\n                    const shouldProcessUrl = (url) => {\r\n                        return (!isExternalUrl(url) &&\r\n                            !isDataUrl(url) &&\r\n                            (options.includeAbsolute || isRelativeUrl(url)));\r\n                    };\r\n                    // When srcset does not contain any qualified URLs, skip transforming\r\n                    if (!imageCandidates.some(({ url }) => shouldProcessUrl(url))) {\r\n                        return;\r\n                    }\r\n                    if (options.base) {\r\n                        const base = options.base;\r\n                        const set = [];\r\n                        let needImportTransform = false;\r\n                        imageCandidates.forEach(candidate => {\r\n                            let { url, descriptor } = candidate;\r\n                            descriptor = descriptor ? ` ${descriptor}` : ``;\r\n                            if (url[0] === '.') {\r\n                                candidate.url = (path.posix || path).join(base, url);\r\n                                set.push(candidate.url + descriptor);\r\n                            }\r\n                            else if (shouldProcessUrl(url)) {\r\n                                needImportTransform = true;\r\n                            }\r\n                            else {\r\n                                set.push(url + descriptor);\r\n                            }\r\n                        });\r\n                        if (!needImportTransform) {\r\n                            attr.value.content = set.join(', ');\r\n                            return;\r\n                        }\r\n                    }\r\n                    const compoundExpression = createCompoundExpression([], attr.loc);\r\n                    imageCandidates.forEach(({ url, descriptor }, index) => {\r\n                        if (shouldProcessUrl(url)) {\r\n                            const { path } = parseUrl(url);\r\n                            let exp;\r\n                            if (path) {\r\n                                const existingImportsIndex = context.imports.findIndex(i => i.path === path);\r\n                                if (existingImportsIndex > -1) {\r\n                                    exp = createSimpleExpression(`_imports_${existingImportsIndex}`, false, attr.loc, 3 /* CAN_STRINGIFY */);\r\n                                }\r\n                                else {\r\n                                    exp = createSimpleExpression(`_imports_${context.imports.length}`, false, attr.loc, 3 /* CAN_STRINGIFY */);\r\n                                    context.imports.push({ exp, path });\r\n                                }\r\n                                compoundExpression.children.push(exp);\r\n                            }\r\n                        }\r\n                        else {\r\n                            const exp = createSimpleExpression(`\"${url}\"`, false, attr.loc, 3 /* CAN_STRINGIFY */);\r\n                            compoundExpression.children.push(exp);\r\n                        }\r\n                        const isNotLast = imageCandidates.length - 1 > index;\r\n                        if (descriptor && isNotLast) {\r\n                            compoundExpression.children.push(` + ' ${descriptor}, ' + `);\r\n                        }\r\n                        else if (descriptor) {\r\n                            compoundExpression.children.push(` + ' ${descriptor}'`);\r\n                        }\r\n                        else if (isNotLast) {\r\n                            compoundExpression.children.push(` + ', ' + `);\r\n                        }\r\n                    });\r\n                    let exp = compoundExpression;\r\n                    if (context.hoistStatic) {\r\n                        exp = context.hoist(compoundExpression);\r\n                        exp.constType = 3 /* CAN_STRINGIFY */;\r\n                    }\r\n                    node.props[index] = {\r\n                        type: 7 /* DIRECTIVE */,\r\n                        name: 'bind',\r\n                        arg: createSimpleExpression('srcset', true, attr.loc),\r\n                        exp,\r\n                        modifiers: [],\r\n                        loc: attr.loc\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\nconst SSR_INTERPOLATE = Symbol(`ssrInterpolate`);\r\nconst SSR_RENDER_VNODE = Symbol(`ssrRenderVNode`);\r\nconst SSR_RENDER_COMPONENT = Symbol(`ssrRenderComponent`);\r\nconst SSR_RENDER_SLOT = Symbol(`ssrRenderSlot`);\r\nconst SSR_RENDER_SLOT_INNER = Symbol(`ssrRenderSlotInner`);\r\nconst SSR_RENDER_CLASS = Symbol(`ssrRenderClass`);\r\nconst SSR_RENDER_STYLE = Symbol(`ssrRenderStyle`);\r\nconst SSR_RENDER_ATTRS = Symbol(`ssrRenderAttrs`);\r\nconst SSR_RENDER_ATTR = Symbol(`ssrRenderAttr`);\r\nconst SSR_RENDER_DYNAMIC_ATTR = Symbol(`ssrRenderDynamicAttr`);\r\nconst SSR_RENDER_LIST = Symbol(`ssrRenderList`);\r\nconst SSR_INCLUDE_BOOLEAN_ATTR = Symbol(`ssrIncludeBooleanAttr`);\r\nconst SSR_LOOSE_EQUAL = Symbol(`ssrLooseEqual`);\r\nconst SSR_LOOSE_CONTAIN = Symbol(`ssrLooseContain`);\r\nconst SSR_RENDER_DYNAMIC_MODEL = Symbol(`ssrRenderDynamicModel`);\r\nconst SSR_GET_DYNAMIC_MODEL_PROPS = Symbol(`ssrGetDynamicModelProps`);\r\nconst SSR_RENDER_TELEPORT = Symbol(`ssrRenderTeleport`);\r\nconst SSR_RENDER_SUSPENSE = Symbol(`ssrRenderSuspense`);\r\nconst SSR_GET_DIRECTIVE_PROPS = Symbol(`ssrGetDirectiveProps`);\r\nconst ssrHelpers = {\r\n    [SSR_INTERPOLATE]: `ssrInterpolate`,\r\n    [SSR_RENDER_VNODE]: `ssrRenderVNode`,\r\n    [SSR_RENDER_COMPONENT]: `ssrRenderComponent`,\r\n    [SSR_RENDER_SLOT]: `ssrRenderSlot`,\r\n    [SSR_RENDER_SLOT_INNER]: `ssrRenderSlotInner`,\r\n    [SSR_RENDER_CLASS]: `ssrRenderClass`,\r\n    [SSR_RENDER_STYLE]: `ssrRenderStyle`,\r\n    [SSR_RENDER_ATTRS]: `ssrRenderAttrs`,\r\n    [SSR_RENDER_ATTR]: `ssrRenderAttr`,\r\n    [SSR_RENDER_DYNAMIC_ATTR]: `ssrRenderDynamicAttr`,\r\n    [SSR_RENDER_LIST]: `ssrRenderList`,\r\n    [SSR_INCLUDE_BOOLEAN_ATTR]: `ssrIncludeBooleanAttr`,\r\n    [SSR_LOOSE_EQUAL]: `ssrLooseEqual`,\r\n    [SSR_LOOSE_CONTAIN]: `ssrLooseContain`,\r\n    [SSR_RENDER_DYNAMIC_MODEL]: `ssrRenderDynamicModel`,\r\n    [SSR_GET_DYNAMIC_MODEL_PROPS]: `ssrGetDynamicModelProps`,\r\n    [SSR_RENDER_TELEPORT]: `ssrRenderTeleport`,\r\n    [SSR_RENDER_SUSPENSE]: `ssrRenderSuspense`,\r\n    [SSR_GET_DIRECTIVE_PROPS]: `ssrGetDirectiveProps`\r\n};\r\n// Note: these are helpers imported from @vue/server-renderer\r\n// make sure the names match!\r\nregisterRuntimeHelpers(ssrHelpers);\n\n// Plugin for the first transform pass, which simply constructs the AST node\r\nconst ssrTransformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, processIf);\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nfunction ssrProcessIf(node, context, disableNestedFragments = false) {\r\n    const [rootBranch] = node.branches;\r\n    const ifStatement = createIfStatement(rootBranch.condition, processIfBranch(rootBranch, context, disableNestedFragments));\r\n    context.pushStatement(ifStatement);\r\n    let currentIf = ifStatement;\r\n    for (let i = 1; i < node.branches.length; i++) {\r\n        const branch = node.branches[i];\r\n        const branchBlockStatement = processIfBranch(branch, context, disableNestedFragments);\r\n        if (branch.condition) {\r\n            // else-if\r\n            currentIf = currentIf.alternate = createIfStatement(branch.condition, branchBlockStatement);\r\n        }\r\n        else {\r\n            // else\r\n            currentIf.alternate = branchBlockStatement;\r\n        }\r\n    }\r\n    if (!currentIf.alternate) {\r\n        currentIf.alternate = createBlockStatement([\r\n            createCallExpression(`_push`, ['`<!---->`'])\r\n        ]);\r\n    }\r\n}\r\nfunction processIfBranch(branch, context, disableNestedFragments = false) {\r\n    const { children } = branch;\r\n    const needFragmentWrapper = !disableNestedFragments &&\r\n        (children.length !== 1 || children[0].type !== 1 /* ELEMENT */) &&\r\n        // optimize away nested fragments when the only child is a ForNode\r\n        !(children.length === 1 && children[0].type === 11 /* FOR */);\r\n    return processChildrenAsStatement(branch, context, needFragmentWrapper);\r\n}\n\n// Plugin for the first transform pass, which simply constructs the AST node\r\nconst ssrTransformFor = createStructuralDirectiveTransform('for', processFor);\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nfunction ssrProcessFor(node, context, disableNestedFragments = false) {\r\n    const needFragmentWrapper = !disableNestedFragments &&\r\n        (node.children.length !== 1 || node.children[0].type !== 1 /* ELEMENT */);\r\n    const renderLoop = createFunctionExpression(createForLoopParams(node.parseResult));\r\n    renderLoop.body = processChildrenAsStatement(node, context, needFragmentWrapper);\r\n    // v-for always renders a fragment unless explicitly disabled\r\n    if (!disableNestedFragments) {\r\n        context.pushStringPart(`<!--[-->`);\r\n    }\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_LIST), [\r\n        node.source,\r\n        renderLoop\r\n    ]));\r\n    if (!disableNestedFragments) {\r\n        context.pushStringPart(`<!--]-->`);\r\n    }\r\n}\n\nconst ssrTransformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const args = [\r\n            `_ctx.$slots`,\r\n            slotName,\r\n            slotProps || `{}`,\r\n            // fallback content placeholder. will be replaced in the process phase\r\n            `null`,\r\n            `_push`,\r\n            `_parent`\r\n        ];\r\n        // inject slot scope id if current template uses :slotted\r\n        if (context.scopeId && context.slotted !== false) {\r\n            args.push(`\"${context.scopeId}-s\"`);\r\n        }\r\n        let method = SSR_RENDER_SLOT;\r\n        // #3989\r\n        // check if this is a single slot inside a transition wrapper - since\r\n        // transition will unwrap the slot fragment into a single vnode at runtime,\r\n        // we need to avoid rendering the slot as a fragment.\r\n        const parent = context.parent;\r\n        if (parent &&\r\n            parent.type === 1 /* ELEMENT */ &&\r\n            parent.tagType === 1 /* COMPONENT */ &&\r\n            resolveComponentType(parent, context, true) === TRANSITION &&\r\n            parent.children.filter(c => c.type === 1 /* ELEMENT */).length === 1) {\r\n            method = SSR_RENDER_SLOT_INNER;\r\n            if (!(context.scopeId && context.slotted !== false)) {\r\n                args.push('null');\r\n            }\r\n            args.push('true');\r\n        }\r\n        node.ssrCodegenNode = createCallExpression(context.helper(method), args);\r\n    }\r\n};\r\nfunction ssrProcessSlotOutlet(node, context) {\r\n    const renderCall = node.ssrCodegenNode;\r\n    // has fallback content\r\n    if (node.children.length) {\r\n        const fallbackRenderFn = createFunctionExpression([]);\r\n        fallbackRenderFn.body = processChildrenAsStatement(node, context);\r\n        // _renderSlot(slots, name, props, fallback, ...)\r\n        renderCall.arguments[3] = fallbackRenderFn;\r\n    }\r\n    // Forwarded <slot/>. Merge slot scope ids\r\n    if (context.withSlotScopeId) {\r\n        const slotScopeId = renderCall.arguments[6];\r\n        renderCall.arguments[6] = slotScopeId\r\n            ? `${slotScopeId} + _scopeId`\r\n            : `_scopeId`;\r\n    }\r\n    context.pushStatement(node.ssrCodegenNode);\r\n}\n\nfunction createSSRCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, SSRErrorMessages);\r\n}\r\nconst SSRErrorMessages = {\r\n    [61 /* X_SSR_UNSAFE_ATTR_NAME */]: `Unsafe attribute name for SSR.`,\r\n    [62 /* X_SSR_NO_TELEPORT_TARGET */]: `Missing the 'to' prop on teleport element.`,\r\n    [63 /* X_SSR_INVALID_AST_NODE */]: `Invalid AST node during SSR transform.`\r\n};\n\n// Note: this is a 2nd-pass codegen transform.\r\nfunction ssrProcessTeleport(node, context) {\r\n    const targetProp = findProp(node, 'to');\r\n    if (!targetProp) {\r\n        context.onError(createSSRCompilerError(62 /* X_SSR_NO_TELEPORT_TARGET */, node.loc));\r\n        return;\r\n    }\r\n    let target;\r\n    if (targetProp.type === 6 /* ATTRIBUTE */) {\r\n        target =\r\n            targetProp.value && createSimpleExpression(targetProp.value.content, true);\r\n    }\r\n    else {\r\n        target = targetProp.exp;\r\n    }\r\n    if (!target) {\r\n        context.onError(createSSRCompilerError(62 /* X_SSR_NO_TELEPORT_TARGET */, targetProp.loc));\r\n        return;\r\n    }\r\n    const disabledProp = findProp(node, 'disabled', false, true /* allow empty */);\r\n    const disabled = disabledProp\r\n        ? disabledProp.type === 6 /* ATTRIBUTE */\r\n            ? `true`\r\n            : disabledProp.exp || `false`\r\n        : `false`;\r\n    const contentRenderFn = createFunctionExpression([`_push`], undefined, // Body is added later\r\n    true, // newline\r\n    false, // isSlot\r\n    node.loc);\r\n    contentRenderFn.body = processChildrenAsStatement(node, context);\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_TELEPORT), [\r\n        `_push`,\r\n        contentRenderFn,\r\n        target,\r\n        disabled,\r\n        `_parent`\r\n    ]));\r\n}\n\nconst wipMap = new WeakMap();\r\n// phase 1\r\nfunction ssrTransformSuspense(node, context) {\r\n    return () => {\r\n        if (node.children.length) {\r\n            const wipEntry = {\r\n                slotsExp: null,\r\n                wipSlots: []\r\n            };\r\n            wipMap.set(node, wipEntry);\r\n            wipEntry.slotsExp = buildSlots(node, context, (_props, children, loc) => {\r\n                const fn = createFunctionExpression([], undefined, // no return, assign body later\r\n                true, // newline\r\n                false, // suspense slots are not treated as normal slots\r\n                loc);\r\n                wipEntry.wipSlots.push({\r\n                    fn,\r\n                    children\r\n                });\r\n                return fn;\r\n            }).slots;\r\n        }\r\n    };\r\n}\r\n// phase 2\r\nfunction ssrProcessSuspense(node, context) {\r\n    // complete wip slots with ssr code\r\n    const wipEntry = wipMap.get(node);\r\n    if (!wipEntry) {\r\n        return;\r\n    }\r\n    const { slotsExp, wipSlots } = wipEntry;\r\n    for (let i = 0; i < wipSlots.length; i++) {\r\n        const slot = wipSlots[i];\r\n        slot.fn.body = processChildrenAsStatement(slot, context);\r\n    }\r\n    // _push(ssrRenderSuspense(slots))\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_SUSPENSE), [\r\n        `_push`,\r\n        slotsExp\r\n    ]));\r\n}\n\n// for directives with children overwrite (e.g. v-html & v-text), we need to\r\n// store the raw children so that they can be added in the 2nd pass.\r\nconst rawChildrenMap = new WeakMap();\r\nconst ssrTransformElement = (node, context) => {\r\n    if (node.type !== 1 /* ELEMENT */ ||\r\n        node.tagType !== 0 /* ELEMENT */) {\r\n        return;\r\n    }\r\n    return function ssrPostTransformElement() {\r\n        // element\r\n        // generate the template literal representing the open tag.\r\n        const openTag = [`<${node.tag}`];\r\n        // some tags need to be passed to runtime for special checks\r\n        const needTagForRuntime = node.tag === 'textarea' || node.tag.indexOf('-') > 0;\r\n        // v-bind=\"obj\", v-bind:[key] and custom directives can potentially\r\n        // overwrite other static attrs and can affect final rendering result,\r\n        // so when they are present we need to bail out to full `renderAttrs`\r\n        const hasDynamicVBind = hasDynamicKeyVBind(node);\r\n        const hasCustomDir = node.props.some(p => p.type === 7 /* DIRECTIVE */ && !isBuiltInDirective(p.name));\r\n        const needMergeProps = hasDynamicVBind || hasCustomDir;\r\n        if (needMergeProps) {\r\n            const { props, directives } = buildProps(node, context, node.props, false /* isComponent */, false /* isDynamicComponent */, true /* ssr */);\r\n            if (props || directives.length) {\r\n                const mergedProps = buildSSRProps(props, directives, context);\r\n                const propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [mergedProps]);\r\n                if (node.tag === 'textarea') {\r\n                    const existingText = node.children[0];\r\n                    // If interpolation, this is dynamic <textarea> content, potentially\r\n                    // injected by v-model and takes higher priority than v-bind value\r\n                    if (!existingText || existingText.type !== 5 /* INTERPOLATION */) {\r\n                        // <textarea> with dynamic v-bind. We don't know if the final props\r\n                        // will contain .value, so we will have to do something special:\r\n                        // assign the merged props to a temp variable, and check whether\r\n                        // it contains value (if yes, render is as children).\r\n                        const tempId = `_temp${context.temps++}`;\r\n                        propsExp.arguments = [\r\n                            createAssignmentExpression(createSimpleExpression(tempId, false), mergedProps)\r\n                        ];\r\n                        rawChildrenMap.set(node, createCallExpression(context.helper(SSR_INTERPOLATE), [\r\n                            createConditionalExpression(createSimpleExpression(`\"value\" in ${tempId}`, false), createSimpleExpression(`${tempId}.value`, false), createSimpleExpression(existingText ? existingText.content : ``, true), false)\r\n                        ]));\r\n                    }\r\n                }\r\n                else if (node.tag === 'input') {\r\n                    // <input v-bind=\"obj\" v-model>\r\n                    // we need to determine the props to render for the dynamic v-model\r\n                    // and merge it with the v-bind expression.\r\n                    const vModel = findVModel(node);\r\n                    if (vModel) {\r\n                        // 1. save the props (san v-model) in a temp variable\r\n                        const tempId = `_temp${context.temps++}`;\r\n                        const tempExp = createSimpleExpression(tempId, false);\r\n                        propsExp.arguments = [\r\n                            createSequenceExpression([\r\n                                createAssignmentExpression(tempExp, mergedProps),\r\n                                createCallExpression(context.helper(MERGE_PROPS), [\r\n                                    tempExp,\r\n                                    createCallExpression(context.helper(SSR_GET_DYNAMIC_MODEL_PROPS), [\r\n                                        tempExp,\r\n                                        vModel.exp // model\r\n                                    ])\r\n                                ])\r\n                            ])\r\n                        ];\r\n                    }\r\n                }\r\n                if (needTagForRuntime) {\r\n                    propsExp.arguments.push(`\"${node.tag}\"`);\r\n                }\r\n                openTag.push(propsExp);\r\n            }\r\n        }\r\n        // book keeping static/dynamic class merging.\r\n        let dynamicClassBinding = undefined;\r\n        let staticClassBinding = undefined;\r\n        // all style bindings are converted to dynamic by transformStyle.\r\n        // but we need to make sure to merge them.\r\n        let dynamicStyleBinding = undefined;\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const prop = node.props[i];\r\n            // ignore true-value/false-value on input\r\n            if (node.tag === 'input' && isTrueFalseValue(prop)) {\r\n                continue;\r\n            }\r\n            // special cases with children override\r\n            if (prop.type === 7 /* DIRECTIVE */) {\r\n                if (prop.name === 'html' && prop.exp) {\r\n                    rawChildrenMap.set(node, prop.exp);\r\n                }\r\n                else if (prop.name === 'text' && prop.exp) {\r\n                    node.children = [createInterpolation(prop.exp, prop.loc)];\r\n                }\r\n                else if (prop.name === 'slot') {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, prop.loc));\r\n                }\r\n                else if (isTextareaWithValue(node, prop) && prop.exp) {\r\n                    if (!needMergeProps) {\r\n                        node.children = [createInterpolation(prop.exp, prop.loc)];\r\n                    }\r\n                }\r\n                else if (!needMergeProps && prop.name !== 'on') {\r\n                    // Directive transforms.\r\n                    const directiveTransform = context.directiveTransforms[prop.name];\r\n                    if (directiveTransform) {\r\n                        const { props, ssrTagParts } = directiveTransform(prop, node, context);\r\n                        if (ssrTagParts) {\r\n                            openTag.push(...ssrTagParts);\r\n                        }\r\n                        for (let j = 0; j < props.length; j++) {\r\n                            const { key, value } = props[j];\r\n                            if (isStaticExp(key)) {\r\n                                let attrName = key.content;\r\n                                // static key attr\r\n                                if (attrName === 'key' || attrName === 'ref') {\r\n                                    continue;\r\n                                }\r\n                                if (attrName === 'class') {\r\n                                    openTag.push(` class=\"`, (dynamicClassBinding = createCallExpression(context.helper(SSR_RENDER_CLASS), [value])), `\"`);\r\n                                }\r\n                                else if (attrName === 'style') {\r\n                                    if (dynamicStyleBinding) {\r\n                                        // already has style binding, merge into it.\r\n                                        mergeCall(dynamicStyleBinding, value);\r\n                                    }\r\n                                    else {\r\n                                        openTag.push(` style=\"`, (dynamicStyleBinding = createCallExpression(context.helper(SSR_RENDER_STYLE), [value])), `\"`);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    attrName =\r\n                                        node.tag.indexOf('-') > 0\r\n                                            ? attrName // preserve raw name on custom elements\r\n                                            : propsToAttrMap[attrName] || attrName.toLowerCase();\r\n                                    if (isBooleanAttr(attrName)) {\r\n                                        openTag.push(createConditionalExpression(createCallExpression(context.helper(SSR_INCLUDE_BOOLEAN_ATTR), [value]), createSimpleExpression(' ' + attrName, true), createSimpleExpression('', true), false /* no newline */));\r\n                                    }\r\n                                    else if (isSSRSafeAttrName(attrName)) {\r\n                                        openTag.push(createCallExpression(context.helper(SSR_RENDER_ATTR), [\r\n                                            key,\r\n                                            value\r\n                                        ]));\r\n                                    }\r\n                                    else {\r\n                                        context.onError(createSSRCompilerError(61 /* X_SSR_UNSAFE_ATTR_NAME */, key.loc));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // dynamic key attr\r\n                                // this branch is only encountered for custom directive\r\n                                // transforms that returns properties with dynamic keys\r\n                                const args = [key, value];\r\n                                if (needTagForRuntime) {\r\n                                    args.push(`\"${node.tag}\"`);\r\n                                }\r\n                                openTag.push(createCallExpression(context.helper(SSR_RENDER_DYNAMIC_ATTR), args));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // special case: value on <textarea>\r\n                if (node.tag === 'textarea' && prop.name === 'value' && prop.value) {\r\n                    rawChildrenMap.set(node, escapeHtml(prop.value.content));\r\n                }\r\n                else if (!needMergeProps) {\r\n                    if (prop.name === 'key' || prop.name === 'ref') {\r\n                        continue;\r\n                    }\r\n                    // static prop\r\n                    if (prop.name === 'class' && prop.value) {\r\n                        staticClassBinding = JSON.stringify(prop.value.content);\r\n                    }\r\n                    openTag.push(` ${prop.name}` +\r\n                        (prop.value ? `=\"${escapeHtml(prop.value.content)}\"` : ``));\r\n                }\r\n            }\r\n        }\r\n        // handle co-existence of dynamic + static class bindings\r\n        if (dynamicClassBinding && staticClassBinding) {\r\n            mergeCall(dynamicClassBinding, staticClassBinding);\r\n            removeStaticBinding(openTag, 'class');\r\n        }\r\n        if (context.scopeId) {\r\n            openTag.push(` ${context.scopeId}`);\r\n        }\r\n        node.ssrCodegenNode = createTemplateLiteral(openTag);\r\n    };\r\n};\r\nfunction buildSSRProps(props, directives, context) {\r\n    let mergePropsArgs = [];\r\n    if (props) {\r\n        if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // already a mergeProps call\r\n            mergePropsArgs = props.arguments;\r\n        }\r\n        else {\r\n            mergePropsArgs.push(props);\r\n        }\r\n    }\r\n    if (directives.length) {\r\n        for (const dir of directives) {\r\n            mergePropsArgs.push(createCallExpression(context.helper(SSR_GET_DIRECTIVE_PROPS), [\r\n                `_ctx`,\r\n                ...buildDirectiveArgs(dir, context).elements\r\n            ]));\r\n        }\r\n    }\r\n    return mergePropsArgs.length > 1\r\n        ? createCallExpression(context.helper(MERGE_PROPS), mergePropsArgs)\r\n        : mergePropsArgs[0];\r\n}\r\nfunction isTrueFalseValue(prop) {\r\n    if (prop.type === 7 /* DIRECTIVE */) {\r\n        return (prop.name === 'bind' &&\r\n            prop.arg &&\r\n            isStaticExp(prop.arg) &&\r\n            (prop.arg.content === 'true-value' || prop.arg.content === 'false-value'));\r\n    }\r\n    else {\r\n        return prop.name === 'true-value' || prop.name === 'false-value';\r\n    }\r\n}\r\nfunction isTextareaWithValue(node, prop) {\r\n    return !!(node.tag === 'textarea' &&\r\n        prop.name === 'bind' &&\r\n        isStaticArgOf(prop.arg, 'value'));\r\n}\r\nfunction mergeCall(call, arg) {\r\n    const existing = call.arguments[0];\r\n    if (existing.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.elements.push(arg);\r\n    }\r\n    else {\r\n        call.arguments[0] = createArrayExpression([existing, arg]);\r\n    }\r\n}\r\nfunction removeStaticBinding(tag, binding) {\r\n    const regExp = new RegExp(`^ ${binding}=\".+\"$`);\r\n    const i = tag.findIndex(e => typeof e === 'string' && regExp.test(e));\r\n    if (i > -1) {\r\n        tag.splice(i, 1);\r\n    }\r\n}\r\nfunction findVModel(node) {\r\n    return node.props.find(p => p.type === 7 /* DIRECTIVE */ && p.name === 'model' && p.exp);\r\n}\r\nfunction ssrProcessElement(node, context) {\r\n    const isVoidTag = context.options.isVoidTag || NO;\r\n    const elementsToAdd = node.ssrCodegenNode.elements;\r\n    for (let j = 0; j < elementsToAdd.length; j++) {\r\n        context.pushStringPart(elementsToAdd[j]);\r\n    }\r\n    // Handle slot scopeId\r\n    if (context.withSlotScopeId) {\r\n        context.pushStringPart(createSimpleExpression(`_scopeId`, false));\r\n    }\r\n    // close open tag\r\n    context.pushStringPart(`>`);\r\n    const rawChildren = rawChildrenMap.get(node);\r\n    if (rawChildren) {\r\n        context.pushStringPart(rawChildren);\r\n    }\r\n    else if (node.children.length) {\r\n        processChildren(node, context);\r\n    }\r\n    if (!isVoidTag(node.tag)) {\r\n        // push closing tag\r\n        context.pushStringPart(`</${node.tag}>`);\r\n    }\r\n}\n\nconst wipMap$1 = new WeakMap();\r\n// phase 1: build props\r\nfunction ssrTransformTransitionGroup(node, context) {\r\n    return () => {\r\n        const tag = findProp(node, 'tag');\r\n        if (tag) {\r\n            const otherProps = node.props.filter(p => p !== tag);\r\n            const { props, directives } = buildProps(node, context, otherProps, true, /* isComponent */ false, /* isDynamicComponent */ true /* ssr (skip event listeners) */);\r\n            let propsExp = null;\r\n            if (props || directives.length) {\r\n                propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [\r\n                    buildSSRProps(props, directives, context)\r\n                ]);\r\n            }\r\n            wipMap$1.set(node, {\r\n                tag,\r\n                propsExp\r\n            });\r\n        }\r\n    };\r\n}\r\n// phase 2: process children\r\nfunction ssrProcessTransitionGroup(node, context) {\r\n    const entry = wipMap$1.get(node);\r\n    if (entry) {\r\n        const { tag, propsExp } = entry;\r\n        if (tag.type === 7 /* DIRECTIVE */) {\r\n            // dynamic :tag\r\n            context.pushStringPart(`<`);\r\n            context.pushStringPart(tag.exp);\r\n            if (propsExp) {\r\n                context.pushStringPart(propsExp);\r\n            }\r\n            context.pushStringPart(`>`);\r\n            processChildren(node, context, false, \r\n            /**\r\n             * TransitionGroup has the special runtime behavior of flattening and\r\n             * concatenating all children into a single fragment (in order for them to\r\n             * be patched using the same key map) so we need to account for that here\r\n             * by disabling nested fragment wrappers from being generated.\r\n             */\r\n            true);\r\n            context.pushStringPart(`</`);\r\n            context.pushStringPart(tag.exp);\r\n            context.pushStringPart(`>`);\r\n        }\r\n        else {\r\n            // static tag\r\n            context.pushStringPart(`<${tag.value.content}`);\r\n            if (propsExp) {\r\n                context.pushStringPart(propsExp);\r\n            }\r\n            context.pushStringPart(`>`);\r\n            processChildren(node, context, false, true);\r\n            context.pushStringPart(`</${tag.value.content}>`);\r\n        }\r\n    }\r\n    else {\r\n        // fragment\r\n        processChildren(node, context, true, true);\r\n    }\r\n}\n\n// We need to construct the slot functions in the 1st pass to ensure proper\r\n// scope tracking, but the children of each slot cannot be processed until\r\n// the 2nd pass, so we store the WIP slot functions in a weakMap during the 1st\r\n// pass and complete them in the 2nd pass.\r\nconst wipMap$2 = new WeakMap();\r\nconst WIP_SLOT = Symbol();\r\nconst componentTypeMap = new WeakMap();\r\n// ssr component transform is done in two phases:\r\n// In phase 1. we use `buildSlot` to analyze the children of the component into\r\n// WIP slot functions (it must be done in phase 1 because `buildSlot` relies on\r\n// the core transform context).\r\n// In phase 2. we convert the WIP slots from phase 1 into ssr-specific codegen\r\n// nodes.\r\nconst ssrTransformComponent = (node, context) => {\r\n    if (node.type !== 1 /* ELEMENT */ ||\r\n        node.tagType !== 1 /* COMPONENT */) {\r\n        return;\r\n    }\r\n    const component = resolveComponentType(node, context, true /* ssr */);\r\n    const isDynamicComponent = isObject(component) && component.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n    componentTypeMap.set(node, component);\r\n    if (isSymbol(component)) {\r\n        if (component === SUSPENSE) {\r\n            return ssrTransformSuspense(node, context);\r\n        }\r\n        if (component === TRANSITION_GROUP) {\r\n            return ssrTransformTransitionGroup(node, context);\r\n        }\r\n        return; // other built-in components: fallthrough\r\n    }\r\n    // Build the fallback vnode-based branch for the component's slots.\r\n    // We need to clone the node into a fresh copy and use the buildSlots' logic\r\n    // to get access to the children of each slot. We then compile them with\r\n    // a child transform pipeline using vnode-based transforms (instead of ssr-\r\n    // based ones), and save the result branch (a ReturnStatement) in an array.\r\n    // The branch is retrieved when processing slots again in ssr mode.\r\n    const vnodeBranches = [];\r\n    const clonedNode = clone(node);\r\n    return function ssrPostTransformComponent() {\r\n        // Using the cloned node, build the normal VNode-based branches (for\r\n        // fallback in case the child is render-fn based). Store them in an array\r\n        // for later use.\r\n        if (clonedNode.children.length) {\r\n            buildSlots(clonedNode, context, (props, children) => {\r\n                vnodeBranches.push(createVNodeSlotBranch(props, children, context));\r\n                return createFunctionExpression(undefined);\r\n            });\r\n        }\r\n        let propsExp = `null`;\r\n        if (node.props.length) {\r\n            // note we are not passing ssr: true here because for components, v-on\r\n            // handlers should still be passed\r\n            const { props, directives } = buildProps(node, context, undefined, true, isDynamicComponent);\r\n            if (props || directives.length) {\r\n                propsExp = buildSSRProps(props, directives, context);\r\n            }\r\n        }\r\n        const wipEntries = [];\r\n        wipMap$2.set(node, wipEntries);\r\n        const buildSSRSlotFn = (props, children, loc) => {\r\n            const fn = createFunctionExpression([props || `_`, `_push`, `_parent`, `_scopeId`], undefined, // no return, assign body later\r\n            true, // newline\r\n            true, // isSlot\r\n            loc);\r\n            wipEntries.push({\r\n                type: WIP_SLOT,\r\n                fn,\r\n                children,\r\n                // also collect the corresponding vnode branch built earlier\r\n                vnodeBranch: vnodeBranches[wipEntries.length]\r\n            });\r\n            return fn;\r\n        };\r\n        const slots = node.children.length\r\n            ? buildSlots(node, context, buildSSRSlotFn).slots\r\n            : `null`;\r\n        if (typeof component !== 'string') {\r\n            // dynamic component that resolved to a `resolveDynamicComponent` call\r\n            // expression - since the resolved result may be a plain element (string)\r\n            // or a VNode, handle it with `renderVNode`.\r\n            node.ssrCodegenNode = createCallExpression(context.helper(SSR_RENDER_VNODE), [\r\n                `_push`,\r\n                createCallExpression(context.helper(CREATE_VNODE), [\r\n                    component,\r\n                    propsExp,\r\n                    slots\r\n                ]),\r\n                `_parent`\r\n            ]);\r\n        }\r\n        else {\r\n            node.ssrCodegenNode = createCallExpression(context.helper(SSR_RENDER_COMPONENT), [component, propsExp, slots, `_parent`]);\r\n        }\r\n    };\r\n};\r\nfunction ssrProcessComponent(node, context, parent) {\r\n    const component = componentTypeMap.get(node);\r\n    if (!node.ssrCodegenNode) {\r\n        // this is a built-in component that fell-through.\r\n        if (component === TELEPORT) {\r\n            return ssrProcessTeleport(node, context);\r\n        }\r\n        else if (component === SUSPENSE) {\r\n            return ssrProcessSuspense(node, context);\r\n        }\r\n        else if (component === TRANSITION_GROUP) {\r\n            return ssrProcessTransitionGroup(node, context);\r\n        }\r\n        else {\r\n            // real fall-through: Transition / KeepAlive\r\n            // just render its children.\r\n            // #5352: if is at root level of a slot, push an empty string.\r\n            // this does not affect the final output, but avoids all-comment slot\r\n            // content of being treated as empty by ssrRenderSlot().\r\n            if (parent.type === WIP_SLOT) {\r\n                context.pushStringPart(``);\r\n            }\r\n            // #5351: filter out comment children inside transition\r\n            if (component === TRANSITION) {\r\n                node.children = node.children.filter(c => c.type !== 3 /* COMMENT */);\r\n            }\r\n            processChildren(node, context);\r\n        }\r\n    }\r\n    else {\r\n        // finish up slot function expressions from the 1st pass.\r\n        const wipEntries = wipMap$2.get(node) || [];\r\n        for (let i = 0; i < wipEntries.length; i++) {\r\n            const { fn, vnodeBranch } = wipEntries[i];\r\n            // For each slot, we generate two branches: one SSR-optimized branch and\r\n            // one normal vnode-based branch. The branches are taken based on the\r\n            // presence of the 2nd `_push` argument (which is only present if the slot\r\n            // is called by `_ssrRenderSlot`.\r\n            fn.body = createIfStatement(createSimpleExpression(`_push`, false), processChildrenAsStatement(wipEntries[i], context, false, true /* withSlotScopeId */), vnodeBranch);\r\n        }\r\n        // component is inside a slot, inherit slot scope Id\r\n        if (context.withSlotScopeId) {\r\n            node.ssrCodegenNode.arguments.push(`_scopeId`);\r\n        }\r\n        if (typeof component === 'string') {\r\n            // static component\r\n            context.pushStatement(createCallExpression(`_push`, [node.ssrCodegenNode]));\r\n        }\r\n        else {\r\n            // dynamic component (`resolveDynamicComponent` call)\r\n            // the codegen node is a `renderVNode` call\r\n            context.pushStatement(node.ssrCodegenNode);\r\n        }\r\n    }\r\n}\r\nconst rawOptionsMap = new WeakMap();\r\nconst [baseNodeTransforms, baseDirectiveTransforms] = getBaseTransformPreset(true);\r\nconst vnodeNodeTransforms = [...baseNodeTransforms, ...DOMNodeTransforms];\r\nconst vnodeDirectiveTransforms = Object.assign(Object.assign({}, baseDirectiveTransforms), DOMDirectiveTransforms);\r\nfunction createVNodeSlotBranch(props, children, parentContext) {\r\n    // apply a sub-transform using vnode-based transforms.\r\n    const rawOptions = rawOptionsMap.get(parentContext.root);\r\n    const subOptions = Object.assign(Object.assign({}, rawOptions), { \r\n        // overwrite with vnode-based transforms\r\n        nodeTransforms: [\r\n            ...vnodeNodeTransforms,\r\n            ...(rawOptions.nodeTransforms || [])\r\n        ], directiveTransforms: Object.assign(Object.assign({}, vnodeDirectiveTransforms), (rawOptions.directiveTransforms || {})) });\r\n    // wrap the children with a wrapper template for proper children treatment.\r\n    const wrapperNode = {\r\n        type: 1 /* ELEMENT */,\r\n        ns: 0 /* HTML */,\r\n        tag: 'template',\r\n        tagType: 3 /* TEMPLATE */,\r\n        isSelfClosing: false,\r\n        // important: provide v-slot=\"props\" on the wrapper for proper\r\n        // scope analysis\r\n        props: [\r\n            {\r\n                type: 7 /* DIRECTIVE */,\r\n                name: 'slot',\r\n                exp: props,\r\n                arg: undefined,\r\n                modifiers: [],\r\n                loc: locStub\r\n            }\r\n        ],\r\n        children,\r\n        loc: locStub,\r\n        codegenNode: undefined\r\n    };\r\n    subTransform(wrapperNode, subOptions, parentContext);\r\n    return createReturnStatement(children);\r\n}\r\nfunction subTransform(node, options, parentContext) {\r\n    const childRoot = createRoot([node]);\r\n    const childContext = createTransformContext(childRoot, options);\r\n    // this sub transform is for vnode fallback branch so it should be handled\r\n    // like normal render functions\r\n    childContext.ssr = false;\r\n    // inherit parent scope analysis state\r\n    childContext.scopes = Object.assign({}, parentContext.scopes);\r\n    childContext.identifiers = Object.assign({}, parentContext.identifiers);\r\n    childContext.imports = parentContext.imports;\r\n    // traverse\r\n    traverseNode(childRoot, childContext);\r\n    ['helpers', 'components', 'directives'].forEach(key => {\r\n        childContext[key].forEach((value, helperKey) => {\r\n            if (key === 'helpers') {\r\n                const parentCount = parentContext.helpers.get(helperKey);\r\n                if (parentCount === undefined) {\r\n                    parentContext.helpers.set(helperKey, value);\r\n                }\r\n                else {\r\n                    parentContext.helpers.set(helperKey, value + parentCount);\r\n                }\r\n            }\r\n            else {\r\n                parentContext[key].add(value);\r\n            }\r\n        });\r\n    });\r\n    // imports/hoists are not merged because:\r\n    // - imports are only used for asset urls and should be consistent between\r\n    //   node/client branches\r\n    // - hoists are not enabled for the client branch here\r\n}\r\nfunction clone(v) {\r\n    if (isArray(v)) {\r\n        return v.map(clone);\r\n    }\r\n    else if (isObject(v)) {\r\n        const res = {};\r\n        for (const key in v) {\r\n            res[key] = clone(v[key]);\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        return v;\r\n    }\r\n}\n\n// Because SSR codegen output is completely different from client-side output\r\n// (e.g. multiple elements can be concatenated into a single template literal\r\n// instead of each getting a corresponding call), we need to apply an extra\r\n// transform pass to convert the template AST into a fresh JS AST before\r\n// passing it to codegen.\r\nfunction ssrCodegenTransform(ast, options) {\r\n    const context = createSSRTransformContext(ast, options);\r\n    // inject SFC <style> CSS variables\r\n    // we do this instead of inlining the expression to ensure the vars are\r\n    // only resolved once per render\r\n    if (options.ssrCssVars) {\r\n        const varsExp = processExpression(createSimpleExpression(options.ssrCssVars, false), createTransformContext(createRoot([]), options));\r\n        context.body.push(createCompoundExpression([`const _cssVars = { style: `, varsExp, `}`]));\r\n    }\r\n    const isFragment = ast.children.length > 1 && ast.children.some(c => !isText(c));\r\n    processChildren(ast, context, isFragment);\r\n    ast.codegenNode = createBlockStatement(context.body);\r\n    // Finalize helpers.\r\n    // We need to separate helpers imported from 'vue' vs. '@vue/server-renderer'\r\n    ast.ssrHelpers = Array.from(new Set([...ast.helpers.filter(h => h in ssrHelpers), ...context.helpers]));\r\n    ast.helpers = ast.helpers.filter(h => !(h in ssrHelpers));\r\n}\r\nfunction createSSRTransformContext(root, options, helpers = new Set(), withSlotScopeId = false) {\r\n    const body = [];\r\n    let currentString = null;\r\n    return {\r\n        root,\r\n        options,\r\n        body,\r\n        helpers,\r\n        withSlotScopeId,\r\n        onError: options.onError ||\r\n            (e => {\r\n                throw e;\r\n            }),\r\n        helper(name) {\r\n            helpers.add(name);\r\n            return name;\r\n        },\r\n        pushStringPart(part) {\r\n            if (!currentString) {\r\n                const currentCall = createCallExpression(`_push`);\r\n                body.push(currentCall);\r\n                currentString = createTemplateLiteral([]);\r\n                currentCall.arguments.push(currentString);\r\n            }\r\n            const bufferedElements = currentString.elements;\r\n            const lastItem = bufferedElements[bufferedElements.length - 1];\r\n            if (isString(part) && isString(lastItem)) {\r\n                bufferedElements[bufferedElements.length - 1] += part;\r\n            }\r\n            else {\r\n                bufferedElements.push(part);\r\n            }\r\n        },\r\n        pushStatement(statement) {\r\n            // close current string\r\n            currentString = null;\r\n            body.push(statement);\r\n        }\r\n    };\r\n}\r\nfunction createChildContext(parent, withSlotScopeId = parent.withSlotScopeId) {\r\n    // ensure child inherits parent helpers\r\n    return createSSRTransformContext(parent.root, parent.options, parent.helpers, withSlotScopeId);\r\n}\r\nfunction processChildren(parent, context, asFragment = false, disableNestedFragments = false) {\r\n    if (asFragment) {\r\n        context.pushStringPart(`<!--[-->`);\r\n    }\r\n    const { children } = parent;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                switch (child.tagType) {\r\n                    case 0 /* ELEMENT */:\r\n                        ssrProcessElement(child, context);\r\n                        break;\r\n                    case 1 /* COMPONENT */:\r\n                        ssrProcessComponent(child, context, parent);\r\n                        break;\r\n                    case 2 /* SLOT */:\r\n                        ssrProcessSlotOutlet(child, context);\r\n                        break;\r\n                    case 3 /* TEMPLATE */:\r\n                        // TODO\r\n                        break;\r\n                    default:\r\n                        context.onError(createSSRCompilerError(63 /* X_SSR_INVALID_AST_NODE */, child.loc));\r\n                        // make sure we exhaust all possible types\r\n                        const exhaustiveCheck = child;\r\n                        return exhaustiveCheck;\r\n                }\r\n                break;\r\n            case 2 /* TEXT */:\r\n                context.pushStringPart(escapeHtml(child.content));\r\n                break;\r\n            case 3 /* COMMENT */:\r\n                // no need to escape comment here because the AST can only\r\n                // contain valid comments.\r\n                context.pushStringPart(`<!--${child.content}-->`);\r\n                break;\r\n            case 5 /* INTERPOLATION */:\r\n                context.pushStringPart(createCallExpression(context.helper(SSR_INTERPOLATE), [child.content]));\r\n                break;\r\n            case 9 /* IF */:\r\n                ssrProcessIf(child, context, disableNestedFragments);\r\n                break;\r\n            case 11 /* FOR */:\r\n                ssrProcessFor(child, context, disableNestedFragments);\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n                // no-op - handled by ssrProcessIf\r\n                break;\r\n            case 12 /* TEXT_CALL */:\r\n            case 8 /* COMPOUND_EXPRESSION */:\r\n                // no-op - these two types can never appear as template child node since\r\n                // `transformText` is not used during SSR compile.\r\n                break;\r\n            default:\r\n                context.onError(createSSRCompilerError(63 /* X_SSR_INVALID_AST_NODE */, child.loc));\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = child;\r\n                return exhaustiveCheck;\r\n        }\r\n    }\r\n    if (asFragment) {\r\n        context.pushStringPart(`<!--]-->`);\r\n    }\r\n}\r\nfunction processChildrenAsStatement(parent, parentContext, asFragment = false, withSlotScopeId = parentContext.withSlotScopeId) {\r\n    const childContext = createChildContext(parentContext, withSlotScopeId);\r\n    processChildren(parent, childContext, asFragment);\r\n    return createBlockStatement(childContext.body);\r\n}\n\nconst ssrTransformModel = (dir, node, context) => {\r\n    const model = dir.exp;\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    if (node.tagType === 0 /* ELEMENT */) {\r\n        const res = { props: [] };\r\n        const defaultProps = [\r\n            // default value binding for text type inputs\r\n            createObjectProperty(`value`, model)\r\n        ];\r\n        if (node.tag === 'input') {\r\n            const type = findProp(node, 'type');\r\n            if (type) {\r\n                const value = findValueBinding(node);\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // dynamic type\r\n                    res.ssrTagParts = [\r\n                        createCallExpression(context.helper(SSR_RENDER_DYNAMIC_MODEL), [\r\n                            type.exp,\r\n                            model,\r\n                            value\r\n                        ])\r\n                    ];\r\n                }\r\n                else if (type.value) {\r\n                    // static type\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            res.props = [\r\n                                createObjectProperty(`checked`, createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                                    model,\r\n                                    value\r\n                                ]))\r\n                            ];\r\n                            break;\r\n                        case 'checkbox':\r\n                            const trueValueBinding = findProp(node, 'true-value');\r\n                            if (trueValueBinding) {\r\n                                const trueValue = trueValueBinding.type === 6 /* ATTRIBUTE */\r\n                                    ? JSON.stringify(trueValueBinding.value.content)\r\n                                    : trueValueBinding.exp;\r\n                                res.props = [\r\n                                    createObjectProperty(`checked`, createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                                        model,\r\n                                        trueValue\r\n                                    ]))\r\n                                ];\r\n                            }\r\n                            else {\r\n                                res.props = [\r\n                                    createObjectProperty(`checked`, createConditionalExpression(createCallExpression(`Array.isArray`, [model]), createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\r\n                                        model,\r\n                                        value\r\n                                    ]), model))\r\n                                ];\r\n                            }\r\n                            break;\r\n                        case 'file':\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            checkDuplicatedValue();\r\n                            res.props = defaultProps;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) ;\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n                res.props = defaultProps;\r\n            }\r\n        }\r\n        else if (node.tag === 'textarea') {\r\n            checkDuplicatedValue();\r\n            node.children = [createInterpolation(model, model.loc)];\r\n        }\r\n        else if (node.tag === 'select') ;\r\n        else {\r\n            context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        // component v-model\r\n        return transformModel(dir, node, context);\r\n    }\r\n};\r\nfunction findValueBinding(node) {\r\n    const valueBinding = findProp(node, 'value');\r\n    return valueBinding\r\n        ? valueBinding.type === 7 /* DIRECTIVE */\r\n            ? valueBinding.exp\r\n            : createSimpleExpression(valueBinding.value.content, true)\r\n        : createSimpleExpression(`null`, false);\r\n}\n\nconst ssrTransformShow = (dir, node, context) => {\r\n    if (!dir.exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */));\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(`style`, createConditionalExpression(dir.exp, createSimpleExpression(`null`, false), createObjectExpression([\r\n                createObjectProperty(`display`, createSimpleExpression(`none`, true))\r\n            ]), false /* no newline */))\r\n        ]\r\n    };\r\n};\n\nconst filterChild = (node) => node.children.filter(n => n.type !== 3 /* COMMENT */);\r\nconst hasSingleChild = (node) => filterChild(node).length === 1;\r\nconst ssrInjectFallthroughAttrs = (node, context) => {\r\n    // _attrs is provided as a function argument.\r\n    // mark it as a known identifier so that it doesn't get prefixed by\r\n    // transformExpression.\r\n    if (node.type === 0 /* ROOT */) {\r\n        context.identifiers._attrs = 1;\r\n    }\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */ &&\r\n        (isBuiltInType(node.tag, 'Transition') ||\r\n            isBuiltInType(node.tag, 'KeepAlive'))) {\r\n        const rootChildren = filterChild(context.root);\r\n        if (rootChildren.length === 1 && rootChildren[0] === node) {\r\n            if (hasSingleChild(node)) {\r\n                injectFallthroughAttrs(node.children[0]);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    const parent = context.parent;\r\n    if (!parent || parent.type !== 0 /* ROOT */) {\r\n        return;\r\n    }\r\n    if (node.type === 10 /* IF_BRANCH */ && hasSingleChild(node)) {\r\n        // detect cases where the parent v-if is not the only root level node\r\n        let hasEncounteredIf = false;\r\n        for (const c of filterChild(parent)) {\r\n            if (c.type === 9 /* IF */ ||\r\n                (c.type === 1 /* ELEMENT */ && findDir(c, 'if'))) {\r\n                // multiple root v-if\r\n                if (hasEncounteredIf)\r\n                    return;\r\n                hasEncounteredIf = true;\r\n            }\r\n            else if (\r\n            // node before v-if\r\n            !hasEncounteredIf ||\r\n                // non else nodes\r\n                !(c.type === 1 /* ELEMENT */ && findDir(c, /else/, true))) {\r\n                return;\r\n            }\r\n        }\r\n        injectFallthroughAttrs(node.children[0]);\r\n    }\r\n    else if (hasSingleChild(parent)) {\r\n        injectFallthroughAttrs(node);\r\n    }\r\n};\r\nfunction injectFallthroughAttrs(node) {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */) &&\r\n        !findDir(node, 'for')) {\r\n        node.props.push({\r\n            type: 7 /* DIRECTIVE */,\r\n            name: 'bind',\r\n            arg: undefined,\r\n            exp: createSimpleExpression(`_attrs`, false),\r\n            modifiers: [],\r\n            loc: locStub\r\n        });\r\n    }\r\n}\n\nconst ssrInjectCssVars = (node, context) => {\r\n    if (!context.ssrCssVars) {\r\n        return;\r\n    }\r\n    // _cssVars is initialized once per render function\r\n    // the code is injected in ssrCodegenTransform when creating the\r\n    // ssr transform context\r\n    if (node.type === 0 /* ROOT */) {\r\n        context.identifiers._cssVars = 1;\r\n    }\r\n    const parent = context.parent;\r\n    if (!parent || parent.type !== 0 /* ROOT */) {\r\n        return;\r\n    }\r\n    if (node.type === 10 /* IF_BRANCH */) {\r\n        for (const child of node.children) {\r\n            injectCssVars(child);\r\n        }\r\n    }\r\n    else {\r\n        injectCssVars(node);\r\n    }\r\n};\r\nfunction injectCssVars(node) {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */) &&\r\n        !findDir(node, 'for')) {\r\n        if (isBuiltInType(node.tag, 'Suspense')) {\r\n            for (const child of node.children) {\r\n                if (child.type === 1 /* ELEMENT */ &&\r\n                    child.tagType === 3 /* TEMPLATE */) {\r\n                    // suspense slot\r\n                    child.children.forEach(injectCssVars);\r\n                }\r\n                else {\r\n                    injectCssVars(child);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            node.props.push({\r\n                type: 7 /* DIRECTIVE */,\r\n                name: 'bind',\r\n                arg: undefined,\r\n                exp: createSimpleExpression(`_cssVars`, false),\r\n                modifiers: [],\r\n                loc: locStub\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction compile$1(template, options = {}) {\r\n    options = Object.assign(Object.assign(Object.assign({}, options), parserOptions), { ssr: true, inSSR: true, scopeId: options.mode === 'function' ? null : options.scopeId, \r\n        // always prefix since compiler-ssr doesn't have size concern\r\n        prefixIdentifiers: true, \r\n        // disable optimizations that are unnecessary for ssr\r\n        cacheHandlers: false, hoistStatic: false });\r\n    const ast = baseParse(template, options);\r\n    // Save raw options for AST. This is needed when performing sub-transforms\r\n    // on slot vnode branches.\r\n    rawOptionsMap.set(ast, options);\r\n    transform(ast, Object.assign(Object.assign({}, options), { hoistStatic: false, nodeTransforms: [\r\n            ssrTransformIf,\r\n            ssrTransformFor,\r\n            trackVForSlotScopes,\r\n            transformExpression,\r\n            ssrTransformSlotOutlet,\r\n            ssrInjectFallthroughAttrs,\r\n            ssrInjectCssVars,\r\n            ssrTransformElement,\r\n            ssrTransformComponent,\r\n            trackSlotScopes,\r\n            transformStyle,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ], directiveTransforms: Object.assign({ \r\n            // reusing core v-bind\r\n            bind: transformBind, on: transformOn, \r\n            // model and show has dedicated SSR handling\r\n            model: ssrTransformModel, show: ssrTransformShow, \r\n            // the following are ignored during SSR\r\n            // on: noopDirectiveTransform,\r\n            cloak: noopDirectiveTransform, once: noopDirectiveTransform, memo: noopDirectiveTransform }, (options.directiveTransforms || {}) // user transforms\r\n        ) }));\r\n    // traverse the template AST and convert into SSR codegen AST\r\n    // by replacing ast.codegenNode.\r\n    ssrCodegenTransform(ast, options);\r\n    return generate(ast, options);\r\n}\n\nvar CompilerSSR = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  compile: compile$1\n});\n\nvar _polyfillNode_fs = {};\n\nvar _polyfillNode_fs$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': _polyfillNode_fs\n});\n\nvar _fs = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_fs$1);\n\nvar _path = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_path);\n\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_util$1);\n\nconst hasWarned = {};\r\nfunction warnOnce(msg) {\r\n    const isNodeProd = typeof process !== 'undefined' && ({}).NODE_ENV === 'production';\r\n    if (!isNodeProd && !false && !hasWarned[msg]) {\r\n        hasWarned[msg] = true;\r\n        warn(msg);\r\n    }\r\n}\r\nfunction warn(msg) {\r\n    console.warn(`\\x1b[1m\\x1b[33m[@vue/compiler-sfc]\\x1b[0m\\x1b[33m ${msg}\\x1b[0m\\n`);\r\n}\n\nfunction preprocess({ source, filename, preprocessOptions }, preprocessor) {\r\n    // Consolidate exposes a callback based API, but the callback is in fact\r\n    // called synchronously for most templating engines. In our case, we have to\r\n    // expose a synchronous API so that it is usable in Jest transforms (which\r\n    // have to be sync because they are applied via Node.js require hooks)\r\n    let res = '';\r\n    let err = null;\r\n    preprocessor.render(source, Object.assign({ filename }, preprocessOptions), (_err, _res) => {\r\n        if (_err)\r\n            err = _err;\r\n        res = _res;\r\n    });\r\n    if (err)\r\n        throw err;\r\n    return res;\r\n}\r\nfunction compileTemplate(options) {\r\n    const { preprocessLang, preprocessCustomRequire } = options;\r\n    if (preprocessLang &&\r\n        !preprocessCustomRequire) {\r\n        throw new Error(`[@vue/compiler-sfc] Template preprocessing in the browser build must ` +\r\n            `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n            `version of the preprocessor in the shape of { render(): string }.`);\r\n    }\r\n    const preprocessor = preprocessLang\r\n        ? preprocessCustomRequire\r\n            ? preprocessCustomRequire(preprocessLang)\r\n            : undefined\r\n                \r\n        : false;\r\n    if (preprocessor) {\r\n        try {\r\n            return doCompileTemplate(Object.assign(Object.assign({}, options), { source: preprocess(options, preprocessor) }));\r\n        }\r\n        catch (e) {\r\n            return {\r\n                code: `export default function render() {}`,\r\n                source: options.source,\r\n                tips: [],\r\n                errors: [e]\r\n            };\r\n        }\r\n    }\r\n    else if (preprocessLang) {\r\n        return {\r\n            code: `export default function render() {}`,\r\n            source: options.source,\r\n            tips: [\r\n                `Component ${options.filename} uses lang ${preprocessLang} for template. Please install the language preprocessor.`\r\n            ],\r\n            errors: [\r\n                `Component ${options.filename} uses lang ${preprocessLang} for template, however it is not installed.`\r\n            ]\r\n        };\r\n    }\r\n    else {\r\n        return doCompileTemplate(options);\r\n    }\r\n}\r\nfunction doCompileTemplate({ filename, id, scoped, slotted, inMap, source, ssr = false, ssrCssVars, isProd = false, compiler = ssr ? CompilerSSR : CompilerDOM, compilerOptions = {}, transformAssetUrls }) {\r\n    const errors = [];\r\n    const warnings = [];\r\n    let nodeTransforms = [];\r\n    if (isObject(transformAssetUrls)) {\r\n        const assetOptions = normalizeOptions(transformAssetUrls);\r\n        nodeTransforms = [\r\n            createAssetUrlTransformWithOptions(assetOptions),\r\n            createSrcsetTransformWithOptions(assetOptions)\r\n        ];\r\n    }\r\n    else if (transformAssetUrls !== false) {\r\n        nodeTransforms = [transformAssetUrl, transformSrcset];\r\n    }\r\n    if (ssr && !ssrCssVars) {\r\n        warnOnce(`compileTemplate is called with \\`ssr: true\\` but no ` +\r\n            `corresponding \\`cssVars\\` option.\\`.`);\r\n    }\r\n    if (!id) {\r\n        warnOnce(`compileTemplate now requires the \\`id\\` option.\\`.`);\r\n        id = '';\r\n    }\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    const longId = `data-v-${shortId}`;\r\n    let { code, ast, preamble, map } = compiler.compile(source, Object.assign(Object.assign({ mode: 'module', prefixIdentifiers: true, hoistStatic: true, cacheHandlers: true, ssrCssVars: ssr && ssrCssVars && ssrCssVars.length\r\n            ? genCssVarsFromList(ssrCssVars, shortId, isProd, true)\r\n            : '', scopeId: scoped ? longId : undefined, slotted, sourceMap: true }, compilerOptions), { nodeTransforms: nodeTransforms.concat(compilerOptions.nodeTransforms || []), filename, onError: e => errors.push(e), onWarn: w => warnings.push(w) }));\r\n    // inMap should be the map produced by ./parse.ts which is a simple line-only\r\n    // mapping. If it is present, we need to adjust the final map and errors to\r\n    // reflect the original line numbers.\r\n    if (inMap) {\r\n        if (map) {\r\n            map = mapLines(inMap, map);\r\n        }\r\n        if (errors.length) {\r\n            patchErrors(errors, source, inMap);\r\n        }\r\n    }\r\n    const tips = warnings.map(w => {\r\n        let msg = w.message;\r\n        if (w.loc) {\r\n            msg += `\\n${generateCodeFrame(source, w.loc.start.offset, w.loc.end.offset)}`;\r\n        }\r\n        return msg;\r\n    });\r\n    return { code, ast, preamble, source, errors, tips, map };\r\n}\r\nfunction mapLines(oldMap, newMap) {\r\n    if (!oldMap)\r\n        return newMap;\r\n    if (!newMap)\r\n        return oldMap;\r\n    const oldMapConsumer = new SourceMapConsumer$1(oldMap);\r\n    const newMapConsumer = new SourceMapConsumer$1(newMap);\r\n    const mergedMapGenerator = new SourceMapGenerator$2();\r\n    newMapConsumer.eachMapping(m => {\r\n        if (m.originalLine == null) {\r\n            return;\r\n        }\r\n        const origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n            line: m.originalLine,\r\n            column: m.originalColumn\r\n        });\r\n        if (origPosInOldMap.source == null) {\r\n            return;\r\n        }\r\n        mergedMapGenerator.addMapping({\r\n            generated: {\r\n                line: m.generatedLine,\r\n                column: m.generatedColumn\r\n            },\r\n            original: {\r\n                line: origPosInOldMap.line,\r\n                // use current column, since the oldMap produced by @vue/compiler-sfc\r\n                // does not\r\n                column: m.originalColumn\r\n            },\r\n            source: origPosInOldMap.source,\r\n            name: origPosInOldMap.name\r\n        });\r\n    });\r\n    // source-map's type definition is incomplete\r\n    const generator = mergedMapGenerator;\r\n    oldMapConsumer.sources.forEach((sourceFile) => {\r\n        generator._sources.add(sourceFile);\r\n        const sourceContent = oldMapConsumer.sourceContentFor(sourceFile);\r\n        if (sourceContent != null) {\r\n            mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\r\n        }\r\n    });\r\n    generator._sourceRoot = oldMap.sourceRoot;\r\n    generator._file = oldMap.file;\r\n    return generator.toJSON();\r\n}\r\nfunction patchErrors(errors, source, inMap) {\r\n    const originalSource = inMap.sourcesContent[0];\r\n    const offset = originalSource.indexOf(source);\r\n    const lineOffset = originalSource.slice(0, offset).split(/\\r?\\n/).length - 1;\r\n    errors.forEach(err => {\r\n        if (err.loc) {\r\n            err.loc.start.line += lineOffset;\r\n            err.loc.start.offset += offset;\r\n            if (err.loc.end !== err.loc.start) {\r\n                err.loc.end.line += lineOffset;\r\n                err.loc.end.offset += offset;\r\n            }\r\n        }\r\n    });\r\n}\n\nconst defaultExportRE = /((?:^|\\n|;)\\s*)export(\\s*)default/;\r\nconst namedDefaultExportRE = /((?:^|\\n|;)\\s*)export(.+)(?:as)?(\\s*)default/s;\r\nconst exportDefaultClassRE = /((?:^|\\n|;)\\s*)export\\s+default\\s+class\\s+([\\w$]+)/;\r\n/**\r\n * Utility for rewriting `export default` in a script block into a variable\r\n * declaration so that we can inject things into it\r\n */\r\nfunction rewriteDefault(input, as, parserPlugins) {\r\n    if (!hasDefaultExport(input)) {\r\n        return input + `\\nconst ${as} = {}`;\r\n    }\r\n    let replaced;\r\n    const classMatch = input.match(exportDefaultClassRE);\r\n    if (classMatch) {\r\n        replaced =\r\n            input.replace(exportDefaultClassRE, '$1class $2') +\r\n                `\\nconst ${as} = ${classMatch[2]}`;\r\n    }\r\n    else {\r\n        replaced = input.replace(defaultExportRE, `$1const ${as} =`);\r\n    }\r\n    if (!hasDefaultExport(replaced)) {\r\n        return replaced;\r\n    }\r\n    // if the script somehow still contains `default export`, it probably has\r\n    // multi-line comments or template strings. fallback to a full parse.\r\n    const s = new MagicString(input);\r\n    const ast = parse_1(input, {\r\n        sourceType: 'module',\r\n        plugins: parserPlugins\r\n    }).program.body;\r\n    ast.forEach(node => {\r\n        if (node.type === 'ExportDefaultDeclaration') {\r\n            s.overwrite(node.start, node.declaration.start, `const ${as} = `);\r\n        }\r\n        if (node.type === 'ExportNamedDeclaration') {\r\n            for (const specifier of node.specifiers) {\r\n                if (specifier.type === 'ExportSpecifier' &&\r\n                    specifier.exported.type === 'Identifier' &&\r\n                    specifier.exported.name === 'default') {\r\n                    if (node.source) {\r\n                        if (specifier.local.name === 'default') {\r\n                            const end = specifierEnd(input, specifier.local.end, node.end);\r\n                            s.prepend(`import { default as __VUE_DEFAULT__ } from '${node.source.value}'\\n`);\r\n                            s.overwrite(specifier.start, end, ``);\r\n                            s.append(`\\nconst ${as} = __VUE_DEFAULT__`);\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            const end = specifierEnd(input, specifier.exported.end, node.end);\r\n                            s.prepend(`import { ${input.slice(specifier.local.start, specifier.local.end)} } from '${node.source.value}'\\n`);\r\n                            s.overwrite(specifier.start, end, ``);\r\n                            s.append(`\\nconst ${as} = ${specifier.local.name}`);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    const end = specifierEnd(input, specifier.end, node.end);\r\n                    s.overwrite(specifier.start, end, ``);\r\n                    s.append(`\\nconst ${as} = ${specifier.local.name}`);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return s.toString();\r\n}\r\nfunction hasDefaultExport(input) {\r\n    return defaultExportRE.test(input) || namedDefaultExportRE.test(input);\r\n}\r\nfunction specifierEnd(input, end, nodeEnd) {\r\n    // export { default   , foo } ...\r\n    let hasCommas = false;\r\n    let oldEnd = end;\r\n    while (end < nodeEnd) {\r\n        if (/\\s/.test(input.charAt(end))) {\r\n            end++;\r\n        }\r\n        else if (input.charAt(end) === ',') {\r\n            end++;\r\n            hasCommas = true;\r\n            break;\r\n        }\r\n        else if (input.charAt(end) === '}') {\r\n            break;\r\n        }\r\n    }\r\n    return hasCommas ? end : oldEnd;\r\n}\n\nconst CONVERT_SYMBOL = '$';\r\nconst ESCAPE_SYMBOL = '$$';\r\nconst shorthands = ['ref', 'computed', 'shallowRef', 'toRef', 'customRef'];\r\nconst transformCheckRE = /[^\\w]\\$(?:\\$|ref|computed|shallowRef)?\\s*(\\(|\\<)/;\r\nfunction shouldTransform(src) {\r\n    return transformCheckRE.test(src);\r\n}\r\nfunction transform$1(src, { filename, sourceMap, parserPlugins, importHelpersFrom = 'vue' } = {}) {\r\n    const plugins = parserPlugins || [];\r\n    if (filename) {\r\n        if (/\\.tsx?$/.test(filename)) {\r\n            plugins.push('typescript');\r\n        }\r\n        if (filename.endsWith('x')) {\r\n            plugins.push('jsx');\r\n        }\r\n    }\r\n    const ast = parse_1(src, {\r\n        sourceType: 'module',\r\n        plugins\r\n    });\r\n    const s = new MagicString(src);\r\n    const res = transformAST(ast.program, s, 0);\r\n    // inject helper imports\r\n    if (res.importedHelpers.length) {\r\n        s.prepend(`import { ${res.importedHelpers\r\n            .map(h => `${h} as _${h}`)\r\n            .join(', ')} } from '${importHelpersFrom}'\\n`);\r\n    }\r\n    return Object.assign(Object.assign({}, res), { code: s.toString(), map: sourceMap\r\n            ? s.generateMap({\r\n                source: filename,\r\n                hires: true,\r\n                includeContent: true\r\n            })\r\n            : null });\r\n}\r\nfunction transformAST(ast, s, offset = 0, knownRefs, knownProps) {\r\n    // TODO remove when out of experimental\r\n    warnExperimental();\r\n    let convertSymbol = CONVERT_SYMBOL;\r\n    let escapeSymbol = ESCAPE_SYMBOL;\r\n    // macro import handling\r\n    for (const node of ast.body) {\r\n        if (node.type === 'ImportDeclaration' &&\r\n            node.source.value === 'vue/macros') {\r\n            // remove macro imports\r\n            s.remove(node.start + offset, node.end + offset);\r\n            // check aliasing\r\n            for (const specifier of node.specifiers) {\r\n                if (specifier.type === 'ImportSpecifier') {\r\n                    const imported = specifier.imported.name;\r\n                    const local = specifier.local.name;\r\n                    if (local !== imported) {\r\n                        if (imported === ESCAPE_SYMBOL) {\r\n                            escapeSymbol = local;\r\n                        }\r\n                        else if (imported === CONVERT_SYMBOL) {\r\n                            convertSymbol = local;\r\n                        }\r\n                        else {\r\n                            error(`macro imports for ref-creating methods do not support aliasing.`, specifier);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const importedHelpers = new Set();\r\n    const rootScope = {};\r\n    const scopeStack = [rootScope];\r\n    let currentScope = rootScope;\r\n    let escapeScope; // inside $$()\r\n    const excludedIds = new WeakSet();\r\n    const parentStack = [];\r\n    const propsLocalToPublicMap = Object.create(null);\r\n    if (knownRefs) {\r\n        for (const key of knownRefs) {\r\n            rootScope[key] = true;\r\n        }\r\n    }\r\n    if (knownProps) {\r\n        for (const key in knownProps) {\r\n            const { local } = knownProps[key];\r\n            rootScope[local] = 'prop';\r\n            propsLocalToPublicMap[local] = key;\r\n        }\r\n    }\r\n    function isRefCreationCall(callee) {\r\n        if (callee === convertSymbol) {\r\n            return convertSymbol;\r\n        }\r\n        if (callee[0] === '$' && shorthands.includes(callee.slice(1))) {\r\n            return callee;\r\n        }\r\n        return false;\r\n    }\r\n    function error(msg, node) {\r\n        const e = new Error(msg);\r\n        e.node = node;\r\n        throw e;\r\n    }\r\n    function helper(msg) {\r\n        importedHelpers.add(msg);\r\n        return `_${msg}`;\r\n    }\r\n    function registerBinding(id, isRef = false) {\r\n        excludedIds.add(id);\r\n        if (currentScope) {\r\n            currentScope[id.name] = isRef;\r\n        }\r\n        else {\r\n            error('registerBinding called without active scope, something is wrong.', id);\r\n        }\r\n    }\r\n    const registerRefBinding = (id) => registerBinding(id, true);\r\n    let tempVarCount = 0;\r\n    function genTempVar() {\r\n        return `__$temp_${++tempVarCount}`;\r\n    }\r\n    function snip(node) {\r\n        return s.original.slice(node.start + offset, node.end + offset);\r\n    }\r\n    function walkScope(node, isRoot = false) {\r\n        for (const stmt of node.body) {\r\n            if (stmt.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt, isRoot);\r\n            }\r\n            else if (stmt.type === 'FunctionDeclaration' ||\r\n                stmt.type === 'ClassDeclaration') {\r\n                if (stmt.declare || !stmt.id)\r\n                    continue;\r\n                registerBinding(stmt.id);\r\n            }\r\n            else if ((stmt.type === 'ForOfStatement' || stmt.type === 'ForInStatement') &&\r\n                stmt.left.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.left);\r\n            }\r\n            else if (stmt.type === 'ExportNamedDeclaration' &&\r\n                stmt.declaration &&\r\n                stmt.declaration.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.declaration, isRoot);\r\n            }\r\n            else if (stmt.type === 'LabeledStatement' &&\r\n                stmt.body.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.body, isRoot);\r\n            }\r\n        }\r\n    }\r\n    function walkVariableDeclaration(stmt, isRoot = false) {\r\n        if (stmt.declare) {\r\n            return;\r\n        }\r\n        for (const decl of stmt.declarations) {\r\n            let refCall;\r\n            const isCall = decl.init &&\r\n                decl.init.type === 'CallExpression' &&\r\n                decl.init.callee.type === 'Identifier';\r\n            if (isCall &&\r\n                (refCall = isRefCreationCall(decl.init.callee.name))) {\r\n                processRefDeclaration(refCall, decl.id, decl.init);\r\n            }\r\n            else {\r\n                const isProps = isRoot && isCall && decl.init.callee.name === 'defineProps';\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    if (isProps) {\r\n                        // for defineProps destructure, only exclude them since they\r\n                        // are already passed in as knownProps\r\n                        excludedIds.add(id);\r\n                    }\r\n                    else {\r\n                        registerBinding(id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function processRefDeclaration(method, id, call) {\r\n        excludedIds.add(call.callee);\r\n        if (method === convertSymbol) {\r\n            // $\r\n            // remove macro\r\n            s.remove(call.callee.start + offset, call.callee.end + offset);\r\n            if (id.type === 'Identifier') {\r\n                // single variable\r\n                registerRefBinding(id);\r\n            }\r\n            else if (id.type === 'ObjectPattern') {\r\n                processRefObjectPattern(id, call);\r\n            }\r\n            else if (id.type === 'ArrayPattern') {\r\n                processRefArrayPattern(id, call);\r\n            }\r\n        }\r\n        else {\r\n            // shorthands\r\n            if (id.type === 'Identifier') {\r\n                registerRefBinding(id);\r\n                // replace call\r\n                s.overwrite(call.start + offset, call.start + method.length + offset, helper(method.slice(1)));\r\n            }\r\n            else {\r\n                error(`${method}() cannot be used with destructure patterns.`, call);\r\n            }\r\n        }\r\n    }\r\n    function processRefObjectPattern(pattern, call, tempVar, path = []) {\r\n        if (!tempVar) {\r\n            tempVar = genTempVar();\r\n            // const { x } = $(useFoo()) --> const __$temp_1 = useFoo()\r\n            s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n        }\r\n        for (const p of pattern.properties) {\r\n            let nameId;\r\n            let key;\r\n            let defaultValue;\r\n            if (p.type === 'ObjectProperty') {\r\n                if (p.key.start === p.value.start) {\r\n                    // shorthand { foo }\r\n                    nameId = p.key;\r\n                    if (p.value.type === 'Identifier') {\r\n                        // avoid shorthand value identifier from being processed\r\n                        excludedIds.add(p.value);\r\n                    }\r\n                    else if (p.value.type === 'AssignmentPattern' &&\r\n                        p.value.left.type === 'Identifier') {\r\n                        // { foo = 1 }\r\n                        excludedIds.add(p.value.left);\r\n                        defaultValue = p.value.right;\r\n                    }\r\n                }\r\n                else {\r\n                    key = p.computed ? p.key : p.key.name;\r\n                    if (p.value.type === 'Identifier') {\r\n                        // { foo: bar }\r\n                        nameId = p.value;\r\n                    }\r\n                    else if (p.value.type === 'ObjectPattern') {\r\n                        processRefObjectPattern(p.value, call, tempVar, [...path, key]);\r\n                    }\r\n                    else if (p.value.type === 'ArrayPattern') {\r\n                        processRefArrayPattern(p.value, call, tempVar, [...path, key]);\r\n                    }\r\n                    else if (p.value.type === 'AssignmentPattern') {\r\n                        if (p.value.left.type === 'Identifier') {\r\n                            // { foo: bar = 1 }\r\n                            nameId = p.value.left;\r\n                            defaultValue = p.value.right;\r\n                        }\r\n                        else if (p.value.left.type === 'ObjectPattern') {\r\n                            processRefObjectPattern(p.value.left, call, tempVar, [\r\n                                ...path,\r\n                                [key, p.value.right]\r\n                            ]);\r\n                        }\r\n                        else if (p.value.left.type === 'ArrayPattern') {\r\n                            processRefArrayPattern(p.value.left, call, tempVar, [\r\n                                ...path,\r\n                                [key, p.value.right]\r\n                            ]);\r\n                        }\r\n                        else ;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // rest element { ...foo }\r\n                error(`reactivity destructure does not support rest elements.`, p);\r\n            }\r\n            if (nameId) {\r\n                registerRefBinding(nameId);\r\n                // inject toRef() after original replaced pattern\r\n                const source = pathToString(tempVar, path);\r\n                const keyStr = isString(key)\r\n                    ? `'${key}'`\r\n                    : key\r\n                        ? snip(key)\r\n                        : `'${nameId.name}'`;\r\n                const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n                s.appendLeft(call.end + offset, `,\\n  ${nameId.name} = ${helper('toRef')}(${source}, ${keyStr}${defaultStr})`);\r\n            }\r\n        }\r\n    }\r\n    function processRefArrayPattern(pattern, call, tempVar, path = []) {\r\n        if (!tempVar) {\r\n            // const [x] = $(useFoo()) --> const __$temp_1 = useFoo()\r\n            tempVar = genTempVar();\r\n            s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n        }\r\n        for (let i = 0; i < pattern.elements.length; i++) {\r\n            const e = pattern.elements[i];\r\n            if (!e)\r\n                continue;\r\n            let nameId;\r\n            let defaultValue;\r\n            if (e.type === 'Identifier') {\r\n                // [a] --> [__a]\r\n                nameId = e;\r\n            }\r\n            else if (e.type === 'AssignmentPattern') {\r\n                // [a = 1]\r\n                nameId = e.left;\r\n                defaultValue = e.right;\r\n            }\r\n            else if (e.type === 'RestElement') {\r\n                // [...a]\r\n                error(`reactivity destructure does not support rest elements.`, e);\r\n            }\r\n            else if (e.type === 'ObjectPattern') {\r\n                processRefObjectPattern(e, call, tempVar, [...path, i]);\r\n            }\r\n            else if (e.type === 'ArrayPattern') {\r\n                processRefArrayPattern(e, call, tempVar, [...path, i]);\r\n            }\r\n            if (nameId) {\r\n                registerRefBinding(nameId);\r\n                // inject toRef() after original replaced pattern\r\n                const source = pathToString(tempVar, path);\r\n                const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n                s.appendLeft(call.end + offset, `,\\n  ${nameId.name} = ${helper('toRef')}(${source}, ${i}${defaultStr})`);\r\n            }\r\n        }\r\n    }\r\n    function pathToString(source, path) {\r\n        if (path.length) {\r\n            for (const seg of path) {\r\n                if (isArray(seg)) {\r\n                    source = `(${source}${segToString(seg[0])} || ${snip(seg[1])})`;\r\n                }\r\n                else {\r\n                    source += segToString(seg);\r\n                }\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n    function segToString(seg) {\r\n        if (typeof seg === 'number') {\r\n            return `[${seg}]`;\r\n        }\r\n        else if (typeof seg === 'string') {\r\n            return `.${seg}`;\r\n        }\r\n        else {\r\n            return snip(seg);\r\n        }\r\n    }\r\n    function rewriteId(scope, id, parent, parentStack) {\r\n        if (hasOwn(scope, id.name)) {\r\n            const bindingType = scope[id.name];\r\n            if (bindingType) {\r\n                const isProp = bindingType === 'prop';\r\n                if (isStaticProperty(parent) && parent.shorthand) {\r\n                    // let binding used in a property shorthand\r\n                    // skip for destructure patterns\r\n                    if (!parent.inPattern ||\r\n                        isInDestructureAssignment(parent, parentStack)) {\r\n                        if (isProp) {\r\n                            if (escapeScope) {\r\n                                // prop binding in $$()\r\n                                // { prop } -> { prop: __props_prop }\r\n                                registerEscapedPropBinding(id);\r\n                                s.appendLeft(id.end + offset, `: __props_${propsLocalToPublicMap[id.name]}`);\r\n                            }\r\n                            else {\r\n                                // { prop } -> { prop: __props.prop }\r\n                                s.appendLeft(id.end + offset, `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // { foo } -> { foo: foo.value }\r\n                            s.appendLeft(id.end + offset, `: ${id.name}.value`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (isProp) {\r\n                        if (escapeScope) {\r\n                            // x --> __props_x\r\n                            registerEscapedPropBinding(id);\r\n                            s.overwrite(id.start + offset, id.end + offset, `__props_${propsLocalToPublicMap[id.name]}`);\r\n                        }\r\n                        else {\r\n                            // x --> __props.x\r\n                            s.overwrite(id.start + offset, id.end + offset, genPropsAccessExp(propsLocalToPublicMap[id.name]));\r\n                        }\r\n                    }\r\n                    else {\r\n                        // x --> x.value\r\n                        s.appendLeft(id.end + offset, '.value');\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const propBindingRefs = {};\r\n    function registerEscapedPropBinding(id) {\r\n        if (!propBindingRefs.hasOwnProperty(id.name)) {\r\n            propBindingRefs[id.name] = true;\r\n            const publicKey = propsLocalToPublicMap[id.name];\r\n            s.prependRight(offset, `const __props_${publicKey} = ${helper(`toRef`)}(__props, '${publicKey}')\\n`);\r\n        }\r\n    }\r\n    // check root scope first\r\n    walkScope(ast, true);\r\n    walk$1(ast, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            // function scopes\r\n            if (isFunctionType(node)) {\r\n                scopeStack.push((currentScope = {}));\r\n                walkFunctionParams(node, registerBinding);\r\n                if (node.body.type === 'BlockStatement') {\r\n                    walkScope(node.body);\r\n                }\r\n                return;\r\n            }\r\n            // catch param\r\n            if (node.type === 'CatchClause') {\r\n                scopeStack.push((currentScope = {}));\r\n                if (node.param && node.param.type === 'Identifier') {\r\n                    registerBinding(node.param);\r\n                }\r\n                walkScope(node.body);\r\n                return;\r\n            }\r\n            // non-function block scopes\r\n            if (node.type === 'BlockStatement' && !isFunctionType(parent)) {\r\n                scopeStack.push((currentScope = {}));\r\n                walkScope(node);\r\n                return;\r\n            }\r\n            // skip type nodes\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier' &&\r\n                // if inside $$(), skip unless this is a destructured prop binding\r\n                !(escapeScope && rootScope[node.name] !== 'prop') &&\r\n                isReferencedIdentifier(node, parent, parentStack) &&\r\n                !excludedIds.has(node)) {\r\n                // walk up the scope chain to check if id should be appended .value\r\n                let i = scopeStack.length;\r\n                while (i--) {\r\n                    if (rewriteId(scopeStack[i], node, parent, parentStack)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (node.type === 'CallExpression' && node.callee.type === 'Identifier') {\r\n                const callee = node.callee.name;\r\n                const refCall = isRefCreationCall(callee);\r\n                if (refCall && (!parent || parent.type !== 'VariableDeclarator')) {\r\n                    return error(`${refCall} can only be used as the initializer of ` +\r\n                        `a variable declaration.`, node);\r\n                }\r\n                if (callee === escapeSymbol) {\r\n                    s.remove(node.callee.start + offset, node.callee.end + offset);\r\n                    escapeScope = node;\r\n                }\r\n                // TODO remove when out of experimental\r\n                if (callee === '$raw') {\r\n                    error(`$raw() has been replaced by $$(). ` +\r\n                        `See ${RFC_LINK} for latest updates.`, node);\r\n                }\r\n                if (callee === '$fromRef') {\r\n                    error(`$fromRef() has been replaced by $(). ` +\r\n                        `See ${RFC_LINK} for latest updates.`, node);\r\n                }\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if ((node.type === 'BlockStatement' && !isFunctionType(parent)) ||\r\n                isFunctionType(node)) {\r\n                scopeStack.pop();\r\n                currentScope = scopeStack[scopeStack.length - 1] || null;\r\n            }\r\n            if (node === escapeScope) {\r\n                escapeScope = undefined;\r\n            }\r\n        }\r\n    });\r\n    return {\r\n        rootRefs: Object.keys(rootScope).filter(key => rootScope[key] === true),\r\n        importedHelpers: [...importedHelpers]\r\n    };\r\n}\r\nconst RFC_LINK = `https://github.com/vuejs/rfcs/discussions/369`;\r\nconst hasWarned$1 = {};\r\nfunction warnExperimental() {\r\n    // eslint-disable-next-line\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n    warnOnce$1(`Reactivity transform is an experimental feature.\\n` +\r\n        `Experimental features may change behavior between patch versions.\\n` +\r\n        `It is recommended to pin your vue dependencies to exact versions to avoid breakage.\\n` +\r\n        `You can follow the proposal's status at ${RFC_LINK}.`);\r\n}\r\nfunction warnOnce$1(msg) {\r\n    const isNodeProd = typeof process !== 'undefined' && ({}).NODE_ENV === 'production';\r\n    if (!isNodeProd && !false && !hasWarned$1[msg]) {\r\n        hasWarned$1[msg] = true;\r\n        warn$1(msg);\r\n    }\r\n}\r\nfunction warn$1(msg) {\r\n    console.warn(`\\x1b[1m\\x1b[33m[@vue/reactivity-transform]\\x1b[0m\\x1b[33m ${msg}\\x1b[0m\\n`);\r\n}\n\n// Special compiler macros\r\nconst DEFINE_PROPS = 'defineProps';\r\nconst DEFINE_EMITS = 'defineEmits';\r\nconst DEFINE_EXPOSE = 'defineExpose';\r\nconst WITH_DEFAULTS = 'withDefaults';\r\n// constants\r\nconst DEFAULT_VAR = `__default__`;\r\nconst isBuiltInDir = makeMap(`once,memo,if,for,else,else-if,slot,text,html,on,bind,model,show,cloak,is`);\r\n/**\r\n * Compile `<script setup>`\r\n * It requires the whole SFC descriptor because we need to handle and merge\r\n * normal `<script>` + `<script setup>` if both are present.\r\n */\r\nfunction compileScript(sfc, options) {\r\n    var _a;\r\n    let { script, scriptSetup, source, filename } = sfc;\r\n    // feature flags\r\n    // TODO remove support for deprecated options when out of experimental\r\n    const enableReactivityTransform = !!options.reactivityTransform ||\r\n        !!options.refSugar ||\r\n        !!options.refTransform;\r\n    const enablePropsTransform = !!options.reactivityTransform || !!options.propsDestructureTransform;\r\n    const isProd = !!options.isProd;\r\n    const genSourceMap = options.sourceMap !== false;\r\n    let refBindings;\r\n    if (!options.id) {\r\n        warnOnce(`compileScript now requires passing the \\`id\\` option.\\n` +\r\n            `Upgrade your vite or vue-loader version for compatibility with ` +\r\n            `the latest experimental proposals.`);\r\n    }\r\n    const scopeId = options.id ? options.id.replace(/^data-v-/, '') : '';\r\n    const cssVars = sfc.cssVars;\r\n    const scriptLang = script && script.lang;\r\n    const scriptSetupLang = scriptSetup && scriptSetup.lang;\r\n    const isTS = scriptLang === 'ts' ||\r\n        scriptLang === 'tsx' ||\r\n        scriptSetupLang === 'ts' ||\r\n        scriptSetupLang === 'tsx';\r\n    // resolve parser plugins\r\n    const plugins = [];\r\n    if (!isTS || scriptLang === 'tsx' || scriptSetupLang === 'tsx') {\r\n        plugins.push('jsx');\r\n    }\r\n    else {\r\n        // If don't match the case of adding jsx, should remove the jsx from the babelParserPlugins\r\n        if (options.babelParserPlugins)\r\n            options.babelParserPlugins = options.babelParserPlugins.filter(n => n !== 'jsx');\r\n    }\r\n    if (options.babelParserPlugins)\r\n        plugins.push(...options.babelParserPlugins);\r\n    if (isTS)\r\n        plugins.push('typescript', 'decorators-legacy');\r\n    if (!scriptSetup) {\r\n        if (!script) {\r\n            throw new Error(`[@vue/compiler-sfc] SFC contains no <script> tags.`);\r\n        }\r\n        if (scriptLang && !isTS && scriptLang !== 'jsx') {\r\n            // do not process non js/ts script blocks\r\n            return script;\r\n        }\r\n        try {\r\n            let content = script.content;\r\n            let map = script.map;\r\n            const scriptAst = parse_1(content, {\r\n                plugins,\r\n                sourceType: 'module'\r\n            }).program;\r\n            const bindings = analyzeScriptBindings(scriptAst.body);\r\n            if (enableReactivityTransform && shouldTransform(content)) {\r\n                const s = new MagicString(source);\r\n                const startOffset = script.loc.start.offset;\r\n                const endOffset = script.loc.end.offset;\r\n                const { importedHelpers } = transformAST(scriptAst, s, startOffset);\r\n                if (importedHelpers.length) {\r\n                    s.prepend(`import { ${importedHelpers\r\n                        .map(h => `${h} as _${h}`)\r\n                        .join(', ')} } from 'vue'\\n`);\r\n                }\r\n                s.remove(0, startOffset);\r\n                s.remove(endOffset, source.length);\r\n                content = s.toString();\r\n                if (genSourceMap) {\r\n                    map = s.generateMap({\r\n                        source: filename,\r\n                        hires: true,\r\n                        includeContent: true\r\n                    });\r\n                }\r\n            }\r\n            if (cssVars.length) {\r\n                content = rewriteDefault(content, DEFAULT_VAR, plugins);\r\n                content += genNormalScriptCssVarsCode(cssVars, bindings, scopeId, isProd);\r\n                content += `\\nexport default ${DEFAULT_VAR}`;\r\n            }\r\n            return Object.assign(Object.assign({}, script), { content,\r\n                map,\r\n                bindings, scriptAst: scriptAst.body });\r\n        }\r\n        catch (e) {\r\n            // silently fallback if parse fails since user may be using custom\r\n            // babel syntax\r\n            return script;\r\n        }\r\n    }\r\n    if (script && scriptLang !== scriptSetupLang) {\r\n        throw new Error(`[@vue/compiler-sfc] <script> and <script setup> must have the same ` +\r\n            `language type.`);\r\n    }\r\n    if (scriptSetupLang && !isTS && scriptSetupLang !== 'jsx') {\r\n        // do not process non js/ts script blocks\r\n        return scriptSetup;\r\n    }\r\n    // metadata that needs to be returned\r\n    const bindingMetadata = {};\r\n    const helperImports = new Set();\r\n    const userImports = Object.create(null);\r\n    const userImportAlias = Object.create(null);\r\n    const scriptBindings = Object.create(null);\r\n    const setupBindings = Object.create(null);\r\n    let defaultExport;\r\n    let hasDefinePropsCall = false;\r\n    let hasDefineEmitCall = false;\r\n    let hasDefineExposeCall = false;\r\n    let hasDefaultExportName = false;\r\n    let hasDefaultExportRender = false;\r\n    let propsRuntimeDecl;\r\n    let propsRuntimeDefaults;\r\n    let propsDestructureDecl;\r\n    let propsDestructureRestId;\r\n    let propsTypeDecl;\r\n    let propsTypeDeclRaw;\r\n    let propsIdentifier;\r\n    let emitsRuntimeDecl;\r\n    let emitsTypeDecl;\r\n    let emitsTypeDeclRaw;\r\n    let emitIdentifier;\r\n    let hasAwait = false;\r\n    let hasInlinedSsrRenderFn = false;\r\n    // props/emits declared via types\r\n    const typeDeclaredProps = {};\r\n    const typeDeclaredEmits = new Set();\r\n    // record declared types for runtime props type generation\r\n    const declaredTypes = {};\r\n    // props destructure data\r\n    const propsDestructuredBindings = Object.create(null);\r\n    // magic-string state\r\n    const s = new MagicString(source);\r\n    const startOffset = scriptSetup.loc.start.offset;\r\n    const endOffset = scriptSetup.loc.end.offset;\r\n    const scriptStartOffset = script && script.loc.start.offset;\r\n    const scriptEndOffset = script && script.loc.end.offset;\r\n    function helper(key) {\r\n        helperImports.add(key);\r\n        return `_${key}`;\r\n    }\r\n    function parse(input, options, offset) {\r\n        try {\r\n            return parse_1(input, options).program;\r\n        }\r\n        catch (e) {\r\n            e.message = `[@vue/compiler-sfc] ${e.message}\\n\\n${sfc.filename}\\n${generateCodeFrame(source, e.pos + offset, e.pos + offset + 1)}`;\r\n            throw e;\r\n        }\r\n    }\r\n    function error(msg, node, end = node.end + startOffset) {\r\n        throw new Error(`[@vue/compiler-sfc] ${msg}\\n\\n${sfc.filename}\\n${generateCodeFrame(source, node.start + startOffset, end)}`);\r\n    }\r\n    function registerUserImport(source, local, imported, isType, isFromSetup, needTemplateUsageCheck) {\r\n        if (source === 'vue' && imported) {\r\n            userImportAlias[imported] = local;\r\n        }\r\n        // template usage check is only needed in non-inline mode, so we can skip\r\n        // the work if inlineTemplate is true.\r\n        let isUsedInTemplate = needTemplateUsageCheck;\r\n        if (needTemplateUsageCheck &&\r\n            isTS &&\r\n            sfc.template &&\r\n            !sfc.template.src &&\r\n            !sfc.template.lang) {\r\n            isUsedInTemplate = isImportUsed(local, sfc);\r\n        }\r\n        userImports[local] = {\r\n            isType,\r\n            imported: imported || 'default',\r\n            source,\r\n            isFromSetup,\r\n            isUsedInTemplate\r\n        };\r\n    }\r\n    function processDefineProps(node, declId) {\r\n        if (!isCallOf(node, DEFINE_PROPS)) {\r\n            return false;\r\n        }\r\n        if (hasDefinePropsCall) {\r\n            error(`duplicate ${DEFINE_PROPS}() call`, node);\r\n        }\r\n        hasDefinePropsCall = true;\r\n        propsRuntimeDecl = node.arguments[0];\r\n        // call has type parameters - infer runtime types from it\r\n        if (node.typeParameters) {\r\n            if (propsRuntimeDecl) {\r\n                error(`${DEFINE_PROPS}() cannot accept both type and non-type arguments ` +\r\n                    `at the same time. Use one or the other.`, node);\r\n            }\r\n            propsTypeDeclRaw = node.typeParameters.params[0];\r\n            propsTypeDecl = resolveQualifiedType(propsTypeDeclRaw, node => node.type === 'TSTypeLiteral');\r\n            if (!propsTypeDecl) {\r\n                error(`type argument passed to ${DEFINE_PROPS}() must be a literal type, ` +\r\n                    `or a reference to an interface or literal type.`, propsTypeDeclRaw);\r\n            }\r\n        }\r\n        if (declId) {\r\n            if (enablePropsTransform && declId.type === 'ObjectPattern') {\r\n                propsDestructureDecl = declId;\r\n                // props destructure - handle compilation sugar\r\n                for (const prop of declId.properties) {\r\n                    if (prop.type === 'ObjectProperty') {\r\n                        if (prop.computed) {\r\n                            error(`${DEFINE_PROPS}() destructure cannot use computed key.`, prop.key);\r\n                        }\r\n                        const propKey = prop.key.type === 'StringLiteral'\r\n                            ? prop.key.value\r\n                            : prop.key.name;\r\n                        if (prop.value.type === 'AssignmentPattern') {\r\n                            // default value { foo = 123 }\r\n                            const { left, right } = prop.value;\r\n                            if (left.type !== 'Identifier') {\r\n                                error(`${DEFINE_PROPS}() destructure does not support nested patterns.`, left);\r\n                            }\r\n                            // store default value\r\n                            propsDestructuredBindings[propKey] = {\r\n                                local: left.name,\r\n                                default: right\r\n                            };\r\n                        }\r\n                        else if (prop.value.type === 'Identifier') {\r\n                            // simple destructure\r\n                            propsDestructuredBindings[propKey] = {\r\n                                local: prop.value.name\r\n                            };\r\n                        }\r\n                        else {\r\n                            error(`${DEFINE_PROPS}() destructure does not support nested patterns.`, prop.value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // rest spread\r\n                        propsDestructureRestId = prop.argument.name;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                propsIdentifier = scriptSetup.content.slice(declId.start, declId.end);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function processWithDefaults(node, declId) {\r\n        if (!isCallOf(node, WITH_DEFAULTS)) {\r\n            return false;\r\n        }\r\n        if (processDefineProps(node.arguments[0], declId)) {\r\n            if (propsRuntimeDecl) {\r\n                error(`${WITH_DEFAULTS} can only be used with type-based ` +\r\n                    `${DEFINE_PROPS} declaration.`, node);\r\n            }\r\n            if (propsDestructureDecl) {\r\n                error(`${WITH_DEFAULTS}() is unnecessary when using destructure with ${DEFINE_PROPS}().\\n` +\r\n                    `Prefer using destructure default values, e.g. const { foo = 1 } = defineProps(...).`, node.callee);\r\n            }\r\n            propsRuntimeDefaults = node.arguments[1];\r\n            if (!propsRuntimeDefaults ||\r\n                propsRuntimeDefaults.type !== 'ObjectExpression') {\r\n                error(`The 2nd argument of ${WITH_DEFAULTS} must be an object literal.`, propsRuntimeDefaults || node);\r\n            }\r\n        }\r\n        else {\r\n            error(`${WITH_DEFAULTS}' first argument must be a ${DEFINE_PROPS} call.`, node.arguments[0] || node);\r\n        }\r\n        return true;\r\n    }\r\n    function processDefineEmits(node, declId) {\r\n        if (!isCallOf(node, DEFINE_EMITS)) {\r\n            return false;\r\n        }\r\n        if (hasDefineEmitCall) {\r\n            error(`duplicate ${DEFINE_EMITS}() call`, node);\r\n        }\r\n        hasDefineEmitCall = true;\r\n        emitsRuntimeDecl = node.arguments[0];\r\n        if (node.typeParameters) {\r\n            if (emitsRuntimeDecl) {\r\n                error(`${DEFINE_EMITS}() cannot accept both type and non-type arguments ` +\r\n                    `at the same time. Use one or the other.`, node);\r\n            }\r\n            emitsTypeDeclRaw = node.typeParameters.params[0];\r\n            emitsTypeDecl = resolveQualifiedType(emitsTypeDeclRaw, node => node.type === 'TSFunctionType' || node.type === 'TSTypeLiteral');\r\n            if (!emitsTypeDecl) {\r\n                error(`type argument passed to ${DEFINE_EMITS}() must be a function type, ` +\r\n                    `a literal type with call signatures, or a reference to the above types.`, emitsTypeDeclRaw);\r\n            }\r\n        }\r\n        if (declId) {\r\n            emitIdentifier = scriptSetup.content.slice(declId.start, declId.end);\r\n        }\r\n        return true;\r\n    }\r\n    function resolveQualifiedType(node, qualifier) {\r\n        if (qualifier(node)) {\r\n            return node;\r\n        }\r\n        if (node.type === 'TSTypeReference' &&\r\n            node.typeName.type === 'Identifier') {\r\n            const refName = node.typeName.name;\r\n            const isQualifiedType = (node) => {\r\n                if (node.type === 'TSInterfaceDeclaration' &&\r\n                    node.id.name === refName) {\r\n                    return node.body;\r\n                }\r\n                else if (node.type === 'TSTypeAliasDeclaration' &&\r\n                    node.id.name === refName &&\r\n                    qualifier(node.typeAnnotation)) {\r\n                    return node.typeAnnotation;\r\n                }\r\n                else if (node.type === 'ExportNamedDeclaration' && node.declaration) {\r\n                    return isQualifiedType(node.declaration);\r\n                }\r\n            };\r\n            const body = scriptAst\r\n                ? [...scriptSetupAst.body, ...scriptAst.body]\r\n                : scriptSetupAst.body;\r\n            for (const node of body) {\r\n                const qualified = isQualifiedType(node);\r\n                if (qualified) {\r\n                    return qualified;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function processDefineExpose(node) {\r\n        if (isCallOf(node, DEFINE_EXPOSE)) {\r\n            if (hasDefineExposeCall) {\r\n                error(`duplicate ${DEFINE_EXPOSE}() call`, node);\r\n            }\r\n            hasDefineExposeCall = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function checkInvalidScopeReference(node, method) {\r\n        if (!node)\r\n            return;\r\n        walkIdentifiers(node, id => {\r\n            if (setupBindings[id.name]) {\r\n                error(`\\`${method}()\\` in <script setup> cannot reference locally ` +\r\n                    `declared variables because it will be hoisted outside of the ` +\r\n                    `setup() function. If your component options require initialization ` +\r\n                    `in the module scope, use a separate normal <script> to export ` +\r\n                    `the options instead.`, id);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * await foo()\r\n     * -->\r\n     * ;(\r\n     *   ([__temp,__restore] = withAsyncContext(() => foo())),\r\n     *   await __temp,\r\n     *   __restore()\r\n     * )\r\n     *\r\n     * const a = await foo()\r\n     * -->\r\n     * const a = (\r\n     *   ([__temp, __restore] = withAsyncContext(() => foo())),\r\n     *   __temp = await __temp,\r\n     *   __restore(),\r\n     *   __temp\r\n     * )\r\n     */\r\n    function processAwait(node, needSemi, isStatement) {\r\n        const argumentStart = node.argument.extra && node.argument.extra.parenthesized\r\n            ? node.argument.extra.parenStart\r\n            : node.argument.start;\r\n        const argumentStr = source.slice(argumentStart + startOffset, node.argument.end + startOffset);\r\n        const containsNestedAwait = /\\bawait\\b/.test(argumentStr);\r\n        s.overwrite(node.start + startOffset, argumentStart + startOffset, `${needSemi ? `;` : ``}(\\n  ([__temp,__restore] = ${helper(`withAsyncContext`)}(${containsNestedAwait ? `async ` : ``}() => `);\r\n        s.appendLeft(node.end + startOffset, `)),\\n  ${isStatement ? `` : `__temp = `}await __temp,\\n  __restore()${isStatement ? `` : `,\\n  __temp`}\\n)`);\r\n    }\r\n    /**\r\n     * check defaults. If the default object is an object literal with only\r\n     * static properties, we can directly generate more optimized default\r\n     * declarations. Otherwise we will have to fallback to runtime merging.\r\n     */\r\n    function hasStaticWithDefaults() {\r\n        return (propsRuntimeDefaults &&\r\n            propsRuntimeDefaults.type === 'ObjectExpression' &&\r\n            propsRuntimeDefaults.properties.every(node => (node.type === 'ObjectProperty' && !node.computed) ||\r\n                node.type === 'ObjectMethod'));\r\n    }\r\n    function genRuntimeProps(props) {\r\n        const keys = Object.keys(props);\r\n        if (!keys.length) {\r\n            return ``;\r\n        }\r\n        const hasStaticDefaults = hasStaticWithDefaults();\r\n        const scriptSetupSource = scriptSetup.content;\r\n        let propsDecls = `{\n    ${keys\r\n            .map(key => {\r\n            let defaultString;\r\n            const destructured = genDestructuredDefaultValue(key);\r\n            if (destructured) {\r\n                defaultString = `default: ${destructured}`;\r\n            }\r\n            else if (hasStaticDefaults) {\r\n                const prop = propsRuntimeDefaults.properties.find((node) => node.key.name === key);\r\n                if (prop) {\r\n                    if (prop.type === 'ObjectProperty') {\r\n                        // prop has corresponding static default value\r\n                        defaultString = `default: ${scriptSetupSource.slice(prop.value.start, prop.value.end)}`;\r\n                    }\r\n                    else {\r\n                        defaultString = `default() ${scriptSetupSource.slice(prop.body.start, prop.body.end)}`;\r\n                    }\r\n                }\r\n            }\r\n            const { type, required } = props[key];\r\n            if (!isProd) {\r\n                return `${key}: { type: ${toRuntimeTypeString(type)}, required: ${required}${defaultString ? `, ${defaultString}` : ``} }`;\r\n            }\r\n            else if (type.some(el => el === 'Boolean' || (defaultString && el === 'Function'))) {\r\n                // #4783 production: if boolean or defaultString and function exists, should keep the type.\r\n                return `${key}: { type: ${toRuntimeTypeString(type)}${defaultString ? `, ${defaultString}` : ``} }`;\r\n            }\r\n            else {\r\n                // production: checks are useless\r\n                return `${key}: ${defaultString ? `{ ${defaultString} }` : 'null'}`;\r\n            }\r\n        })\r\n            .join(',\\n    ')}\\n  }`;\r\n        if (propsRuntimeDefaults && !hasStaticDefaults) {\r\n            propsDecls = `${helper('mergeDefaults')}(${propsDecls}, ${source.slice(propsRuntimeDefaults.start + startOffset, propsRuntimeDefaults.end + startOffset)})`;\r\n        }\r\n        return `\\n  props: ${propsDecls},`;\r\n    }\r\n    function genDestructuredDefaultValue(key) {\r\n        const destructured = propsDestructuredBindings[key];\r\n        if (destructured && destructured.default) {\r\n            const value = scriptSetup.content.slice(destructured.default.start, destructured.default.end);\r\n            const isLiteral = destructured.default.type.endsWith('Literal');\r\n            return isLiteral ? value : `() => (${value})`;\r\n        }\r\n    }\r\n    function genSetupPropsType(node) {\r\n        const scriptSetupSource = scriptSetup.content;\r\n        if (hasStaticWithDefaults()) {\r\n            // if withDefaults() is used, we need to remove the optional flags\r\n            // on props that have default values\r\n            let res = `{ `;\r\n            const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n            for (const m of members) {\r\n                if ((m.type === 'TSPropertySignature' ||\r\n                    m.type === 'TSMethodSignature') &&\r\n                    m.typeAnnotation &&\r\n                    m.key.type === 'Identifier') {\r\n                    if (propsRuntimeDefaults.properties.some((p) => p.key.name === m.key.name)) {\r\n                        res +=\r\n                            m.key.name +\r\n                                (m.type === 'TSMethodSignature' ? '()' : '') +\r\n                                scriptSetupSource.slice(m.typeAnnotation.start, m.typeAnnotation.end) +\r\n                                ', ';\r\n                    }\r\n                    else {\r\n                        res +=\r\n                            scriptSetupSource.slice(m.start, m.typeAnnotation.end) + `, `;\r\n                    }\r\n                }\r\n            }\r\n            return (res.length ? res.slice(0, -2) : res) + ` }`;\r\n        }\r\n        else {\r\n            return scriptSetupSource.slice(node.start, node.end);\r\n        }\r\n    }\r\n    // 1. process normal <script> first if it exists\r\n    let scriptAst;\r\n    if (script) {\r\n        scriptAst = parse(script.content, {\r\n            plugins,\r\n            sourceType: 'module'\r\n        }, scriptStartOffset);\r\n        for (const node of scriptAst.body) {\r\n            if (node.type === 'ImportDeclaration') {\r\n                // record imports for dedupe\r\n                for (const specifier of node.specifiers) {\r\n                    const imported = specifier.type === 'ImportSpecifier' &&\r\n                        specifier.imported.type === 'Identifier' &&\r\n                        specifier.imported.name;\r\n                    registerUserImport(node.source.value, specifier.local.name, imported, node.importKind === 'type' ||\r\n                        (specifier.type === 'ImportSpecifier' &&\r\n                            specifier.importKind === 'type'), false, !options.inlineTemplate);\r\n                }\r\n            }\r\n            else if (node.type === 'ExportDefaultDeclaration') {\r\n                // export default\r\n                defaultExport = node;\r\n                // check if user has manually specified `name` or 'render` option in\r\n                // export default\r\n                // if has name, skip name inference\r\n                // if has render and no template, generate return object instead of\r\n                // empty render function (#4980)\r\n                let optionProperties;\r\n                if (defaultExport.declaration.type === 'ObjectExpression') {\r\n                    optionProperties = defaultExport.declaration.properties;\r\n                }\r\n                else if (defaultExport.declaration.type === 'CallExpression' &&\r\n                    defaultExport.declaration.arguments[0].type === 'ObjectExpression') {\r\n                    optionProperties = defaultExport.declaration.arguments[0].properties;\r\n                }\r\n                if (optionProperties) {\r\n                    for (const s of optionProperties) {\r\n                        if (s.type === 'ObjectProperty' &&\r\n                            s.key.type === 'Identifier' &&\r\n                            s.key.name === 'name') {\r\n                            hasDefaultExportName = true;\r\n                        }\r\n                        if ((s.type === 'ObjectMethod' || s.type === 'ObjectProperty') &&\r\n                            s.key.type === 'Identifier' &&\r\n                            s.key.name === 'render') {\r\n                            // TODO warn when we provide a better way to do it?\r\n                            hasDefaultExportRender = true;\r\n                        }\r\n                    }\r\n                }\r\n                // export default { ... } --> const __default__ = { ... }\r\n                const start = node.start + scriptStartOffset;\r\n                const end = node.declaration.start + scriptStartOffset;\r\n                s.overwrite(start, end, `const ${DEFAULT_VAR} = `);\r\n            }\r\n            else if (node.type === 'ExportNamedDeclaration') {\r\n                const defaultSpecifier = node.specifiers.find(s => s.exported.type === 'Identifier' && s.exported.name === 'default');\r\n                if (defaultSpecifier) {\r\n                    defaultExport = node;\r\n                    // 1. remove specifier\r\n                    if (node.specifiers.length > 1) {\r\n                        s.remove(defaultSpecifier.start + scriptStartOffset, defaultSpecifier.end + scriptStartOffset);\r\n                    }\r\n                    else {\r\n                        s.remove(node.start + scriptStartOffset, node.end + scriptStartOffset);\r\n                    }\r\n                    if (node.source) {\r\n                        // export { x as default } from './x'\r\n                        // rewrite to `import { x as __default__ } from './x'` and\r\n                        // add to top\r\n                        s.prepend(`import { ${defaultSpecifier.local.name} as ${DEFAULT_VAR} } from '${node.source.value}'\\n`);\r\n                    }\r\n                    else {\r\n                        // export { x as default }\r\n                        // rewrite to `const __default__ = x` and move to end\r\n                        s.appendLeft(scriptEndOffset, `\\nconst ${DEFAULT_VAR} = ${defaultSpecifier.local.name}\\n`);\r\n                    }\r\n                }\r\n                if (node.declaration) {\r\n                    walkDeclaration(node.declaration, scriptBindings, userImportAlias);\r\n                }\r\n            }\r\n            else if ((node.type === 'VariableDeclaration' ||\r\n                node.type === 'FunctionDeclaration' ||\r\n                node.type === 'ClassDeclaration' ||\r\n                node.type === 'TSEnumDeclaration') &&\r\n                !node.declare) {\r\n                walkDeclaration(node, scriptBindings, userImportAlias);\r\n            }\r\n        }\r\n        // apply reactivity transform\r\n        if (enableReactivityTransform && shouldTransform(script.content)) {\r\n            const { rootRefs, importedHelpers } = transformAST(scriptAst, s, scriptStartOffset);\r\n            refBindings = rootRefs;\r\n            for (const h of importedHelpers) {\r\n                helperImports.add(h);\r\n            }\r\n        }\r\n        // <script> after <script setup>\r\n        // we need to move the block up so that `const __default__` is\r\n        // declared before being used in the actual component definition\r\n        if (scriptStartOffset > startOffset) {\r\n            // if content doesn't end with newline, add one\r\n            if (!/\\n$/.test(script.content.trim())) {\r\n                s.appendLeft(scriptEndOffset, `\\n`);\r\n            }\r\n            s.move(scriptStartOffset, scriptEndOffset, 0);\r\n        }\r\n    }\r\n    // 2. parse <script setup> and  walk over top level statements\r\n    const scriptSetupAst = parse(scriptSetup.content, {\r\n        plugins: [\r\n            ...plugins,\r\n            // allow top level await but only inside <script setup>\r\n            'topLevelAwait'\r\n        ],\r\n        sourceType: 'module'\r\n    }, startOffset);\r\n    for (const node of scriptSetupAst.body) {\r\n        const start = node.start + startOffset;\r\n        let end = node.end + startOffset;\r\n        // locate comment\r\n        if (node.trailingComments && node.trailingComments.length > 0) {\r\n            const lastCommentNode = node.trailingComments[node.trailingComments.length - 1];\r\n            end = lastCommentNode.end + startOffset;\r\n        }\r\n        // locate the end of whitespace between this statement and the next\r\n        while (end <= source.length) {\r\n            if (!/\\s/.test(source.charAt(end))) {\r\n                break;\r\n            }\r\n            end++;\r\n        }\r\n        // (Dropped) `ref: x` bindings\r\n        if (node.type === 'LabeledStatement' &&\r\n            node.label.name === 'ref' &&\r\n            node.body.type === 'ExpressionStatement') {\r\n            error(`ref sugar using the label syntax was an experimental proposal and ` +\r\n                `has been dropped based on community feedback. Please check out ` +\r\n                `the new proposal at https://github.com/vuejs/rfcs/discussions/369`, node);\r\n        }\r\n        if (node.type === 'ImportDeclaration') {\r\n            // import declarations are moved to top\r\n            s.move(start, end, 0);\r\n            // dedupe imports\r\n            let removed = 0;\r\n            const removeSpecifier = (i) => {\r\n                const removeLeft = i > removed;\r\n                removed++;\r\n                const current = node.specifiers[i];\r\n                const next = node.specifiers[i + 1];\r\n                s.remove(removeLeft\r\n                    ? node.specifiers[i - 1].end + startOffset\r\n                    : current.start + startOffset, next && !removeLeft\r\n                    ? next.start + startOffset\r\n                    : current.end + startOffset);\r\n            };\r\n            for (let i = 0; i < node.specifiers.length; i++) {\r\n                const specifier = node.specifiers[i];\r\n                const local = specifier.local.name;\r\n                let imported = specifier.type === 'ImportSpecifier' &&\r\n                    specifier.imported.type === 'Identifier' &&\r\n                    specifier.imported.name;\r\n                if (specifier.type === 'ImportNamespaceSpecifier') {\r\n                    imported = '*';\r\n                }\r\n                const source = node.source.value;\r\n                const existing = userImports[local];\r\n                if (source === 'vue' &&\r\n                    (imported === DEFINE_PROPS ||\r\n                        imported === DEFINE_EMITS ||\r\n                        imported === DEFINE_EXPOSE)) {\r\n                    warnOnce(`\\`${imported}\\` is a compiler macro and no longer needs to be imported.`);\r\n                    removeSpecifier(i);\r\n                }\r\n                else if (existing) {\r\n                    if (existing.source === source && existing.imported === imported) {\r\n                        // already imported in <script setup>, dedupe\r\n                        removeSpecifier(i);\r\n                    }\r\n                    else {\r\n                        error(`different imports aliased to same local name.`, specifier);\r\n                    }\r\n                }\r\n                else {\r\n                    registerUserImport(source, local, imported, node.importKind === 'type' ||\r\n                        (specifier.type === 'ImportSpecifier' &&\r\n                            specifier.importKind === 'type'), true, !options.inlineTemplate);\r\n                }\r\n            }\r\n            if (node.specifiers.length && removed === node.specifiers.length) {\r\n                s.remove(node.start + startOffset, node.end + startOffset);\r\n            }\r\n        }\r\n        if (node.type === 'ExpressionStatement') {\r\n            // process `defineProps` and `defineEmit(s)` calls\r\n            if (processDefineProps(node.expression) ||\r\n                processDefineEmits(node.expression) ||\r\n                processWithDefaults(node.expression)) {\r\n                s.remove(node.start + startOffset, node.end + startOffset);\r\n            }\r\n            else if (processDefineExpose(node.expression)) {\r\n                // defineExpose({}) -> expose({})\r\n                const callee = node.expression.callee;\r\n                s.overwrite(callee.start + startOffset, callee.end + startOffset, 'expose');\r\n            }\r\n        }\r\n        if (node.type === 'VariableDeclaration' && !node.declare) {\r\n            const total = node.declarations.length;\r\n            let left = total;\r\n            for (let i = 0; i < total; i++) {\r\n                const decl = node.declarations[i];\r\n                if (decl.init) {\r\n                    // defineProps / defineEmits\r\n                    const isDefineProps = processDefineProps(decl.init, decl.id) ||\r\n                        processWithDefaults(decl.init, decl.id);\r\n                    const isDefineEmits = processDefineEmits(decl.init, decl.id);\r\n                    if (isDefineProps || isDefineEmits) {\r\n                        if (left === 1) {\r\n                            s.remove(node.start + startOffset, node.end + startOffset);\r\n                        }\r\n                        else {\r\n                            let start = decl.start + startOffset;\r\n                            let end = decl.end + startOffset;\r\n                            if (i < total - 1) {\r\n                                // not the last one, locate the start of the next\r\n                                end = node.declarations[i + 1].start + startOffset;\r\n                            }\r\n                            else {\r\n                                // last one, locate the end of the prev\r\n                                start = node.declarations[i - 1].end + startOffset;\r\n                            }\r\n                            s.remove(start, end);\r\n                            left--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // walk declarations to record declared bindings\r\n        if ((node.type === 'VariableDeclaration' ||\r\n            node.type === 'FunctionDeclaration' ||\r\n            node.type === 'ClassDeclaration') &&\r\n            !node.declare) {\r\n            walkDeclaration(node, setupBindings, userImportAlias);\r\n        }\r\n        // walk statements & named exports / variable declarations for top level\r\n        // await\r\n        if ((node.type === 'VariableDeclaration' && !node.declare) ||\r\n            node.type.endsWith('Statement')) {\r\n            const scope = [scriptSetupAst.body];\r\n            walk$1(node, {\r\n                enter(child, parent) {\r\n                    if (isFunctionType(child)) {\r\n                        this.skip();\r\n                    }\r\n                    if (child.type === 'BlockStatement') {\r\n                        scope.push(child.body);\r\n                    }\r\n                    if (child.type === 'AwaitExpression') {\r\n                        hasAwait = true;\r\n                        // if the await expression is an expression statement and\r\n                        // - is in the root scope\r\n                        // - or is not the first statement in a nested block scope\r\n                        // then it needs a semicolon before the generated code.\r\n                        const currentScope = scope[scope.length - 1];\r\n                        const needsSemi = currentScope.some((n, i) => {\r\n                            return ((scope.length === 1 || i > 0) &&\r\n                                n.type === 'ExpressionStatement' &&\r\n                                n.start === child.start);\r\n                        });\r\n                        processAwait(child, needsSemi, parent.type === 'ExpressionStatement');\r\n                    }\r\n                },\r\n                exit(node) {\r\n                    if (node.type === 'BlockStatement')\r\n                        scope.pop();\r\n                }\r\n            });\r\n        }\r\n        if ((node.type === 'ExportNamedDeclaration' && node.exportKind !== 'type') ||\r\n            node.type === 'ExportAllDeclaration' ||\r\n            node.type === 'ExportDefaultDeclaration') {\r\n            error(`<script setup> cannot contain ES module exports. ` +\r\n                `If you are using a previous version of <script setup>, please ` +\r\n                `consult the updated RFC at https://github.com/vuejs/rfcs/pull/227.`, node);\r\n        }\r\n        if (isTS) {\r\n            // runtime enum\r\n            if (node.type === 'TSEnumDeclaration') {\r\n                registerBinding(setupBindings, node.id, \"setup-const\" /* SETUP_CONST */);\r\n            }\r\n            // move all Type declarations to outer scope\r\n            if (node.type.startsWith('TS') ||\r\n                (node.type === 'ExportNamedDeclaration' &&\r\n                    node.exportKind === 'type') ||\r\n                (node.type === 'VariableDeclaration' && node.declare)) {\r\n                recordType(node, declaredTypes);\r\n                s.move(start, end, 0);\r\n            }\r\n        }\r\n    }\r\n    // 3. Apply reactivity transform\r\n    if ((enableReactivityTransform &&\r\n        // normal <script> had ref bindings that maybe used in <script setup>\r\n        (refBindings || shouldTransform(scriptSetup.content))) ||\r\n        propsDestructureDecl) {\r\n        const { rootRefs, importedHelpers } = transformAST(scriptSetupAst, s, startOffset, refBindings, propsDestructuredBindings);\r\n        refBindings = refBindings ? [...refBindings, ...rootRefs] : rootRefs;\r\n        for (const h of importedHelpers) {\r\n            helperImports.add(h);\r\n        }\r\n    }\r\n    // 4. extract runtime props/emits code from setup context type\r\n    if (propsTypeDecl) {\r\n        extractRuntimeProps(propsTypeDecl, typeDeclaredProps, declaredTypes);\r\n    }\r\n    if (emitsTypeDecl) {\r\n        extractRuntimeEmits(emitsTypeDecl, typeDeclaredEmits);\r\n    }\r\n    // 5. check useOptions args to make sure it doesn't reference setup scope\r\n    // variables\r\n    checkInvalidScopeReference(propsRuntimeDecl, DEFINE_PROPS);\r\n    checkInvalidScopeReference(propsRuntimeDefaults, DEFINE_PROPS);\r\n    checkInvalidScopeReference(propsDestructureDecl, DEFINE_PROPS);\r\n    checkInvalidScopeReference(emitsRuntimeDecl, DEFINE_EMITS);\r\n    // 6. remove non-script content\r\n    if (script) {\r\n        if (startOffset < scriptStartOffset) {\r\n            // <script setup> before <script>\r\n            s.remove(0, startOffset);\r\n            s.remove(endOffset, scriptStartOffset);\r\n            s.remove(scriptEndOffset, source.length);\r\n        }\r\n        else {\r\n            // <script> before <script setup>\r\n            s.remove(0, scriptStartOffset);\r\n            s.remove(scriptEndOffset, startOffset);\r\n            s.remove(endOffset, source.length);\r\n        }\r\n    }\r\n    else {\r\n        // only <script setup>\r\n        s.remove(0, startOffset);\r\n        s.remove(endOffset, source.length);\r\n    }\r\n    // 7. analyze binding metadata\r\n    if (scriptAst) {\r\n        Object.assign(bindingMetadata, analyzeScriptBindings(scriptAst.body));\r\n    }\r\n    if (propsRuntimeDecl) {\r\n        for (const key of getObjectOrArrayExpressionKeys(propsRuntimeDecl)) {\r\n            bindingMetadata[key] = \"props\" /* PROPS */;\r\n        }\r\n    }\r\n    for (const key in typeDeclaredProps) {\r\n        bindingMetadata[key] = \"props\" /* PROPS */;\r\n    }\r\n    // props aliases\r\n    if (propsDestructureDecl) {\r\n        if (propsDestructureRestId) {\r\n            bindingMetadata[propsDestructureRestId] =\r\n                \"setup-reactive-const\" /* SETUP_REACTIVE_CONST */;\r\n        }\r\n        for (const key in propsDestructuredBindings) {\r\n            const { local } = propsDestructuredBindings[key];\r\n            if (local !== key) {\r\n                bindingMetadata[local] = \"props-aliased\" /* PROPS_ALIASED */;\r\n                (bindingMetadata.__propsAliases ||\r\n                    (bindingMetadata.__propsAliases = {}))[local] = key;\r\n            }\r\n        }\r\n    }\r\n    for (const [key, { isType, imported, source }] of Object.entries(userImports)) {\r\n        if (isType)\r\n            continue;\r\n        bindingMetadata[key] =\r\n            imported === '*' ||\r\n                (imported === 'default' && source.endsWith('.vue')) ||\r\n                source === 'vue'\r\n                ? \"setup-const\" /* SETUP_CONST */\r\n                : \"setup-maybe-ref\" /* SETUP_MAYBE_REF */;\r\n    }\r\n    for (const key in scriptBindings) {\r\n        bindingMetadata[key] = scriptBindings[key];\r\n    }\r\n    for (const key in setupBindings) {\r\n        bindingMetadata[key] = setupBindings[key];\r\n    }\r\n    // known ref bindings\r\n    if (refBindings) {\r\n        for (const key of refBindings) {\r\n            bindingMetadata[key] = \"setup-ref\" /* SETUP_REF */;\r\n        }\r\n    }\r\n    // 8. inject `useCssVars` calls\r\n    if (cssVars.length &&\r\n        // no need to do this when targeting SSR\r\n        !(options.inlineTemplate && ((_a = options.templateOptions) === null || _a === void 0 ? void 0 : _a.ssr))) {\r\n        helperImports.add(CSS_VARS_HELPER);\r\n        helperImports.add('unref');\r\n        s.prependRight(startOffset, `\\n${genCssVarsCode(cssVars, bindingMetadata, scopeId, isProd)}\\n`);\r\n    }\r\n    // 9. finalize setup() argument signature\r\n    let args = `__props`;\r\n    if (propsTypeDecl) {\r\n        // mark as any and only cast on assignment\r\n        // since the user defined complex types may be incompatible with the\r\n        // inferred type from generated runtime declarations\r\n        args += `: any`;\r\n    }\r\n    // inject user assignment of props\r\n    // we use a default __props so that template expressions referencing props\r\n    // can use it directly\r\n    if (propsIdentifier) {\r\n        s.prependLeft(startOffset, `\\nconst ${propsIdentifier} = __props${propsTypeDecl ? ` as ${genSetupPropsType(propsTypeDecl)}` : ``}\\n`);\r\n    }\r\n    if (propsDestructureRestId) {\r\n        s.prependLeft(startOffset, `\\nconst ${propsDestructureRestId} = ${helper(`createPropsRestProxy`)}(__props, ${JSON.stringify(Object.keys(propsDestructuredBindings))})\\n`);\r\n    }\r\n    // inject temp variables for async context preservation\r\n    if (hasAwait) {\r\n        const any = isTS ? `: any` : ``;\r\n        s.prependLeft(startOffset, `\\nlet __temp${any}, __restore${any}\\n`);\r\n    }\r\n    const destructureElements = hasDefineExposeCall || !options.inlineTemplate ? [`expose`] : [];\r\n    if (emitIdentifier) {\r\n        destructureElements.push(emitIdentifier === `emit` ? `emit` : `emit: ${emitIdentifier}`);\r\n    }\r\n    if (destructureElements.length) {\r\n        args += `, { ${destructureElements.join(', ')} }`;\r\n        if (emitsTypeDecl) {\r\n            args += `: { emit: (${scriptSetup.content.slice(emitsTypeDecl.start, emitsTypeDecl.end)}), expose: any, slots: any, attrs: any }`;\r\n        }\r\n    }\r\n    // 10. generate return statement\r\n    let returned;\r\n    if (!options.inlineTemplate || (!sfc.template && hasDefaultExportRender)) {\r\n        // non-inline mode, or has manual render in normal <script>\r\n        // return bindings from script and script setup\r\n        const allBindings = Object.assign(Object.assign({}, scriptBindings), setupBindings);\r\n        for (const key in userImports) {\r\n            if (!userImports[key].isType && userImports[key].isUsedInTemplate) {\r\n                allBindings[key] = true;\r\n            }\r\n        }\r\n        returned = `{ ${Object.keys(allBindings).join(', ')} }`;\r\n    }\r\n    else {\r\n        // inline mode\r\n        if (sfc.template && !sfc.template.src) {\r\n            if (options.templateOptions && options.templateOptions.ssr) {\r\n                hasInlinedSsrRenderFn = true;\r\n            }\r\n            // inline render function mode - we are going to compile the template and\r\n            // inline it right here\r\n            const { code, ast, preamble, tips, errors } = compileTemplate(Object.assign(Object.assign({ filename, source: sfc.template.content, inMap: sfc.template.map }, options.templateOptions), { id: scopeId, scoped: sfc.styles.some(s => s.scoped), isProd: options.isProd, ssrCssVars: sfc.cssVars, compilerOptions: Object.assign(Object.assign({}, (options.templateOptions &&\r\n                    options.templateOptions.compilerOptions)), { inline: true, isTS,\r\n                    bindingMetadata }) }));\r\n            if (tips.length) {\r\n                tips.forEach(warnOnce);\r\n            }\r\n            const err = errors[0];\r\n            if (typeof err === 'string') {\r\n                throw new Error(err);\r\n            }\r\n            else if (err) {\r\n                if (err.loc) {\r\n                    err.message +=\r\n                        `\\n\\n` +\r\n                            sfc.filename +\r\n                            '\\n' +\r\n                            generateCodeFrame(source, err.loc.start.offset, err.loc.end.offset) +\r\n                            `\\n`;\r\n                }\r\n                throw err;\r\n            }\r\n            if (preamble) {\r\n                s.prepend(preamble);\r\n            }\r\n            // avoid duplicated unref import\r\n            // as this may get injected by the render function preamble OR the\r\n            // css vars codegen\r\n            if (ast && ast.helpers.includes(UNREF)) {\r\n                helperImports.delete('unref');\r\n            }\r\n            returned = code;\r\n        }\r\n        else {\r\n            returned = `() => {}`;\r\n        }\r\n    }\r\n    if (!options.inlineTemplate && !false) {\r\n        // in non-inline mode, the `__isScriptSetup: true` flag is used by\r\n        // componentPublicInstance proxy to allow properties that start with $ or _\r\n        s.appendRight(endOffset, `\\nconst __returned__ = ${returned}\\n` +\r\n            `Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })\\n` +\r\n            `return __returned__` +\r\n            `\\n}\\n\\n`);\r\n    }\r\n    else {\r\n        s.appendRight(endOffset, `\\nreturn ${returned}\\n}\\n\\n`);\r\n    }\r\n    // 11. finalize default export\r\n    let runtimeOptions = ``;\r\n    if (!hasDefaultExportName && filename && filename !== DEFAULT_FILENAME) {\r\n        const match = filename.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            runtimeOptions += `\\n  __name: '${match[1]}',`;\r\n        }\r\n    }\r\n    if (hasInlinedSsrRenderFn) {\r\n        runtimeOptions += `\\n  __ssrInlineRender: true,`;\r\n    }\r\n    if (propsRuntimeDecl) {\r\n        let declCode = scriptSetup.content\r\n            .slice(propsRuntimeDecl.start, propsRuntimeDecl.end)\r\n            .trim();\r\n        if (propsDestructureDecl) {\r\n            const defaults = [];\r\n            for (const key in propsDestructuredBindings) {\r\n                const d = genDestructuredDefaultValue(key);\r\n                if (d)\r\n                    defaults.push(`${key}: ${d}`);\r\n            }\r\n            if (defaults.length) {\r\n                declCode = `${helper(`mergeDefaults`)}(${declCode}, {\\n  ${defaults.join(',\\n  ')}\\n})`;\r\n            }\r\n        }\r\n        runtimeOptions += `\\n  props: ${declCode},`;\r\n    }\r\n    else if (propsTypeDecl) {\r\n        runtimeOptions += genRuntimeProps(typeDeclaredProps);\r\n    }\r\n    if (emitsRuntimeDecl) {\r\n        runtimeOptions += `\\n  emits: ${scriptSetup.content\r\n            .slice(emitsRuntimeDecl.start, emitsRuntimeDecl.end)\r\n            .trim()},`;\r\n    }\r\n    else if (emitsTypeDecl) {\r\n        runtimeOptions += genRuntimeEmits(typeDeclaredEmits);\r\n    }\r\n    // <script setup> components are closed by default. If the user did not\r\n    // explicitly call `defineExpose`, call expose() with no args.\r\n    const exposeCall = hasDefineExposeCall || options.inlineTemplate ? `` : `  expose();\\n`;\r\n    // wrap setup code with function.\r\n    if (isTS) {\r\n        // for TS, make sure the exported type is still valid type with\r\n        // correct props information\r\n        // we have to use object spread for types to be merged properly\r\n        // user's TS setting should compile it down to proper targets\r\n        // export default defineComponent({ ...__default__, ... })\r\n        const def = defaultExport ? `\\n  ...${DEFAULT_VAR},` : ``;\r\n        s.prependLeft(startOffset, `\\nexport default /*#__PURE__*/${helper(`defineComponent`)}({${def}${runtimeOptions}\\n  ${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n        s.appendRight(endOffset, `})`);\r\n    }\r\n    else {\r\n        if (defaultExport) {\r\n            // without TS, can't rely on rest spread, so we use Object.assign\r\n            // export default Object.assign(__default__, { ... })\r\n            s.prependLeft(startOffset, `\\nexport default /*#__PURE__*/Object.assign(${DEFAULT_VAR}, {${runtimeOptions}\\n  ` +\r\n                `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n            s.appendRight(endOffset, `})`);\r\n        }\r\n        else {\r\n            s.prependLeft(startOffset, `\\nexport default {${runtimeOptions}\\n  ` +\r\n                `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n            s.appendRight(endOffset, `}`);\r\n        }\r\n    }\r\n    // 12. finalize Vue helper imports\r\n    if (helperImports.size > 0) {\r\n        s.prepend(`import { ${[...helperImports]\r\n            .map(h => `${h} as _${h}`)\r\n            .join(', ')} } from 'vue'\\n`);\r\n    }\r\n    s.trim();\r\n    return Object.assign(Object.assign({}, scriptSetup), { bindings: bindingMetadata, imports: userImports, content: s.toString(), map: genSourceMap\r\n            ? s.generateMap({\r\n                source: filename,\r\n                hires: true,\r\n                includeContent: true\r\n            })\r\n            : undefined, scriptAst: scriptAst === null || scriptAst === void 0 ? void 0 : scriptAst.body, scriptSetupAst: scriptSetupAst === null || scriptSetupAst === void 0 ? void 0 : scriptSetupAst.body });\r\n}\r\nfunction registerBinding(bindings, node, type) {\r\n    bindings[node.name] = type;\r\n}\r\nfunction walkDeclaration(node, bindings, userImportAlias) {\r\n    if (node.type === 'VariableDeclaration') {\r\n        const isConst = node.kind === 'const';\r\n        // export const foo = ...\r\n        for (const { id, init } of node.declarations) {\r\n            const isDefineCall = !!(isConst &&\r\n                isCallOf(init, c => c === DEFINE_PROPS || c === DEFINE_EMITS || c === WITH_DEFAULTS));\r\n            if (id.type === 'Identifier') {\r\n                let bindingType;\r\n                const userReactiveBinding = userImportAlias['reactive'] || 'reactive';\r\n                if (isCallOf(init, userReactiveBinding)) {\r\n                    // treat reactive() calls as let since it's meant to be mutable\r\n                    bindingType = isConst\r\n                        ? \"setup-reactive-const\" /* SETUP_REACTIVE_CONST */\r\n                        : \"setup-let\" /* SETUP_LET */;\r\n                }\r\n                else if (\r\n                // if a declaration is a const literal, we can mark it so that\r\n                // the generated render fn code doesn't need to unref() it\r\n                isDefineCall ||\r\n                    (isConst && canNeverBeRef(init, userReactiveBinding))) {\r\n                    bindingType = isCallOf(init, DEFINE_PROPS)\r\n                        ? \"setup-reactive-const\" /* SETUP_REACTIVE_CONST */\r\n                        : \"setup-const\" /* SETUP_CONST */;\r\n                }\r\n                else if (isConst) {\r\n                    if (isCallOf(init, userImportAlias['ref'] || 'ref')) {\r\n                        bindingType = \"setup-ref\" /* SETUP_REF */;\r\n                    }\r\n                    else {\r\n                        bindingType = \"setup-maybe-ref\" /* SETUP_MAYBE_REF */;\r\n                    }\r\n                }\r\n                else {\r\n                    bindingType = \"setup-let\" /* SETUP_LET */;\r\n                }\r\n                registerBinding(bindings, id, bindingType);\r\n            }\r\n            else {\r\n                if (isCallOf(init, DEFINE_PROPS)) {\r\n                    // skip walking props destructure\r\n                    return;\r\n                }\r\n                if (id.type === 'ObjectPattern') {\r\n                    walkObjectPattern(id, bindings, isConst, isDefineCall);\r\n                }\r\n                else if (id.type === 'ArrayPattern') {\r\n                    walkArrayPattern(id, bindings, isConst, isDefineCall);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (node.type === 'TSEnumDeclaration' ||\r\n        node.type === 'FunctionDeclaration' ||\r\n        node.type === 'ClassDeclaration') {\r\n        // export function foo() {} / export class Foo {}\r\n        // export declarations must be named.\r\n        bindings[node.id.name] = \"setup-const\" /* SETUP_CONST */;\r\n    }\r\n}\r\nfunction walkObjectPattern(node, bindings, isConst, isDefineCall = false) {\r\n    for (const p of node.properties) {\r\n        if (p.type === 'ObjectProperty') {\r\n            if (p.key.type === 'Identifier' && p.key === p.value) {\r\n                // shorthand: const { x } = ...\r\n                const type = isDefineCall\r\n                    ? \"setup-const\" /* SETUP_CONST */\r\n                    : isConst\r\n                        ? \"setup-maybe-ref\" /* SETUP_MAYBE_REF */\r\n                        : \"setup-let\" /* SETUP_LET */;\r\n                registerBinding(bindings, p.key, type);\r\n            }\r\n            else {\r\n                walkPattern(p.value, bindings, isConst, isDefineCall);\r\n            }\r\n        }\r\n        else {\r\n            // ...rest\r\n            // argument can only be identifier when destructuring\r\n            const type = isConst ? \"setup-const\" /* SETUP_CONST */ : \"setup-let\" /* SETUP_LET */;\r\n            registerBinding(bindings, p.argument, type);\r\n        }\r\n    }\r\n}\r\nfunction walkArrayPattern(node, bindings, isConst, isDefineCall = false) {\r\n    for (const e of node.elements) {\r\n        e && walkPattern(e, bindings, isConst, isDefineCall);\r\n    }\r\n}\r\nfunction walkPattern(node, bindings, isConst, isDefineCall = false) {\r\n    if (node.type === 'Identifier') {\r\n        const type = isDefineCall\r\n            ? \"setup-const\" /* SETUP_CONST */\r\n            : isConst\r\n                ? \"setup-maybe-ref\" /* SETUP_MAYBE_REF */\r\n                : \"setup-let\" /* SETUP_LET */;\r\n        registerBinding(bindings, node, type);\r\n    }\r\n    else if (node.type === 'RestElement') {\r\n        // argument can only be identifier when destructuring\r\n        const type = isConst ? \"setup-const\" /* SETUP_CONST */ : \"setup-let\" /* SETUP_LET */;\r\n        registerBinding(bindings, node.argument, type);\r\n    }\r\n    else if (node.type === 'ObjectPattern') {\r\n        walkObjectPattern(node, bindings, isConst);\r\n    }\r\n    else if (node.type === 'ArrayPattern') {\r\n        walkArrayPattern(node, bindings, isConst);\r\n    }\r\n    else if (node.type === 'AssignmentPattern') {\r\n        if (node.left.type === 'Identifier') {\r\n            const type = isDefineCall\r\n                ? \"setup-const\" /* SETUP_CONST */\r\n                : isConst\r\n                    ? \"setup-maybe-ref\" /* SETUP_MAYBE_REF */\r\n                    : \"setup-let\" /* SETUP_LET */;\r\n            registerBinding(bindings, node.left, type);\r\n        }\r\n        else {\r\n            walkPattern(node.left, bindings, isConst);\r\n        }\r\n    }\r\n}\r\nfunction recordType(node, declaredTypes) {\r\n    if (node.type === 'TSInterfaceDeclaration') {\r\n        declaredTypes[node.id.name] = [`Object`];\r\n    }\r\n    else if (node.type === 'TSTypeAliasDeclaration') {\r\n        declaredTypes[node.id.name] = inferRuntimeType(node.typeAnnotation, declaredTypes);\r\n    }\r\n    else if (node.type === 'ExportNamedDeclaration' && node.declaration) {\r\n        recordType(node.declaration, declaredTypes);\r\n    }\r\n}\r\nfunction extractRuntimeProps(node, props, declaredTypes, isProd) {\r\n    const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n    for (const m of members) {\r\n        if ((m.type === 'TSPropertySignature' || m.type === 'TSMethodSignature') &&\r\n            m.key.type === 'Identifier') {\r\n            let type;\r\n            if (m.type === 'TSMethodSignature') {\r\n                type = ['Function'];\r\n            }\r\n            else if (m.typeAnnotation) {\r\n                type = inferRuntimeType(m.typeAnnotation.typeAnnotation, declaredTypes);\r\n            }\r\n            props[m.key.name] = {\r\n                key: m.key.name,\r\n                required: !m.optional,\r\n                type: type || [`null`]\r\n            };\r\n        }\r\n    }\r\n}\r\nfunction inferRuntimeType(node, declaredTypes) {\r\n    switch (node.type) {\r\n        case 'TSStringKeyword':\r\n            return ['String'];\r\n        case 'TSNumberKeyword':\r\n            return ['Number'];\r\n        case 'TSBooleanKeyword':\r\n            return ['Boolean'];\r\n        case 'TSObjectKeyword':\r\n            return ['Object'];\r\n        case 'TSTypeLiteral':\r\n            // TODO (nice to have) generate runtime property validation\r\n            return ['Object'];\r\n        case 'TSFunctionType':\r\n            return ['Function'];\r\n        case 'TSArrayType':\r\n        case 'TSTupleType':\r\n            // TODO (nice to have) generate runtime element type/length checks\r\n            return ['Array'];\r\n        case 'TSLiteralType':\r\n            switch (node.literal.type) {\r\n                case 'StringLiteral':\r\n                    return ['String'];\r\n                case 'BooleanLiteral':\r\n                    return ['Boolean'];\r\n                case 'NumericLiteral':\r\n                case 'BigIntLiteral':\r\n                    return ['Number'];\r\n                default:\r\n                    return [`null`];\r\n            }\r\n        case 'TSTypeReference':\r\n            if (node.typeName.type === 'Identifier') {\r\n                if (declaredTypes[node.typeName.name]) {\r\n                    return declaredTypes[node.typeName.name];\r\n                }\r\n                switch (node.typeName.name) {\r\n                    case 'Array':\r\n                    case 'Function':\r\n                    case 'Object':\r\n                    case 'Set':\r\n                    case 'Map':\r\n                    case 'WeakSet':\r\n                    case 'WeakMap':\r\n                    case 'Date':\r\n                    case 'Promise':\r\n                        return [node.typeName.name];\r\n                    case 'Record':\r\n                    case 'Partial':\r\n                    case 'Readonly':\r\n                    case 'Pick':\r\n                    case 'Omit':\r\n                    case 'Exclude':\r\n                    case 'Extract':\r\n                    case 'Required':\r\n                    case 'InstanceType':\r\n                        return ['Object'];\r\n                }\r\n            }\r\n            return [`null`];\r\n        case 'TSParenthesizedType':\r\n            return inferRuntimeType(node.typeAnnotation, declaredTypes);\r\n        case 'TSUnionType':\r\n            return [\r\n                ...new Set([].concat(...node.types.map(t => inferRuntimeType(t, declaredTypes))))\r\n            ];\r\n        case 'TSIntersectionType':\r\n            return ['Object'];\r\n        case 'TSSymbolKeyword':\r\n            return ['Symbol'];\r\n        default:\r\n            return [`null`]; // no runtime check\r\n    }\r\n}\r\nfunction toRuntimeTypeString(types) {\r\n    return types.length > 1 ? `[${types.join(', ')}]` : types[0];\r\n}\r\nfunction extractRuntimeEmits(node, emits) {\r\n    if (node.type === 'TSTypeLiteral' || node.type === 'TSInterfaceBody') {\r\n        const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n        for (let t of members) {\r\n            if (t.type === 'TSCallSignatureDeclaration') {\r\n                extractEventNames(t.parameters[0], emits);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    else {\r\n        extractEventNames(node.parameters[0], emits);\r\n    }\r\n}\r\nfunction extractEventNames(eventName, emits) {\r\n    if (eventName.type === 'Identifier' &&\r\n        eventName.typeAnnotation &&\r\n        eventName.typeAnnotation.type === 'TSTypeAnnotation') {\r\n        const typeNode = eventName.typeAnnotation.typeAnnotation;\r\n        if (typeNode.type === 'TSLiteralType') {\r\n            if (typeNode.literal.type !== 'UnaryExpression') {\r\n                emits.add(String(typeNode.literal.value));\r\n            }\r\n        }\r\n        else if (typeNode.type === 'TSUnionType') {\r\n            for (const t of typeNode.types) {\r\n                if (t.type === 'TSLiteralType' &&\r\n                    t.literal.type !== 'UnaryExpression') {\r\n                    emits.add(String(t.literal.value));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genRuntimeEmits(emits) {\r\n    return emits.size\r\n        ? `\\n  emits: [${Array.from(emits)\r\n            .map(p => JSON.stringify(p))\r\n            .join(', ')}],`\r\n        : ``;\r\n}\r\nfunction isCallOf(node, test) {\r\n    return !!(node &&\r\n        node.type === 'CallExpression' &&\r\n        node.callee.type === 'Identifier' &&\r\n        (typeof test === 'string'\r\n            ? node.callee.name === test\r\n            : test(node.callee.name)));\r\n}\r\nfunction canNeverBeRef(node, userReactiveImport) {\r\n    if (isCallOf(node, userReactiveImport)) {\r\n        return true;\r\n    }\r\n    switch (node.type) {\r\n        case 'UnaryExpression':\r\n        case 'BinaryExpression':\r\n        case 'ArrayExpression':\r\n        case 'ObjectExpression':\r\n        case 'FunctionExpression':\r\n        case 'ArrowFunctionExpression':\r\n        case 'UpdateExpression':\r\n        case 'ClassExpression':\r\n        case 'TaggedTemplateExpression':\r\n            return true;\r\n        case 'SequenceExpression':\r\n            return canNeverBeRef(node.expressions[node.expressions.length - 1], userReactiveImport);\r\n        default:\r\n            if (node.type.endsWith('Literal')) {\r\n                return true;\r\n            }\r\n            return false;\r\n    }\r\n}\r\n/**\r\n * Analyze bindings in normal `<script>`\r\n * Note that `compileScriptSetup` already analyzes bindings as part of its\r\n * compilation process so this should only be used on single `<script>` SFCs.\r\n */\r\nfunction analyzeScriptBindings(ast) {\r\n    for (const node of ast) {\r\n        if (node.type === 'ExportDefaultDeclaration' &&\r\n            node.declaration.type === 'ObjectExpression') {\r\n            return analyzeBindingsFromOptions(node.declaration);\r\n        }\r\n    }\r\n    return {};\r\n}\r\nfunction analyzeBindingsFromOptions(node) {\r\n    const bindings = {};\r\n    // #3270, #3275\r\n    // mark non-script-setup so we don't resolve components/directives from these\r\n    Object.defineProperty(bindings, '__isScriptSetup', {\r\n        enumerable: false,\r\n        value: false\r\n    });\r\n    for (const property of node.properties) {\r\n        if (property.type === 'ObjectProperty' &&\r\n            !property.computed &&\r\n            property.key.type === 'Identifier') {\r\n            // props\r\n            if (property.key.name === 'props') {\r\n                // props: ['foo']\r\n                // props: { foo: ... }\r\n                for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n                    bindings[key] = \"props\" /* PROPS */;\r\n                }\r\n            }\r\n            // inject\r\n            else if (property.key.name === 'inject') {\r\n                // inject: ['foo']\r\n                // inject: { foo: {} }\r\n                for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n                    bindings[key] = \"options\" /* OPTIONS */;\r\n                }\r\n            }\r\n            // computed & methods\r\n            else if (property.value.type === 'ObjectExpression' &&\r\n                (property.key.name === 'computed' || property.key.name === 'methods')) {\r\n                // methods: { foo() {} }\r\n                // computed: { foo() {} }\r\n                for (const key of getObjectExpressionKeys(property.value)) {\r\n                    bindings[key] = \"options\" /* OPTIONS */;\r\n                }\r\n            }\r\n        }\r\n        // setup & data\r\n        else if (property.type === 'ObjectMethod' &&\r\n            property.key.type === 'Identifier' &&\r\n            (property.key.name === 'setup' || property.key.name === 'data')) {\r\n            for (const bodyItem of property.body.body) {\r\n                // setup() {\r\n                //   return {\r\n                //     foo: null\r\n                //   }\r\n                // }\r\n                if (bodyItem.type === 'ReturnStatement' &&\r\n                    bodyItem.argument &&\r\n                    bodyItem.argument.type === 'ObjectExpression') {\r\n                    for (const key of getObjectExpressionKeys(bodyItem.argument)) {\r\n                        bindings[key] =\r\n                            property.key.name === 'setup'\r\n                                ? \"setup-maybe-ref\" /* SETUP_MAYBE_REF */\r\n                                : \"data\" /* DATA */;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return bindings;\r\n}\r\nfunction getObjectExpressionKeys(node) {\r\n    const keys = [];\r\n    for (const prop of node.properties) {\r\n        if ((prop.type === 'ObjectProperty' || prop.type === 'ObjectMethod') &&\r\n            !prop.computed) {\r\n            if (prop.key.type === 'Identifier') {\r\n                keys.push(prop.key.name);\r\n            }\r\n            else if (prop.key.type === 'StringLiteral') {\r\n                keys.push(prop.key.value);\r\n            }\r\n        }\r\n    }\r\n    return keys;\r\n}\r\nfunction getArrayExpressionKeys(node) {\r\n    const keys = [];\r\n    for (const element of node.elements) {\r\n        if (element && element.type === 'StringLiteral') {\r\n            keys.push(element.value);\r\n        }\r\n    }\r\n    return keys;\r\n}\r\nfunction getObjectOrArrayExpressionKeys(value) {\r\n    if (value.type === 'ArrayExpression') {\r\n        return getArrayExpressionKeys(value);\r\n    }\r\n    if (value.type === 'ObjectExpression') {\r\n        return getObjectExpressionKeys(value);\r\n    }\r\n    return [];\r\n}\r\nconst templateUsageCheckCache = createCache();\r\nfunction resolveTemplateUsageCheckString(sfc) {\r\n    const { content, ast } = sfc.template;\r\n    const cached = templateUsageCheckCache.get(content);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let code = '';\r\n    transform(createRoot([ast]), {\r\n        nodeTransforms: [\r\n            node => {\r\n                if (node.type === 1 /* ELEMENT */) {\r\n                    if (!parserOptions.isNativeTag(node.tag) &&\r\n                        !parserOptions.isBuiltInComponent(node.tag)) {\r\n                        code += `,${camelize(node.tag)},${capitalize(camelize(node.tag))}`;\r\n                    }\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const prop = node.props[i];\r\n                        if (prop.type === 7 /* DIRECTIVE */) {\r\n                            if (!isBuiltInDir(prop.name)) {\r\n                                code += `,v${capitalize(camelize(prop.name))}`;\r\n                            }\r\n                            if (prop.exp) {\r\n                                code += `,${processExp(prop.exp.content, prop.name)}`;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.type === 5 /* INTERPOLATION */) {\r\n                    code += `,${processExp(node.content.content)}`;\r\n                }\r\n            }\r\n        ]\r\n    });\r\n    code += ';';\r\n    templateUsageCheckCache.set(content, code);\r\n    return code;\r\n}\r\nconst forAliasRE$1 = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\nfunction processExp(exp, dir) {\r\n    if (/ as\\s+\\w|<.*>|:/.test(exp)) {\r\n        if (dir === 'slot') {\r\n            exp = `(${exp})=>{}`;\r\n        }\r\n        else if (dir === 'for') {\r\n            const inMatch = exp.match(forAliasRE$1);\r\n            if (inMatch) {\r\n                const [, LHS, RHS] = inMatch;\r\n                return processExp(`(${LHS})=>{}`) + processExp(RHS);\r\n            }\r\n        }\r\n        let ret = '';\r\n        // has potential type cast or generic arguments that uses types\r\n        const ast = parseExpression_1(exp, { plugins: ['typescript'] });\r\n        walkIdentifiers(ast, node => {\r\n            ret += `,` + node.name;\r\n        });\r\n        return ret;\r\n    }\r\n    return stripStrings(exp);\r\n}\r\nfunction stripStrings(exp) {\r\n    return exp\r\n        .replace(/'[^']*'|\"[^\"]*\"/g, '')\r\n        .replace(/`[^`]+`/g, stripTemplateString);\r\n}\r\nfunction stripTemplateString(str) {\r\n    const interpMatch = str.match(/\\${[^}]+}/g);\r\n    if (interpMatch) {\r\n        return interpMatch.map(m => m.slice(2, -1)).join(',');\r\n    }\r\n    return '';\r\n}\r\nfunction isImportUsed(local, sfc) {\r\n    return new RegExp(\r\n    // #4274 escape $ since it's a special char in regex\r\n    // (and is the only regex special char that is valid in identifiers)\r\n    `[^\\\\w$_]${local.replace(/\\$/g, '\\\\$')}[^\\\\w$_]`).test(resolveTemplateUsageCheckString(sfc));\r\n}\r\n/**\r\n * Note: this comparison assumes the prev/next script are already identical,\r\n * and only checks the special case where <script setup lang=\"ts\"> unused import\r\n * pruning result changes due to template changes.\r\n */\r\nfunction hmrShouldReload(prevImports, next) {\r\n    if (!next.scriptSetup ||\r\n        (next.scriptSetup.lang !== 'ts' && next.scriptSetup.lang !== 'tsx')) {\r\n        return false;\r\n    }\r\n    // for each previous import, check if its used status remain the same based on\r\n    // the next descriptor's template\r\n    for (const key in prevImports) {\r\n        // if an import was previous unused, but now is used, we need to force\r\n        // reload so that the script now includes that import.\r\n        if (!prevImports[key].isUsedInTemplate && isImportUsed(key, next)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\nconst DEFAULT_FILENAME = 'anonymous.vue';\r\nconst sourceToSFC = createCache();\r\nfunction parse$4(source, { sourceMap = true, filename = DEFAULT_FILENAME, sourceRoot = '', pad = false, ignoreEmpty = true, compiler = CompilerDOM } = {}) {\r\n    const sourceKey = source + sourceMap + filename + sourceRoot + pad + compiler.parse;\r\n    const cache = sourceToSFC.get(sourceKey);\r\n    if (cache) {\r\n        return cache;\r\n    }\r\n    const descriptor = {\r\n        filename,\r\n        source,\r\n        template: null,\r\n        script: null,\r\n        scriptSetup: null,\r\n        styles: [],\r\n        customBlocks: [],\r\n        cssVars: [],\r\n        slotted: false,\r\n        shouldForceReload: prevImports => hmrShouldReload(prevImports, descriptor)\r\n    };\r\n    const errors = [];\r\n    const ast = compiler.parse(source, {\r\n        // there are no components at SFC parsing level\r\n        isNativeTag: () => true,\r\n        // preserve all whitespaces\r\n        isPreTag: () => true,\r\n        getTextMode: ({ tag, props }, parent) => {\r\n            // all top level elements except <template> are parsed as raw text\r\n            // containers\r\n            if ((!parent && tag !== 'template') ||\r\n                // <template lang=\"xxx\"> should also be treated as raw text\r\n                (tag === 'template' &&\r\n                    props.some(p => p.type === 6 /* ATTRIBUTE */ &&\r\n                        p.name === 'lang' &&\r\n                        p.value &&\r\n                        p.value.content &&\r\n                        p.value.content !== 'html'))) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n            else {\r\n                return 0 /* DATA */;\r\n            }\r\n        },\r\n        onError: e => {\r\n            errors.push(e);\r\n        }\r\n    });\r\n    ast.children.forEach(node => {\r\n        if (node.type !== 1 /* ELEMENT */) {\r\n            return;\r\n        }\r\n        // we only want to keep the nodes that are not empty (when the tag is not a template)\r\n        if (ignoreEmpty &&\r\n            node.tag !== 'template' &&\r\n            isEmpty(node) &&\r\n            !hasSrc(node)) {\r\n            return;\r\n        }\r\n        switch (node.tag) {\r\n            case 'template':\r\n                if (!descriptor.template) {\r\n                    const templateBlock = (descriptor.template = createBlock(node, source, false));\r\n                    templateBlock.ast = node;\r\n                    // warn against 2.x <template functional>\r\n                    if (templateBlock.attrs.functional) {\r\n                        const err = new SyntaxError(`<template functional> is no longer supported in Vue 3, since ` +\r\n                            `functional components no longer have significant performance ` +\r\n                            `difference from stateful ones. Just use a normal <template> ` +\r\n                            `instead.`);\r\n                        err.loc = node.props.find(p => p.name === 'functional').loc;\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n                else {\r\n                    errors.push(createDuplicateBlockError(node));\r\n                }\r\n                break;\r\n            case 'script':\r\n                const scriptBlock = createBlock(node, source, pad);\r\n                const isSetup = !!scriptBlock.attrs.setup;\r\n                if (isSetup && !descriptor.scriptSetup) {\r\n                    descriptor.scriptSetup = scriptBlock;\r\n                    break;\r\n                }\r\n                if (!isSetup && !descriptor.script) {\r\n                    descriptor.script = scriptBlock;\r\n                    break;\r\n                }\r\n                errors.push(createDuplicateBlockError(node, isSetup));\r\n                break;\r\n            case 'style':\r\n                const styleBlock = createBlock(node, source, pad);\r\n                if (styleBlock.attrs.vars) {\r\n                    errors.push(new SyntaxError(`<style vars> has been replaced by a new proposal: ` +\r\n                        `https://github.com/vuejs/rfcs/pull/231`));\r\n                }\r\n                descriptor.styles.push(styleBlock);\r\n                break;\r\n            default:\r\n                descriptor.customBlocks.push(createBlock(node, source, pad));\r\n                break;\r\n        }\r\n    });\r\n    if (descriptor.scriptSetup) {\r\n        if (descriptor.scriptSetup.src) {\r\n            errors.push(new SyntaxError(`<script setup> cannot use the \"src\" attribute because ` +\r\n                `its syntax will be ambiguous outside of the component.`));\r\n            descriptor.scriptSetup = null;\r\n        }\r\n        if (descriptor.script && descriptor.script.src) {\r\n            errors.push(new SyntaxError(`<script> cannot use the \"src\" attribute when <script setup> is ` +\r\n                `also present because they must be processed together.`));\r\n            descriptor.script = null;\r\n        }\r\n    }\r\n    if (sourceMap) {\r\n        const genMap = (block) => {\r\n            if (block && !block.src) {\r\n                block.map = generateSourceMap(filename, source, block.content, sourceRoot, !pad || block.type === 'template' ? block.loc.start.line - 1 : 0);\r\n            }\r\n        };\r\n        genMap(descriptor.template);\r\n        genMap(descriptor.script);\r\n        descriptor.styles.forEach(genMap);\r\n        descriptor.customBlocks.forEach(genMap);\r\n    }\r\n    // parse CSS vars\r\n    descriptor.cssVars = parseCssVars(descriptor);\r\n    // check if the SFC uses :slotted\r\n    const slottedRE = /(?:::v-|:)slotted\\(/;\r\n    descriptor.slotted = descriptor.styles.some(s => s.scoped && slottedRE.test(s.content));\r\n    const result = {\r\n        descriptor,\r\n        errors\r\n    };\r\n    sourceToSFC.set(sourceKey, result);\r\n    return result;\r\n}\r\nfunction createDuplicateBlockError(node, isScriptSetup = false) {\r\n    const err = new SyntaxError(`Single file component can contain only one <${node.tag}${isScriptSetup ? ` setup` : ``}> element`);\r\n    err.loc = node.loc;\r\n    return err;\r\n}\r\nfunction createBlock(node, source, pad) {\r\n    const type = node.tag;\r\n    let { start, end } = node.loc;\r\n    let content = '';\r\n    if (node.children.length) {\r\n        start = node.children[0].loc.start;\r\n        end = node.children[node.children.length - 1].loc.end;\r\n        content = source.slice(start.offset, end.offset);\r\n    }\r\n    else {\r\n        const offset = node.loc.source.indexOf(`</`);\r\n        if (offset > -1) {\r\n            start = {\r\n                line: start.line,\r\n                column: start.column + offset,\r\n                offset: start.offset + offset\r\n            };\r\n        }\r\n        end = Object.assign({}, start);\r\n    }\r\n    const loc = {\r\n        source: content,\r\n        start,\r\n        end\r\n    };\r\n    const attrs = {};\r\n    const block = {\r\n        type,\r\n        content,\r\n        loc,\r\n        attrs\r\n    };\r\n    if (pad) {\r\n        block.content = padContent(source, block, pad) + block.content;\r\n    }\r\n    node.props.forEach(p => {\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            attrs[p.name] = p.value ? p.value.content || true : true;\r\n            if (p.name === 'lang') {\r\n                block.lang = p.value && p.value.content;\r\n            }\r\n            else if (p.name === 'src') {\r\n                block.src = p.value && p.value.content;\r\n            }\r\n            else if (type === 'style') {\r\n                if (p.name === 'scoped') {\r\n                    block.scoped = true;\r\n                }\r\n                else if (p.name === 'module') {\r\n                    block.module = attrs[p.name];\r\n                }\r\n            }\r\n            else if (type === 'script' && p.name === 'setup') {\r\n                block.setup = attrs.setup;\r\n            }\r\n        }\r\n    });\r\n    return block;\r\n}\r\nconst splitRE = /\\r?\\n/g;\r\nconst emptyRE = /^(?:\\/\\/)?\\s*$/;\r\nconst replaceRE = /./g;\r\nfunction generateSourceMap(filename, source, generated, sourceRoot, lineOffset) {\r\n    const map = new SourceMapGenerator$2({\r\n        file: filename.replace(/\\\\/g, '/'),\r\n        sourceRoot: sourceRoot.replace(/\\\\/g, '/')\r\n    });\r\n    map.setSourceContent(filename, source);\r\n    generated.split(splitRE).forEach((line, index) => {\r\n        if (!emptyRE.test(line)) {\r\n            const originalLine = index + 1 + lineOffset;\r\n            const generatedLine = index + 1;\r\n            for (let i = 0; i < line.length; i++) {\r\n                if (!/\\s/.test(line[i])) {\r\n                    map.addMapping({\r\n                        source: filename,\r\n                        original: {\r\n                            line: originalLine,\r\n                            column: i\r\n                        },\r\n                        generated: {\r\n                            line: generatedLine,\r\n                            column: i\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return JSON.parse(map.toString());\r\n}\r\nfunction padContent(content, block, pad) {\r\n    content = content.slice(0, block.loc.start.offset);\r\n    if (pad === 'space') {\r\n        return content.replace(replaceRE, ' ');\r\n    }\r\n    else {\r\n        const offset = content.split(splitRE).length;\r\n        const padChar = block.type === 'script' && !block.lang ? '//\\n' : '\\n';\r\n        return Array(offset).join(padChar);\r\n    }\r\n}\r\nfunction hasSrc(node) {\r\n    return node.props.some(p => {\r\n        if (p.type !== 6 /* ATTRIBUTE */) {\r\n            return false;\r\n        }\r\n        return p.name === 'src';\r\n    });\r\n}\r\n/**\r\n * Returns true if the node has no children\r\n * once the empty text nodes (trimmed content) have been filtered out.\r\n */\r\nfunction isEmpty(node) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (child.type !== 2 /* TEXT */ || child.content.trim() !== '') {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n// MIT lisence\n// from https://github.com/substack/tty-browserify/blob/1ba769a6429d242f36226538835b4034bf6b7886/index.js\n\nfunction isatty() {\n  return false;\n}\n\nfunction ReadStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\n\nfunction WriteStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\n\nvar _polyfillNode_tty = {\n  isatty: isatty,\n  ReadStream: ReadStream,\n  WriteStream: WriteStream\n};\n\nvar _polyfillNode_tty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isatty: isatty,\n  ReadStream: ReadStream,\n  WriteStream: WriteStream,\n  'default': _polyfillNode_tty\n});\n\nvar tty = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_tty$1);\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in ({}) || browser$1.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in ({}) ||\n\t\tbrowser$1.argv.includes(\"--color\") ||\n\t\t\"\" === \"win32\" ||\n\t\t(tty.isatty(1) && ({}).TERM !== \"dumb\") ||\n\t\t\"CI\" in ({}));\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input;\n\t\tlet index = string.indexOf(close, open.length);\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t};\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace;\n\tlet end = string.substring(index + close.length);\n\tlet nextIndex = end.indexOf(close);\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n};\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n});\n\nvar picocolors = createColors();\nvar createColors_1 = createColors;\npicocolors.createColors = createColors_1;\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\nconst BACKSLASH = '\\\\'.charCodeAt(0);\nconst SLASH = '/'.charCodeAt(0);\nconst NEWLINE = '\\n'.charCodeAt(0);\nconst SPACE = ' '.charCodeAt(0);\nconst FEED = '\\f'.charCodeAt(0);\nconst TAB = '\\t'.charCodeAt(0);\nconst CR = '\\r'.charCodeAt(0);\nconst OPEN_SQUARE = '['.charCodeAt(0);\nconst CLOSE_SQUARE = ']'.charCodeAt(0);\nconst OPEN_PARENTHESES = '('.charCodeAt(0);\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\nconst OPEN_CURLY = '{'.charCodeAt(0);\nconst CLOSE_CURLY = '}'.charCodeAt(0);\nconst SEMICOLON = ';'.charCodeAt(0);\nconst ASTERISK = '*'.charCodeAt(0);\nconst COLON = ':'.charCodeAt(0);\nconst AT = '@'.charCodeAt(0);\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/;\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\n\nvar tokenize = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf();\n  let ignore = options.ignoreErrors;\n\n  let code, next, quote, content, escape;\n  let escaped, escapePos, prev, n, currentToken;\n\n  let length = css.length;\n  let pos = 0;\n  let buffer = [];\n  let returned = [];\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n\n    code = css.charCodeAt(pos);\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)];\n        pos = next - 1;\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, pos];\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : '';\n        n = css.charCodeAt(pos + 1);\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos;\n          do {\n            escaped = false;\n            next = css.indexOf(')', next + 1);\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break\n              } else {\n                unclosed('bracket');\n              }\n            }\n            escapePos = next;\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\n\n          pos = next;\n        } else {\n          next = css.indexOf(')', pos + 1);\n          content = css.slice(pos, next + 1);\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos];\n          } else {\n            currentToken = ['brackets', content, pos, next];\n            pos = next;\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n        next = pos;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break\n            } else {\n              unclosed('string');\n            }\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\n\n        pos = next;\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos;\n        escape = true;\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n        code = css.charCodeAt(next + 1);\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1;\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\n        pos = next;\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1;\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed('comment');\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next];\n          buffer.push(currentToken);\n          pos = next;\n        }\n\n        break\n      }\n    }\n\n    pos++;\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token);\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n};\n\nlet Input;\n\nfunction registerInput(dependant) {\n  Input = dependant;\n}\n\nconst HIGHLIGHT_THEME = {\n  'brackets': picocolors.cyan,\n  'at-word': picocolors.cyan,\n  'comment': picocolors.gray,\n  'string': picocolors.green,\n  'class': picocolors.yellow,\n  'hash': picocolors.magenta,\n  'call': picocolors.cyan,\n  '(': picocolors.cyan,\n  ')': picocolors.cyan,\n  '{': picocolors.yellow,\n  '}': picocolors.yellow,\n  '[': picocolors.yellow,\n  ']': picocolors.yellow,\n  ':': picocolors.yellow,\n  ';': picocolors.yellow\n};\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken();\n    processor.back(next);\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenize(new Input(css), { ignoreErrors: true });\n  let result = '';\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken();\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n');\n    } else {\n      result += token[1];\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput;\n\nvar terminalHighlight_1 = terminalHighlight;\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message);\n    this.name = 'CssSyntaxError';\n    this.reason = message;\n\n    if (file) {\n      this.file = file;\n    }\n    if (source) {\n      this.source = source;\n    }\n    if (plugin) {\n      this.plugin = plugin;\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line;\n        this.column = column;\n      } else {\n        this.line = line.line;\n        this.column = line.column;\n        this.endLine = column.line;\n        this.endColumn = column.column;\n      }\n    }\n\n    this.setMessage();\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError);\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : '';\n    this.message += this.file ? this.file : '<css input>';\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column;\n    }\n    this.message += ': ' + this.reason;\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source;\n    if (color == null) color = picocolors.isColorSupported;\n    if (terminalHighlight_1) {\n      if (color) css = terminalHighlight_1(css);\n    }\n\n    let lines = css.split(/\\r?\\n/);\n    let start = Math.max(this.line - 3, 0);\n    let end = Math.min(this.line + 2, lines.length);\n\n    let maxWidth = String(end).length;\n\n    let mark, aside;\n    if (color) {\n      let { bold, red, gray } = picocolors.createColors(true);\n      mark = text => bold(red(text));\n      aside = text => gray(text);\n    } else {\n      mark = aside = str => str;\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index;\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode();\n    if (code) {\n      code = '\\n\\n' + code + '\\n';\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nvar cssSyntaxError = CssSyntaxError;\nCssSyntaxError.default = CssSyntaxError;\n\nvar isClean = Symbol('isClean');\n\nvar my = Symbol('my');\n\nvar symbols = {\n\tisClean: isClean,\n\tmy: my\n};\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n};\n\nfunction capitalize$1(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon);\n  }\n\n  document(node) {\n    this.body(node);\n  }\n\n  root(node) {\n    this.body(node);\n    if (node.raws.after) this.builder(node.raws.after);\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft');\n    let right = this.raw(node, 'right', 'commentRight');\n    this.builder('/*' + left + node.text + right + '*/', node);\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon');\n    let string = node.prop + between + this.rawValue(node, 'value');\n\n    if (node.important) {\n      string += node.raws.important || ' !important';\n    }\n\n    if (semicolon) string += ';';\n    this.builder(string, node);\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'));\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end');\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name;\n    let params = node.params ? this.rawValue(node, 'params') : '';\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName;\n    } else if (params) {\n      name += ' ';\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params);\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '');\n      this.builder(name + params + end, node);\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1;\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1;\n    }\n\n    let semicolon = this.raw(node, 'semicolon');\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n      let before = this.raw(child, 'before');\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen');\n    this.builder(start + between + '{', node, 'start');\n\n    let after;\n    if (node.nodes && node.nodes.length) {\n      this.body(node);\n      after = this.raw(node, 'after');\n    } else {\n      after = this.raw(node, 'after', 'emptyBody');\n    }\n\n    if (after) this.builder(after);\n    this.builder('}', node, 'end');\n  }\n\n  raw(node, own, detect) {\n    let value;\n    if (!detect) detect = own;\n\n    // Already had\n    if (own) {\n      value = node.raws[own];\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent;\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root();\n    if (!root.rawCache) root.rawCache = {};\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize$1(detect);\n      if (this[method]) {\n        value = this[method](root, node);\n      } else {\n        root.walk(i => {\n          value = i.raws[own];\n          if (typeof value !== 'undefined') return false\n        });\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n\n    root.rawCache[detect] = value;\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value;\n    root.walk(i => {\n      let p = i.parent;\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n');\n          value = parts[parts.length - 1];\n          value = value.replace(/\\S/g, '');\n          return false\n        }\n      }\n    });\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value;\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n        return false\n      }\n    });\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (value) {\n      value = value.replace(/\\S/g, '');\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value;\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n        return false\n      }\n    });\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule');\n    } else if (value) {\n      value = value.replace(/\\S/g, '');\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, '');\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, '');\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value;\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawColon(root) {\n    let value;\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '');\n        return false\n      }\n    });\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value;\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment');\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule');\n    } else {\n      value = this.raw(node, null, 'beforeClose');\n    }\n\n    let buf = node.parent;\n    let depth = 0;\n    while (buf && buf.type !== 'root') {\n      depth += 1;\n      buf = buf.parent;\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent');\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent;\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop];\n    let raw = node.raws[prop];\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nvar stringifier = Stringifier;\nStringifier.default = Stringifier;\n\nfunction stringify$1(node, builder) {\n  let str = new stringifier(builder);\n  str.stringify(node);\n}\n\nvar stringify_1 = stringify$1;\nstringify$1.default = stringify$1;\n\nlet { isClean: isClean$1, my: my$1 } = symbols;\n\n\n\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i];\n    let type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned));\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned\n}\n\nclass Node$1 {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean$1] = false;\n    this[my$1] = true;\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = [];\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone());\n          } else {\n            this.append(node);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts);\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new cssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this };\n    for (let i in opts) data[i] = opts[i];\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this\n  }\n\n  toString(stringifier = stringify_1) {\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    let result = '';\n    stringifier(this, i => {\n      result += i;\n    });\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node);\n          bookmark = node;\n        } else {\n          this.parent.insertBefore(bookmark, node);\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this);\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this);\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this\n  }\n\n  root() {\n    let result = this;\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent;\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new stringifier();\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || new Map();\n    let inputsNextIndex = 0;\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name];\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input);\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString();\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start;\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index);\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    };\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        };\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word);\n      if (index !== -1) {\n        start = this.positionInside(index);\n        end = this.positionInside(index + opts.word.length);\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        };\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 };\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value;\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty();\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this;\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      );\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean$1]) {\n      this[isClean$1] = false;\n      let next = this;\n      while ((next = next.parent)) {\n        next[isClean$1] = false;\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nvar node_1 = Node$1;\nNode$1.default = Node$1;\n\nclass Declaration extends node_1 {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) };\n    }\n    super(defaults);\n    this.type = 'decl';\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nvar declaration = Declaration;\nDeclaration.default = Declaration;\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nvar encode$4 = function (number) {\n  if (0 <= number && number < intToCharMap$1.length) {\n    return intToCharMap$1[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nvar decode$2 = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\nvar base64$1 = {\n\tencode: encode$4,\n\tdecode: decode$2\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT$1 = 5;\n\n// binary: 100000\nvar VLQ_BASE$1 = 1 << VLQ_BASE_SHIFT$1;\n\n// binary: 011111\nvar VLQ_BASE_MASK$1 = VLQ_BASE$1 - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT$1 = VLQ_BASE$1;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned$1(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned$1(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nvar encode$5 = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned$1(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK$1;\n    vlq >>>= VLQ_BASE_SHIFT$1;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT$1;\n    }\n    encoded += base64$1.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nvar decode$3 = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64$1.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT$1);\n    digit &= VLQ_BASE_MASK$1;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT$1;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned$1(result);\n  aOutParam.rest = aIndex;\n};\n\nvar base64Vlq$1 = {\n\tencode: encode$5,\n\tdecode: decode$3\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\nvar util$1 = createCommonjsModule(function (module, exports) {\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp;\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n});\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\nvar has$1 = Object.prototype.hasOwnProperty;\nvar hasNativeMap$1 = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet$3() {\n  this._array = [];\n  this._set = hasNativeMap$1 ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet$3.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet$3();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet$3.prototype.size = function ArraySet_size() {\n  return hasNativeMap$1 ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet$3.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap$1 ? aStr : util$1.toSetString(aStr);\n  var isDuplicate = hasNativeMap$1 ? this.has(aStr) : has$1.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap$1) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet$3.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap$1) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util$1.toSetString(aStr);\n    return has$1.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet$3.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap$1) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util$1.toSetString(aStr);\n    if (has$1.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet$3.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet$3.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nvar ArraySet_1$1 = ArraySet$3;\n\nvar arraySet$1 = {\n\tArraySet: ArraySet_1$1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter$1(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util$1.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList$2() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList$2.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList$2.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter$1(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList$2.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util$1.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nvar MappingList_1$1 = MappingList$2;\n\nvar mappingList$1 = {\n\tMappingList: MappingList_1$1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\nvar ArraySet$4 = arraySet$1.ArraySet;\nvar MappingList$3 = mappingList$1.MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator$3(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util$1.getArg(aArgs, 'file', null);\n  this._sourceRoot = util$1.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util$1.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet$4();\n  this._names = new ArraySet$4();\n  this._mappings = new MappingList$3();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator$3.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator$3.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator$3({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util$1.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util$1.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator$3.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util$1.getArg(aArgs, 'generated');\n    var original = util$1.getArg(aArgs, 'original', null);\n    var source = util$1.getArg(aArgs, 'source', null);\n    var name = util$1.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator$3.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util$1.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util$1.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util$1.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator$3.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util$1.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet$4();\n    var newNames = new ArraySet$4();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util$1.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util$1.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util$1.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util$1.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator$3.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator$3.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = '';\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util$1.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64Vlq$1.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64Vlq$1.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64Vlq$1.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64Vlq$1.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64Vlq$1.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator$3.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util$1.relative(aSourceRoot, source);\n      }\n      var key = util$1.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator$3.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator$3.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nvar SourceMapGenerator_1$1 = SourceMapGenerator$3;\n\nvar sourceMapGenerator$1 = {\n\tSourceMapGenerator: SourceMapGenerator_1$1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\nvar binarySearch$1 = createCommonjsModule(function (module, exports) {\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n});\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nvar quickSort_1$1 = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n\nvar quickSort$2 = {\n\tquickSort: quickSort_1$1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\n\nvar ArraySet$5 = arraySet$1.ArraySet;\n\nvar quickSort$3 = quickSort$2.quickSort;\n\nfunction SourceMapConsumer$2(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer$1(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer$1(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer$2.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer$1.fromSourceMap(aSourceMap, aSourceMapURL);\n};\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer$2.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer$2.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer$2.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer$2.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer$2.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer$2.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer$2.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer$2.GENERATED_ORDER = 1;\nSourceMapConsumer$2.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer$2.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer$2.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer$2.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer$2.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer$2.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer$2.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util$1.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer$2.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util$1.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util$1.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util$1.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util$1.compareByOriginalPositions,\n                                  binarySearch$1.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util$1.getArg(mapping, 'generatedLine', null),\n            column: util$1.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util$1.getArg(mapping, 'generatedLine', null),\n            column: util$1.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nvar SourceMapConsumer_1$1 = SourceMapConsumer$2;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$1.getArg(sourceMap, 'version');\n  var sources = util$1.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util$1.getArg(sourceMap, 'names', []);\n  var sourceRoot = util$1.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util$1.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util$1.getArg(sourceMap, 'mappings');\n  var file = util$1.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util$1.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util$1.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util$1.isAbsolute(sourceRoot) && util$1.isAbsolute(source)\n        ? util$1.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet$5.fromArray(names.map(String), true);\n  this._sources = ArraySet$5.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util$1.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$2.prototype);\nBasicSourceMapConsumer$1.prototype.consumer = SourceMapConsumer$2;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer$1.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util$1.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer$1.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer$1.prototype);\n\n    var names = smc._names = ArraySet$5.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet$5.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util$1.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping$1;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort$3(smc.__originalMappings, util$1.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer$1.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer$1.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping$1() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util$1.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort$3(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer$1.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping$1();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64Vlq$1.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort$3(originalMappings[i], util$1.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer$1.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch$1.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer$1.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer$1.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$1.getArg(aArgs, 'line'),\n      generatedColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util$1.compareByGeneratedPositionsDeflated,\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$2.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util$1.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util$1.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util$1.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util$1.getArg(mapping, 'originalLine', null),\n          column: util$1.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer$1.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer$1.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util$1.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util$1.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer$1.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util$1.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util$1.getArg(aArgs, 'line'),\n      originalColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util$1.compareByOriginalPositions,\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$2.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util$1.getArg(mapping, 'generatedLine', null),\n          column: util$1.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nvar BasicSourceMapConsumer_1$1 = BasicSourceMapConsumer$1;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$1.getArg(sourceMap, 'version');\n  var sections = util$1.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet$5();\n  this._names = new ArraySet$5();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util$1.getArg(s, 'offset');\n    var offsetLine = util$1.getArg(offset, 'line');\n    var offsetColumn = util$1.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer$2(util$1.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$2.prototype);\nIndexedSourceMapConsumer$1.prototype.constructor = SourceMapConsumer$2;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer$1.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer$1.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer$1.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$1.getArg(aArgs, 'line'),\n      generatedColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch$1.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer$1.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer$1.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer$1.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util$1.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer$1.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util$1.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort$3(this.__generatedMappings, util$1.compareByGeneratedPositionsDeflated);\n    quickSort$3(this.__originalMappings, util$1.compareByOriginalPositions);\n  };\n\nvar IndexedSourceMapConsumer_1$1 = IndexedSourceMapConsumer$1;\n\nvar sourceMapConsumer$1 = {\n\tSourceMapConsumer: SourceMapConsumer_1$1,\n\tBasicSourceMapConsumer: BasicSourceMapConsumer_1$1,\n\tIndexedSourceMapConsumer: IndexedSourceMapConsumer_1$1\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$4 = sourceMapGenerator$1.SourceMapGenerator;\n\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE$1 = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE$1 = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode$1 = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode$2(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode$1] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode$2.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode$2();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE$1);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util$1.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util$1.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode$2(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode$2.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode$2.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode$2.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode$1]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode$2.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode$2.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode$1]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode$2.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util$1.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode$2.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode$1]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util$1.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode$2.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode$2.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator$4(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE$1) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nvar SourceNode_1$1 = SourceNode$2;\n\nvar sourceNode$1 = {\n\tSourceNode: SourceNode_1$1\n};\n\n/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$5 = sourceMapGenerator$1.SourceMapGenerator;\nvar SourceMapConsumer$3 = sourceMapConsumer$1.SourceMapConsumer;\nvar SourceNode$3 = sourceNode$1.SourceNode;\n\nvar sourceMap$1 = {\n\tSourceMapGenerator: SourceMapGenerator$5,\n\tSourceMapConsumer: SourceMapConsumer$3,\n\tSourceNode: SourceNode$3\n};\n\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = '';\n    let i = size;\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0];\n    }\n    return id\n  }\n};\nlet nanoid = (size = 21) => {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id\n};\nvar nonSecure = { nanoid, customAlphabet };\n\nlet { SourceMapConsumer: SourceMapConsumer$4, SourceMapGenerator: SourceMapGenerator$6 } = sourceMap$1;\nlet { existsSync, readFileSync } = _fs;\nlet { dirname: dirname$1, join: join$1 } = _path;\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, 'data:');\n\n    let prev = opts.map ? opts.map.prev : undefined;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\n    if (text) this.text = text;\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer$4(this.text);\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf('*/', start);\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname$1(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer$4) {\n        return SourceMapGenerator$6.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator$6) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join$1(dirname$1(file), map);\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nvar previousMap = PreviousMap;\nPreviousMap.default = PreviousMap;\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_url$1);\n\nlet { SourceMapConsumer: SourceMapConsumer$5, SourceMapGenerator: SourceMapGenerator$7 } = sourceMap$1;\nlet { fileURLToPath, pathToFileURL } = require$$2;\nlet { resolve: resolve$1, isAbsolute: isAbsolute$1 } = _path;\nlet { nanoid: nanoid$1 } = nonSecure;\n\n\n\n\n\nlet fromOffsetCache = Symbol('fromOffsetCache');\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer$5 && SourceMapGenerator$7);\nlet pathAvailable = Boolean(resolve$1 && isAbsolute$1);\n\nclass Input$1 {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString();\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute$1(opts.from)\n      ) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve$1(opts.from);\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new previousMap(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid$1(6) + '>';\n    }\n    if (this.map) this.map.file = this.from;\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n');\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + ((max - min) >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn;\n\n    if (line && typeof line === 'object') {\n      let start = line;\n      let end = column;\n      if (typeof line.offset === 'number') {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result = new cssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      );\n    } else {\n      result = new cssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      );\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css };\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString();\n      }\n      result.input.file = this.file;\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer();\n\n    let from = consumer.originalPositionFor({ line, column });\n    if (!from.source) return false\n\n    let to;\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn });\n    }\n\n    let fromUrl;\n\n    if (isAbsolute$1(from.source)) {\n      fromUrl = pathToFileURL(from.source);\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      );\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    };\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl);\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {};\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined;\n      }\n    }\n    return json\n  }\n}\n\nvar input = Input$1;\nInput$1.default = Input$1;\n\nif (terminalHighlight_1 && terminalHighlight_1.registerInput) {\n  terminalHighlight_1.registerInput(Input$1);\n}\n\nlet { SourceMapConsumer: SourceMapConsumer$6, SourceMapGenerator: SourceMapGenerator$8 } = sourceMap$1;\nlet { dirname: dirname$2, resolve: resolve$2, relative: relative$1, sep: sep$1 } = _path;\nlet { pathToFileURL: pathToFileURL$1 } = require$$2;\n\n\n\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$6 && SourceMapGenerator$8);\nlet pathAvailable$1 = Boolean(dirname$2 && resolve$2 && relative$1 && sep$1);\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input$1 = new input(this.css, this.opts);\n        if (input$1.map) this.previousMaps.push(input$1.map);\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i];\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n    }\n  }\n\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            this.map.setSourceContent(\n              this.toUrl(this.path(from)),\n              node.source.input.css\n            );\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>';\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root = prev.root || dirname$2(prev.file);\n      let map;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer$6(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null);\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content;\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + '.map';\n    }\n    let eol = '\\n';\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator$8.fromSourceMap(prev);\n    } else {\n      this.map = new SourceMapGenerator$8({ file: this.outputFile() });\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      });\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname$2(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname$2(resolve$2(from, this.mapOpts.annotation));\n    }\n\n    file = relative$1(from, file);\n    return file\n  }\n\n  toUrl(path) {\n    if (sep$1 === '\\\\') {\n      path = path.replace(/\\\\/g, '/');\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL$1) {\n        return pathToFileURL$1(node.source.input.from).toString()\n      } else {\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = '';\n    this.map = new SourceMapGenerator$8({ file: this.outputFile() });\n\n    let line = 1;\n    let column = 1;\n\n    let noSource = '<no source>';\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    };\n\n    let lines, last;\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str;\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node);\n          mapping.original.line = node.source.start.line;\n          mapping.original.column = node.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} };\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.end.line;\n            mapping.original.column = node.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable$1 && sourceMapAvailable$1 && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = '';\n      this.stringify(this.root, i => {\n        result += i;\n      });\n      return [result]\n    }\n  }\n}\n\nvar mapGenerator = MapGenerator;\n\nclass Comment extends node_1 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'comment';\n  }\n}\n\nvar comment = Comment;\nComment.default = Comment;\n\nlet { isClean: isClean$2, my: my$2 } = symbols;\n\n\n\n\nlet parse$5, Rule, AtRule;\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean$2] = false;\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i);\n    }\n  }\n}\n\nclass Container extends node_1 {\n  push(child) {\n    child.parent = this;\n    this.proxyOf.nodes.push(child);\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator();\n\n    let index, result;\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator];\n      result = callback(this.proxyOf.nodes[index], index);\n      if (result === false) break\n\n      this.indexes[iterator] += 1;\n    }\n\n    delete this.indexes[iterator];\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result;\n      try {\n        result = callback(child, i);\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback);\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last);\n      for (let node of nodes) this.proxyOf.nodes.push(node);\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse();\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse();\n      for (let node of nodes) this.proxyOf.nodes.unshift(node);\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween);\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween);\n    }\n  }\n\n  insertBefore(exist, add) {\n    exist = this.index(exist);\n\n    let type = exist === 0 ? 'prepend' : false;\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse();\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    exist = this.index(exist);\n\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse();\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child);\n    this.proxyOf.nodes[child].parent = undefined;\n    this.proxyOf.nodes.splice(child, 1);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined;\n    this.proxyOf.nodes = [];\n\n    this.markDirty();\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback);\n    });\n\n    this.markDirty();\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf;\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse$5(nodes).nodes);\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value);\n      }\n      nodes = [new declaration(nodes)];\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)];\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)];\n    } else if (nodes.text) {\n      nodes = [new comment(nodes)];\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my$2]) Container.rebuild(i);\n      i = i.proxyOf;\n      if (i.parent) i.parent.removeChild(i);\n      if (i[isClean$2]) markDirtyUp(i);\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '');\n        }\n      }\n      i.parent = this;\n      return i\n    });\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value;\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty();\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n\n    this.lastEach += 1;\n    let iterator = this.lastEach;\n    this.indexes[iterator] = 0;\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse$5 = dependant;\n};\n\nContainer.registerRule = dependant => {\n  Rule = dependant;\n};\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant;\n};\n\nvar container = Container;\nContainer.default = Container;\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype);\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype);\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, declaration.prototype);\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, comment.prototype);\n  }\n\n  node[my$2] = true;\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child);\n    });\n  }\n};\n\nlet LazyResult, Processor;\n\nclass Document extends container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults });\n\n    if (!this.nodes) {\n      this.nodes = [];\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts);\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant;\n};\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant;\n};\n\nvar document = Document;\nDocument.default = Document;\n\n/* eslint-disable no-console */\n\nlet printed = {};\n\nvar warnOnce$2 = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true;\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message);\n  }\n};\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning';\n    this.text = text;\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts);\n      this.line = range.start.line;\n      this.column = range.start.column;\n      this.endLine = range.end.line;\n      this.endColumn = range.end.column;\n    }\n\n    for (let opt in opts) this[opt] = opts[opt];\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nvar warning = Warning;\nWarning.default = Warning;\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor;\n    this.messages = [];\n    this.root = root;\n    this.opts = opts;\n    this.css = undefined;\n    this.map = undefined;\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    let warning$1 = new warning(text, opts);\n    this.messages.push(warning$1);\n\n    return warning$1\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nvar result = Result;\nResult.default = Result;\n\nclass AtRule$1 extends container {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'atrule';\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.prepend(...children)\n  }\n}\n\nvar atRule = AtRule$1;\nAtRule$1.default = AtRule$1;\n\ncontainer.registerAtRule(AtRule$1);\n\nlet LazyResult$1, Processor$1;\n\nclass Root extends container {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'root';\n    if (!this.nodes) this.nodes = [];\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child);\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult$1(new Processor$1(), this, opts);\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult$1 = dependant;\n};\n\nRoot.registerProcessor = dependant => {\n  Processor$1 = dependant;\n};\n\nvar root = Root;\nRoot.default = Root;\n\nlet list = {\n  split(string, separators, last) {\n    let array = [];\n    let current = '';\n    let split = false;\n\n    let func = 0;\n    let quote = false;\n    let escape = false;\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === '\\\\') {\n        escape = true;\n      } else if (quote) {\n        if (letter === quote) {\n          quote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        quote = letter;\n      } else if (letter === '(') {\n        func += 1;\n      } else if (letter === ')') {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim());\n        current = '';\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim());\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t'];\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n};\n\nvar list_1 = list;\nlist.default = list;\n\nclass Rule$1 extends container {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'rule';\n    if (!this.nodes) this.nodes = [];\n  }\n\n  get selectors() {\n    return list_1.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n    this.selector = values.join(sep);\n  }\n}\n\nvar rule = Rule$1;\nRule$1.default = Rule$1;\n\ncontainer.registerRule(Rule$1);\n\nclass Parser$1 {\n  constructor(input) {\n    this.input = input;\n\n    this.root = new root();\n    this.current = this.root;\n    this.spaces = '';\n    this.semicolon = false;\n    this.customProperty = false;\n\n    this.createTokenizer();\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenize(this.input);\n  }\n\n  parse() {\n    let token;\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1];\n          break\n\n        case ';':\n          this.freeSemicolon(token);\n          break\n\n        case '}':\n          this.end(token);\n          break\n\n        case 'comment':\n          this.comment(token);\n          break\n\n        case 'at-word':\n          this.atrule(token);\n          break\n\n        case '{':\n          this.emptyRule(token);\n          break\n\n        default:\n          this.other(token);\n          break\n      }\n    }\n    this.endFile();\n  }\n\n  comment(token) {\n    let node = new comment();\n    this.init(node, token[2]);\n    node.source.end = this.getPosition(token[3] || token[2]);\n\n    let text = token[1].slice(2, -2);\n    if (/^\\s*$/.test(text)) {\n      node.text = '';\n      node.raws.left = text;\n      node.raws.right = '';\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n      node.text = match[2];\n      node.raws.left = match[1];\n      node.raws.right = match[3];\n    }\n  }\n\n  emptyRule(token) {\n    let node = new rule();\n    this.init(node, token[2]);\n    node.selector = '';\n    node.raws.between = '';\n    this.current = node;\n  }\n\n  other(start) {\n    let end = false;\n    let type = null;\n    let colon = false;\n    let bracket = null;\n    let brackets = [];\n    let customProperty = start[1].startsWith('--');\n\n    let tokens = [];\n    let token = start;\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token;\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token;\n        brackets.push('}');\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty);\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens);\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break\n        } else if (type === ':') {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n\n      token = this.tokenizer.nextToken();\n    }\n\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0];\n        if (token !== 'space' && token !== 'comment') break\n        this.tokenizer.back(tokens.pop());\n      }\n      this.decl(tokens, customProperty);\n    } else {\n      this.unknownWord(tokens);\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop();\n\n    let node = new rule();\n    this.init(node, tokens[0][2]);\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node, 'selector', tokens);\n    this.current = node;\n  }\n\n  decl(tokens, customProperty) {\n    let node = new declaration();\n    this.init(node, tokens[0][2]);\n\n    let last = tokens[tokens.length - 1];\n    if (last[0] === ';') {\n      this.semicolon = true;\n      tokens.pop();\n    }\n    node.source.end = this.getPosition(last[3] || last[2]);\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node.raws.before += tokens.shift()[1];\n    }\n    node.source.start = this.getPosition(tokens[0][2]);\n\n    node.prop = '';\n    while (tokens.length) {\n      let type = tokens[0][0];\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1];\n    }\n\n    node.raws.between = '';\n\n    let token;\n    while (tokens.length) {\n      token = tokens.shift();\n\n      if (token[0] === ':') {\n        node.raws.between += token[1];\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n        node.raws.between += token[1];\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0];\n      node.prop = node.prop.slice(1);\n    }\n    let firstSpaces = this.spacesAndCommentsFromStart(tokens);\n    this.precheckMissedSemicolon(tokens);\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true;\n        let string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== ' !important') node.raws.important = string;\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0);\n        let str = '';\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0];\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str;\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true;\n          node.raws.important = str;\n          tokens = cache;\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\n    this.raw(node, 'value', tokens);\n    if (hasWord) {\n      node.raws.between += firstSpaces;\n    } else {\n      node.value = firstSpaces + node.value;\n    }\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens);\n    }\n  }\n\n  atrule(token) {\n    let node = new atRule();\n    node.name = token[1].slice(1);\n    if (node.name === '') {\n      this.unnamedAtrule(node, token);\n    }\n    this.init(node, token[2]);\n\n    let type;\n    let prev;\n    let shift;\n    let last = false;\n    let open = false;\n    let params = [];\n    let brackets = [];\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      type = token[0];\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}');\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2]);\n          this.semicolon = true;\n          break\n        } else if (type === '{') {\n          open = true;\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1;\n            prev = params[shift];\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift];\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2]);\n            }\n          }\n          this.end(token);\n          break\n        } else {\n          params.push(token);\n        }\n      } else {\n        params.push(token);\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node, 'params', params);\n      if (last) {\n        token = params[params.length - 1];\n        node.source.end = this.getPosition(token[3] || token[2]);\n        this.spaces = node.raws.between;\n        node.raws.between = '';\n      }\n    } else {\n      node.raws.afterName = '';\n      node.params = '';\n    }\n\n    if (open) {\n      node.nodes = [];\n      this.current = node;\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.semicolon = false;\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    this.spaces = '';\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2]);\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock();\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1];\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1];\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = '';\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset);\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node);\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    };\n    node.raws.before = this.spaces;\n    this.spaces = '';\n    if (node.type !== 'comment') this.semicolon = false;\n  }\n\n  raw(node, prop, tokens) {\n    let token, type;\n    let length = tokens.length;\n    let value = '';\n    let clean = true;\n    let next, prev;\n    let pattern = /^([#.|])?(\\w)+/i;\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1];\n        next = tokens[i + 1];\n\n        if (\n          prev[0] !== 'space' &&\n          next[0] !== 'space' &&\n          pattern.test(prev[1]) &&\n          pattern.test(next[1])\n        ) {\n          value += token[1];\n        } else {\n          clean = false;\n        }\n\n        continue\n      }\n\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\n        clean = false;\n      } else {\n        value += token[1];\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '');\n      node.raws[prop] = { value, raw };\n    }\n    node[prop] = value;\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = '';\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next;\n    let spaces = '';\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1];\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = '';\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = '';\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1];\n    }\n    tokens.splice(from, tokens.length - from);\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0;\n    let token, type, prev;\n    for (let [i, element] of tokens.entries()) {\n      token = element;\n      type = token[0];\n\n      if (type === '(') {\n        brackets += 1;\n      }\n      if (type === ')') {\n        brackets -= 1;\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token;\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start;\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens);\n    if (colon === false) return\n\n    let founded = 0;\n    let token;\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n      if (token[0] !== 'space') {\n        founded += 1;\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nvar parser = Parser$1;\n\nfunction parse$6(css, opts) {\n  let input$1 = new input(css, opts);\n  let parser$1 = new parser(input$1);\n  try {\n    parser$1.parse();\n  } catch (e) {\n    {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser';\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser$1.root\n}\n\nvar parse_1$1 = parse$6;\nparse$6.default = parse$6;\n\ncontainer.registerParse(parse$6);\n\nlet { isClean: isClean$3, my: my$3 } = symbols;\n\n\n\n\n\n\n\n\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n};\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n};\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n};\n\nconst CHILDREN = 0;\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node.type];\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events;\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit'];\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean$3] = false;\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n  return node\n}\n\nlet postcss = {};\n\nclass LazyResult$2 {\n  constructor(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n\n    let root;\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult$2 || css instanceof result) {\n      root = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser = parse_1$1;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n\n      if (root && !root[my$3]) {\n        /* c8 ignore next 2 */\n        container.rebuild(root);\n      }\n    }\n\n    this.result = new result(processor, root, opts);\n    this.helpers = { ...postcss, result: this.result, postcss };\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    });\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    {\n      if (!('from' in this.opts)) {\n        warnOnce$2(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true;\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean$3]) {\n        root[isClean$3] = true;\n        this.walkSync(root);\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true;\n\n    this.sync();\n\n    let opts = this.result.opts;\n    let str = stringify_1;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n\n    let map = new mapGenerator(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean$3] = true;\n    let events = getEvents(node);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean$3]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin;\n      let promise;\n      try {\n        promise = visitor(node, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin;\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          );\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin;\n    try {\n      if (node) node.addToError(error);\n      this.error = error;\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (({}).NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin;\n          let pluginVer = plugin.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split('.');\n          let b = runtimeVer.split('.');\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            );\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err);\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i];\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean$3]) {\n        root[isClean$3] = true;\n        let stack = [toStack(root)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node = stack[stack.length - 1].node;\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin;\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              );\n\n              await Promise.all(roots);\n            } else {\n              await visitor(root, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true;\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin, cb]);\n    };\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter]);\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  );\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1];\n    let { node, visitors } = visit;\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop();\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex];\n      visit.visitorIndex += 1;\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = [];\n        visit.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin;\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator;\n      let child;\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1;\n        if (!child[isClean$3]) {\n          child[isClean$3] = true;\n          stack.push(toStack(child));\n          return\n        }\n      }\n      visit.iterator = 0;\n      delete node.indexes[iterator];\n    }\n\n    let events = visit.events;\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex];\n      visit.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean$3] = true;\n          visit.iterator = node.getIterator();\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event];\n        return\n      }\n    }\n    stack.pop();\n  }\n}\n\nLazyResult$2.registerPostcss = dependant => {\n  postcss = dependant;\n};\n\nvar lazyResult = LazyResult$2;\nLazyResult$2.default = LazyResult$2;\n\nroot.registerLazyResult(LazyResult$2);\ndocument.registerLazyResult(LazyResult$2);\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n\n    this._processor = processor;\n    this._css = css;\n    this._opts = opts;\n    this._map = undefined;\n    let root;\n\n    let str = stringify_1;\n    this.result = new result(this._processor, root, this._opts);\n    this.result.css = css;\n\n    let self = this;\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    });\n\n    let map = new mapGenerator(str, root, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root;\n    let parser = parse_1$1;\n\n    try {\n      root = parser(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n\n    this._root = root;\n\n    return root\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    {\n      if (!('from' in this._opts)) {\n        warnOnce$2(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        );\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nvar noWorkResult = NoWorkResult;\nNoWorkResult.default = NoWorkResult;\n\nclass Processor$2 {\n  constructor(plugins = []) {\n    this.version = '8.4.4';\n    this.plugins = this.normalize(plugins);\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new noWorkResult(this, css, opts)\n    } else {\n      return new lazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = [];\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nvar processor = Processor$2;\nProcessor$2.default = Processor$2;\n\nroot.registerProcessor(Processor$2);\ndocument.registerProcessor(Processor$2);\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json;\n  if (ownInputs) {\n    inputs = [];\n    for (let input$1 of ownInputs) {\n      let inputHydrated = { ...input$1, __proto__: input.prototype };\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: previousMap.prototype\n        };\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source;\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === 'root') {\n    return new root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new atRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nvar fromJSON_1 = fromJSON;\nfromJSON.default = fromJSON;\n\nfunction postcss$1(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n  return new processor(plugins)\n}\n\npostcss$1.plugin = function plugin(name, initializer) {\n  // eslint-disable-next-line no-console\n  if (console && console.warn) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      name +\n        ': postcss.plugin was deprecated. Migration guide:\\n' +\n        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n    );\n  }\n  function creator(...args) {\n    let transformer = initializer(...args);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new processor().version;\n    return transformer\n  }\n\n  let cache;\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator();\n      return cache\n    }\n  });\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss$1([creator(pluginOpts)]).process(css, processOpts)\n  };\n\n  return creator\n};\n\npostcss$1.stringify = stringify_1;\npostcss$1.parse = parse_1$1;\npostcss$1.fromJSON = fromJSON_1;\npostcss$1.list = list_1;\n\npostcss$1.comment = defaults => new comment(defaults);\npostcss$1.atRule = defaults => new atRule(defaults);\npostcss$1.decl = defaults => new declaration(defaults);\npostcss$1.rule = defaults => new rule(defaults);\npostcss$1.root = defaults => new root(defaults);\npostcss$1.document = defaults => new document(defaults);\n\npostcss$1.CssSyntaxError = cssSyntaxError;\npostcss$1.Declaration = declaration;\npostcss$1.Container = container;\npostcss$1.Processor = processor;\npostcss$1.Document = document;\npostcss$1.Comment = comment;\npostcss$1.Warning = warning;\npostcss$1.AtRule = atRule;\npostcss$1.Result = result;\npostcss$1.Input = input;\npostcss$1.Rule = rule;\npostcss$1.Root = root;\npostcss$1.Node = node_1;\n\nlazyResult.registerPostcss(postcss$1);\n\nvar postcss_1 = postcss$1;\npostcss$1.default = postcss$1;\n\nconst trimPlugin = () => {\r\n    return {\r\n        postcssPlugin: 'vue-sfc-trim',\r\n        Once(root) {\r\n            root.walk(({ type, raws }) => {\r\n                if (type === 'rule' || type === 'atrule') {\r\n                    if (raws.before)\r\n                        raws.before = '\\n';\r\n                    if ('after' in raws && raws.after)\r\n                        raws.after = '\\n';\r\n                }\r\n            });\r\n        }\r\n    };\r\n};\r\ntrimPlugin.postcss = true;\n\nvar unesc_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i); // check to see if we are dealing with a valid hex char [a-f|0-9]\n\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57; // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n\n    spaceTerminated = code === 32;\n\n    if (!valid) {\n      break;\n    }\n\n    hex += lower[i];\n  }\n\n  if (hex.length === 0) {\n    return undefined;\n  }\n\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF; // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\n\nvar CONTAINS_ESCAPE = /\\\\/;\n\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n\n  if (!needToProcess) {\n    return str;\n  }\n\n  var ret = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      } // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n\n\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      } // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n\n\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n\n      continue;\n    }\n\n    ret += str[i];\n  }\n\n  return ret;\n}\n\nmodule.exports = exports.default;\n});\n\nvar getProp_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = getProp;\n\nfunction getProp(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  while (props.length > 0) {\n    var prop = props.shift();\n\n    if (!obj[prop]) {\n      return undefined;\n    }\n\n    obj = obj[prop];\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\n});\n\nvar ensureObject_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = ensureObject;\n\nfunction ensureObject(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  while (props.length > 0) {\n    var prop = props.shift();\n\n    if (!obj[prop]) {\n      obj[prop] = {};\n    }\n\n    obj = obj[prop];\n  }\n}\n\nmodule.exports = exports.default;\n});\n\nvar stripComments_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = stripComments;\n\nfunction stripComments(str) {\n  var s = \"\";\n  var commentStart = str.indexOf(\"/*\");\n  var lastEnd = 0;\n\n  while (commentStart >= 0) {\n    s = s + str.slice(lastEnd, commentStart);\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n\n    if (commentEnd < 0) {\n      return s;\n    }\n\n    lastEnd = commentEnd + 2;\n    commentStart = str.indexOf(\"/*\", lastEnd);\n  }\n\n  s = s + str.slice(lastEnd);\n  return s;\n}\n\nmodule.exports = exports.default;\n});\n\nvar util$2 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.stripComments = exports.ensureObject = exports.getProp = exports.unesc = void 0;\n\nvar _unesc = _interopRequireDefault(unesc_1);\n\nexports.unesc = _unesc[\"default\"];\n\nvar _getProp = _interopRequireDefault(getProp_1);\n\nexports.getProp = _getProp[\"default\"];\n\nvar _ensureObject = _interopRequireDefault(ensureObject_1);\n\nexports.ensureObject = _ensureObject[\"default\"];\n\nvar _stripComments = _interopRequireDefault(stripComments_1);\n\nexports.stripComments = _stripComments[\"default\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n});\n\nvar node = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  var cloned = new obj.constructor();\n\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n\n    var value = obj[i];\n    var type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n\n  return cloned;\n};\n\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n\n  var _proto = Node.prototype;\n\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  };\n\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n\n      this.remove();\n    }\n\n    return this;\n  };\n\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = cloneNode(this);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */\n  ;\n\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */\n  ;\n\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    this.raws[name] = valueEscaped;\n  }\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */\n  ;\n\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */\n  ;\n\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n\n      if (this.source.end.line < line) {\n        return false;\n      }\n\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return undefined;\n  };\n\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, util$2.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, util$2.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n\n  return Node;\n}();\n\nexports[\"default\"] = Node;\nmodule.exports = exports.default;\n});\n\nvar types$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.UNIVERSAL = exports.ATTRIBUTE = exports.CLASS = exports.COMBINATOR = exports.COMMENT = exports.ID = exports.NESTING = exports.PSEUDO = exports.ROOT = exports.SELECTOR = exports.STRING = exports.TAG = void 0;\nvar TAG = 'tag';\nexports.TAG = TAG;\nvar STRING = 'string';\nexports.STRING = STRING;\nvar SELECTOR = 'selector';\nexports.SELECTOR = SELECTOR;\nvar ROOT = 'root';\nexports.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\nexports.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\nexports.NESTING = NESTING;\nvar ID = 'id';\nexports.ID = ID;\nvar COMMENT = 'comment';\nexports.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\nexports.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\nexports.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\nexports.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\nexports.UNIVERSAL = UNIVERSAL;\n});\n\nvar container$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\nvar types = _interopRequireWildcard(types$1);\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n\n  function Container(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n\n    if (!_this.nodes) {\n      _this.nodes = [];\n    }\n\n    return _this;\n  }\n\n  var _proto = Container.prototype;\n\n  _proto.append = function append(selector) {\n    selector.parent = this;\n    this.nodes.push(selector);\n    return this;\n  };\n\n  _proto.prepend = function prepend(selector) {\n    selector.parent = this;\n    this.nodes.unshift(selector);\n    return this;\n  };\n\n  _proto.at = function at(index) {\n    return this.nodes[index];\n  };\n\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n\n    return this.nodes.indexOf(child);\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.at(child).parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.removeAll = function removeAll() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n      node.parent = undefined;\n    }\n\n    this.nodes = [];\n    return this;\n  };\n\n  _proto.empty = function empty() {\n    return this.removeAll();\n  };\n\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex + 1, 0, newNode);\n    newNode.parent = this;\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (oldIndex <= index) {\n        this.indexes[id] = index + 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex, 0, newNode);\n    newNode.parent = this;\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index <= oldIndex) {\n        this.indexes[id] = index + 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n    var found = undefined;\n    this.each(function (node) {\n      if (node.atPosition) {\n        var foundChild = node.atPosition(line, col);\n\n        if (foundChild) {\n          found = foundChild;\n          return false;\n        }\n      } else if (node.isAtPosition(line, col)) {\n        found = node;\n        return false;\n      }\n    });\n    return found;\n  }\n  /**\n   * Return the most specific node at the line and column number given.\n   * The source location is based on the original parsed location, locations aren't\n   * updated as selector nodes are mutated.\n   * \n   * Note that this location is relative to the location of the first character\n   * of the selector, and not the location of the selector in the overall document\n   * when used in conjunction with postcss.\n   *\n   * If not found, returns undefined.\n   * @param {number} line The line number of the node to find. (1-based index)\n   * @param {number} col  The column number of the node to find. (1-based index)\n   */\n  ;\n\n  _proto.atPosition = function atPosition(line, col) {\n    if (this.isAtPosition(line, col)) {\n      return this._findChildAtPosition(line, col) || this;\n    } else {\n      return undefined;\n    }\n  };\n\n  _proto._inferEndPosition = function _inferEndPosition() {\n    if (this.last && this.last.source && this.last.source.end) {\n      this.source = this.source || {};\n      this.source.end = this.source.end || {};\n      Object.assign(this.source.end, this.last.source.end);\n    }\n  };\n\n  _proto.each = function each(callback) {\n    if (!this.lastEach) {\n      this.lastEach = 0;\n    }\n\n    if (!this.indexes) {\n      this.indexes = {};\n    }\n\n    this.lastEach++;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n\n    if (!this.length) {\n      return undefined;\n    }\n\n    var index, result;\n\n    while (this.indexes[id] < this.length) {\n      index = this.indexes[id];\n      result = callback(this.at(index), index);\n\n      if (result === false) {\n        break;\n      }\n\n      this.indexes[id] += 1;\n    }\n\n    delete this.indexes[id];\n\n    if (result === false) {\n      return false;\n    }\n  };\n\n  _proto.walk = function walk(callback) {\n    return this.each(function (node, i) {\n      var result = callback(node, i);\n\n      if (result !== false && node.length) {\n        result = node.walk(callback);\n      }\n\n      if (result === false) {\n        return false;\n      }\n    });\n  };\n\n  _proto.walkAttributes = function walkAttributes(callback) {\n    var _this2 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.ATTRIBUTE) {\n        return callback.call(_this2, selector);\n      }\n    });\n  };\n\n  _proto.walkClasses = function walkClasses(callback) {\n    var _this3 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.CLASS) {\n        return callback.call(_this3, selector);\n      }\n    });\n  };\n\n  _proto.walkCombinators = function walkCombinators(callback) {\n    var _this4 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.COMBINATOR) {\n        return callback.call(_this4, selector);\n      }\n    });\n  };\n\n  _proto.walkComments = function walkComments(callback) {\n    var _this5 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.COMMENT) {\n        return callback.call(_this5, selector);\n      }\n    });\n  };\n\n  _proto.walkIds = function walkIds(callback) {\n    var _this6 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.ID) {\n        return callback.call(_this6, selector);\n      }\n    });\n  };\n\n  _proto.walkNesting = function walkNesting(callback) {\n    var _this7 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.NESTING) {\n        return callback.call(_this7, selector);\n      }\n    });\n  };\n\n  _proto.walkPseudos = function walkPseudos(callback) {\n    var _this8 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.PSEUDO) {\n        return callback.call(_this8, selector);\n      }\n    });\n  };\n\n  _proto.walkTags = function walkTags(callback) {\n    var _this9 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.TAG) {\n        return callback.call(_this9, selector);\n      }\n    });\n  };\n\n  _proto.walkUniversals = function walkUniversals(callback) {\n    var _this10 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.UNIVERSAL) {\n        return callback.call(_this10, selector);\n      }\n    });\n  };\n\n  _proto.split = function split(callback) {\n    var _this11 = this;\n\n    var current = [];\n    return this.reduce(function (memo, node, index) {\n      var split = callback.call(_this11, node);\n      current.push(node);\n\n      if (split) {\n        memo.push(current);\n        current = [];\n      } else if (index === _this11.length - 1) {\n        memo.push(current);\n      }\n\n      return memo;\n    }, []);\n  };\n\n  _proto.map = function map(callback) {\n    return this.nodes.map(callback);\n  };\n\n  _proto.reduce = function reduce(callback, memo) {\n    return this.nodes.reduce(callback, memo);\n  };\n\n  _proto.every = function every(callback) {\n    return this.nodes.every(callback);\n  };\n\n  _proto.some = function some(callback) {\n    return this.nodes.some(callback);\n  };\n\n  _proto.filter = function filter(callback) {\n    return this.nodes.filter(callback);\n  };\n\n  _proto.sort = function sort(callback) {\n    return this.nodes.sort(callback);\n  };\n\n  _proto.toString = function toString() {\n    return this.map(String).join('');\n  };\n\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      return this.at(0);\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.at(this.length - 1);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.nodes.length;\n    }\n  }]);\n\n  return Container;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Container;\nmodule.exports = exports.default;\n});\n\nvar root$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(container$1);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n\n  function Root(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = types$1.ROOT;\n    return _this;\n  }\n\n  var _proto = Root.prototype;\n\n  _proto.toString = function toString() {\n    var str = this.reduce(function (memo, selector) {\n      memo.push(String(selector));\n      return memo;\n    }, []).join(',');\n    return this.trailingComma ? str + ',' : str;\n  };\n\n  _proto.error = function error(message, options) {\n    if (this._error) {\n      return this._error(message, options);\n    } else {\n      return new Error(message);\n    }\n  };\n\n  _createClass(Root, [{\n    key: \"errorGenerator\",\n    set: function set(handler) {\n      this._error = handler;\n    }\n  }]);\n\n  return Root;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Root;\nmodule.exports = exports.default;\n});\n\nvar selector = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(container$1);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Selector = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Selector, _Container);\n\n  function Selector(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = types$1.SELECTOR;\n    return _this;\n  }\n\n  return Selector;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Selector;\nmodule.exports = exports.default;\n});\n\n/*! https://mths.be/cssesc v3.0.0 by @mathias */\n\nvar object = {};\nvar hasOwnProperty$3 = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { \u2026 }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty$3.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it\u2019s not a printable ASCII character\u2026\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It\u2019s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It\u2019s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they\u2019re redundant. Note that this is only possible if the escape\n\t// sequence isn\u2019t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It\u2019s not safe to remove the space, so don\u2019t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nvar cssesc_1 = cssesc;\n\nvar className = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(cssesc_1);\n\n\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ClassName = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ClassName, _Node);\n\n  function ClassName(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.CLASS;\n    _this._constructed = true;\n    return _this;\n  }\n\n  var _proto = ClassName.prototype;\n\n  _proto.valueToString = function valueToString() {\n    return '.' + _Node.prototype.valueToString.call(this);\n  };\n\n  _createClass(ClassName, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._constructed) {\n        var escaped = (0, _cssesc[\"default\"])(v, {\n          isIdentifier: true\n        });\n\n        if (escaped !== v) {\n          (0, util$2.ensureObject)(this, \"raws\");\n          this.raws.value = escaped;\n        } else if (this.raws) {\n          delete this.raws.value;\n        }\n      }\n\n      this._value = v;\n    }\n  }]);\n\n  return ClassName;\n}(_node[\"default\"]);\n\nexports[\"default\"] = ClassName;\nmodule.exports = exports.default;\n});\n\nvar comment$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n\n  function Comment(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.COMMENT;\n    return _this;\n  }\n\n  return Comment;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Comment;\nmodule.exports = exports.default;\n});\n\nvar id = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ID = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ID, _Node);\n\n  function ID(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.ID;\n    return _this;\n  }\n\n  var _proto = ID.prototype;\n\n  _proto.valueToString = function valueToString() {\n    return '#' + _Node.prototype.valueToString.call(this);\n  };\n\n  return ID;\n}(_node[\"default\"]);\n\nexports[\"default\"] = ID;\nmodule.exports = exports.default;\n});\n\nvar namespace = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(cssesc_1);\n\n\n\nvar _node = _interopRequireDefault(node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Namespace = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Namespace, _Node);\n\n  function Namespace() {\n    return _Node.apply(this, arguments) || this;\n  }\n\n  var _proto = Namespace.prototype;\n\n  _proto.qualifiedName = function qualifiedName(value) {\n    if (this.namespace) {\n      return this.namespaceString + \"|\" + value;\n    } else {\n      return value;\n    }\n  };\n\n  _proto.valueToString = function valueToString() {\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n  };\n\n  _createClass(Namespace, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n        this._namespace = namespace;\n\n        if (this.raws) {\n          delete this.raws.namespace;\n        }\n\n        return;\n      }\n\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\n        isIdentifier: true\n      });\n      this._namespace = namespace;\n\n      if (escaped !== namespace) {\n        (0, util$2.ensureObject)(this, \"raws\");\n        this.raws.namespace = escaped;\n      } else if (this.raws) {\n        delete this.raws.namespace;\n      }\n    }\n  }, {\n    key: \"ns\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      this.namespace = namespace;\n    }\n  }, {\n    key: \"namespaceString\",\n    get: function get() {\n      if (this.namespace) {\n        var ns = this.stringifyProperty(\"namespace\");\n\n        if (ns === true) {\n          return '';\n        } else {\n          return ns;\n        }\n      } else {\n        return '';\n      }\n    }\n  }]);\n\n  return Namespace;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Namespace;\nmodule.exports = exports.default;\n});\n\nvar tag = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _namespace = _interopRequireDefault(namespace);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Tag = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Tag, _Namespace);\n\n  function Tag(opts) {\n    var _this;\n\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = types$1.TAG;\n    return _this;\n  }\n\n  return Tag;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Tag;\nmodule.exports = exports.default;\n});\n\nvar string = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar String = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(String, _Node);\n\n  function String(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.STRING;\n    return _this;\n  }\n\n  return String;\n}(_node[\"default\"]);\n\nexports[\"default\"] = String;\nmodule.exports = exports.default;\n});\n\nvar pseudo = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(container$1);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Pseudo = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Pseudo, _Container);\n\n  function Pseudo(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = types$1.PSEUDO;\n    return _this;\n  }\n\n  var _proto = Pseudo.prototype;\n\n  _proto.toString = function toString() {\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n  };\n\n  return Pseudo;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Pseudo;\nmodule.exports = exports.default;\n});\n\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nvar node$1 = require$$0.deprecate;\n\nvar attribute = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.unescapeValue = unescapeValue;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(cssesc_1);\n\nvar _unesc = _interopRequireDefault(unesc_1);\n\nvar _namespace = _interopRequireDefault(namespace);\n\n\n\nvar _CSSESC_QUOTE_OPTIONS;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\nvar warnOfDeprecatedValueAssignment = node$1(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\nvar warnOfDeprecatedQuotedAssignment = node$1(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\nvar warnOfDeprecatedConstructor = node$1(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n\nfunction unescapeValue(value) {\n  var deprecatedUsage = false;\n  var quoteMark = null;\n  var unescaped = value;\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\n\n  if (m) {\n    quoteMark = m[1];\n    unescaped = m[2];\n  }\n\n  unescaped = (0, _unesc[\"default\"])(unescaped);\n\n  if (unescaped !== value) {\n    deprecatedUsage = true;\n  }\n\n  return {\n    deprecatedUsage: deprecatedUsage,\n    unescaped: unescaped,\n    quoteMark: quoteMark\n  };\n}\n\nfunction handleDeprecatedContructorOpts(opts) {\n  if (opts.quoteMark !== undefined) {\n    return opts;\n  }\n\n  if (opts.value === undefined) {\n    return opts;\n  }\n\n  warnOfDeprecatedConstructor();\n\n  var _unescapeValue = unescapeValue(opts.value),\n      quoteMark = _unescapeValue.quoteMark,\n      unescaped = _unescapeValue.unescaped;\n\n  if (!opts.raws) {\n    opts.raws = {};\n  }\n\n  if (opts.raws.value === undefined) {\n    opts.raws.value = opts.value;\n  }\n\n  opts.value = unescaped;\n  opts.quoteMark = quoteMark;\n  return opts;\n}\n\nvar Attribute = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Attribute, _Namespace);\n\n  function Attribute(opts) {\n    var _this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n    _this.type = types$1.ATTRIBUTE;\n    _this.raws = _this.raws || {};\n    Object.defineProperty(_this.raws, 'unquoted', {\n      get: node$1(function () {\n        return _this.value;\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n      set: node$1(function () {\n        return _this.value;\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n    });\n    _this._constructed = true;\n    return _this;\n  }\n  /**\n   * Returns the Attribute's value quoted such that it would be legal to use\n   * in the value of a css file. The original value's quotation setting\n   * used for stringification is left unchanged. See `setValue(value, options)`\n   * if you want to control the quote settings of a new value for the attribute.\n   *\n   * You can also change the quotation used for the current value by setting quoteMark.\n   *\n   * Options:\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n   *     option is not set, the original value for quoteMark will be used. If\n   *     indeterminate, a double quote is used. The legal values are:\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n   *     over the quoteMark option value.\n   *   * smart {boolean} - if true, will select a quote mark based on the value\n   *     and the other options specified here. See the `smartQuoteMark()`\n   *     method.\n   **/\n\n\n  var _proto = Attribute.prototype;\n\n  _proto.getQuotedValue = function getQuotedValue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var quoteMark = this._determineQuoteMark(options);\n\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n    return escaped;\n  };\n\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n  }\n  /**\n   * Set the unescaped value with the specified quotation options. The value\n   * provided must not include any wrapping quote marks -- those quotes will\n   * be interpreted as part of the value and escaped accordingly.\n   */\n  ;\n\n  _proto.setValue = function setValue(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._value = value;\n    this._quoteMark = this._determineQuoteMark(options);\n\n    this._syncRawValue();\n  }\n  /**\n   * Intelligently select a quoteMark value based on the value's contents. If\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n   * mark will be picked that minimizes the number of escapes.\n   *\n   * If there's no clear winner, the quote mark from these options is used,\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n   * true). If the quoteMark is unspecified, a double quote is used.\n   *\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n   * from the quoteValue method.\n   */\n  ;\n\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\n    var v = this.value;\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n\n    if (numSingleQuotes + numDoubleQuotes === 0) {\n      var escaped = (0, _cssesc[\"default\"])(v, {\n        isIdentifier: true\n      });\n\n      if (escaped === v) {\n        return Attribute.NO_QUOTE;\n      } else {\n        var pref = this.preferredQuoteMark(options);\n\n        if (pref === Attribute.NO_QUOTE) {\n          // pick a quote mark that isn't none and see if it's smaller\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n\n          if (quoteValue.length < escaped.length) {\n            return quote;\n          }\n        }\n\n        return pref;\n      }\n    } else if (numDoubleQuotes === numSingleQuotes) {\n      return this.preferredQuoteMark(options);\n    } else if (numDoubleQuotes < numSingleQuotes) {\n      return Attribute.DOUBLE_QUOTE;\n    } else {\n      return Attribute.SINGLE_QUOTE;\n    }\n  }\n  /**\n   * Selects the preferred quote mark based on the options and the current quote mark value.\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n   * instead.\n   */\n  ;\n\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n\n    if (quoteMark === undefined) {\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n    }\n\n    if (quoteMark === undefined) {\n      quoteMark = Attribute.DOUBLE_QUOTE;\n    }\n\n    return quoteMark;\n  };\n\n  _proto._syncRawValue = function _syncRawValue() {\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n\n    if (rawValue === this._value) {\n      if (this.raws) {\n        delete this.raws.value;\n      }\n    } else {\n      this.raws.value = rawValue;\n    }\n  };\n\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\n    if (this._constructed) {\n      var escaped = (0, _cssesc[\"default\"])(value, {\n        isIdentifier: true\n      });\n\n      if (escaped !== value) {\n        this.raws[prop] = escaped;\n      } else {\n        delete this.raws[prop];\n      }\n    }\n  };\n\n  _proto._spacesFor = function _spacesFor(name) {\n    var attrSpaces = {\n      before: '',\n      after: ''\n    };\n    var spaces = this.spaces[name] || {};\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n    return Object.assign(attrSpaces, spaces, rawSpaces);\n  };\n\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n    if (spaceName === void 0) {\n      spaceName = name;\n    }\n\n    if (concat === void 0) {\n      concat = defaultAttrConcat;\n    }\n\n    var attrSpaces = this._spacesFor(spaceName);\n\n    return concat(this.stringifyProperty(name), attrSpaces);\n  }\n  /**\n   * returns the offset of the attribute part specified relative to the\n   * start of the node of the output string.\n   *\n   * * \"ns\" - alias for \"namespace\"\n   * * \"namespace\" - the namespace if it exists.\n   * * \"attribute\" - the attribute name\n   * * \"attributeNS\" - the start of the attribute or its namespace\n   * * \"operator\" - the match operator of the attribute\n   * * \"value\" - The value (string or identifier)\n   * * \"insensitive\" - the case insensitivity flag;\n   * @param part One of the possible values inside an attribute.\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n   */\n  ;\n\n  _proto.offsetOf = function offsetOf(name) {\n    var count = 1;\n\n    var attributeSpaces = this._spacesFor(\"attribute\");\n\n    count += attributeSpaces.before.length;\n\n    if (name === \"namespace\" || name === \"ns\") {\n      return this.namespace ? count : -1;\n    }\n\n    if (name === \"attributeNS\") {\n      return count;\n    }\n\n    count += this.namespaceString.length;\n\n    if (this.namespace) {\n      count += 1;\n    }\n\n    if (name === \"attribute\") {\n      return count;\n    }\n\n    count += this.stringifyProperty(\"attribute\").length;\n    count += attributeSpaces.after.length;\n\n    var operatorSpaces = this._spacesFor(\"operator\");\n\n    count += operatorSpaces.before.length;\n    var operator = this.stringifyProperty(\"operator\");\n\n    if (name === \"operator\") {\n      return operator ? count : -1;\n    }\n\n    count += operator.length;\n    count += operatorSpaces.after.length;\n\n    var valueSpaces = this._spacesFor(\"value\");\n\n    count += valueSpaces.before.length;\n    var value = this.stringifyProperty(\"value\");\n\n    if (name === \"value\") {\n      return value ? count : -1;\n    }\n\n    count += value.length;\n    count += valueSpaces.after.length;\n\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n\n    count += insensitiveSpaces.before.length;\n\n    if (name === \"insensitive\") {\n      return this.insensitive ? count : -1;\n    }\n\n    return -1;\n  };\n\n  _proto.toString = function toString() {\n    var _this2 = this;\n\n    var selector = [this.rawSpaceBefore, '['];\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n\n    if (this.operator && (this.value || this.value === '')) {\n      selector.push(this._stringFor('operator'));\n      selector.push(this._stringFor('value'));\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n          attrSpaces.before = \" \";\n        }\n\n        return defaultAttrConcat(attrValue, attrSpaces);\n      }));\n    }\n\n    selector.push(']');\n    selector.push(this.rawSpaceAfter);\n    return selector.join('');\n  };\n\n  _createClass(Attribute, [{\n    key: \"quoted\",\n    get: function get() {\n      var qm = this.quoteMark;\n      return qm === \"'\" || qm === '\"';\n    },\n    set: function set(value) {\n      warnOfDeprecatedQuotedAssignment();\n    }\n    /**\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n     * returns `null` if the value is not quoted.\n     * returns `undefined` if the quotation state is unknown (this can happen when\n     * the attribute is constructed without specifying a quote mark.)\n     */\n\n  }, {\n    key: \"quoteMark\",\n    get: function get() {\n      return this._quoteMark;\n    }\n    /**\n     * Set the quote mark to be used by this attribute's value.\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n     * value is updated accordingly.\n     *\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n     */\n    ,\n    set: function set(quoteMark) {\n      if (!this._constructed) {\n        this._quoteMark = quoteMark;\n        return;\n      }\n\n      if (this._quoteMark !== quoteMark) {\n        this._quoteMark = quoteMark;\n\n        this._syncRawValue();\n      }\n    }\n  }, {\n    key: \"qualifiedAttribute\",\n    get: function get() {\n      return this.qualifiedName(this.raws.attribute || this.attribute);\n    }\n  }, {\n    key: \"insensitiveFlag\",\n    get: function get() {\n      return this.insensitive ? 'i' : '';\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n     * is unescaped during parsing and any quote marks are removed.\n     *\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n     * a deprecation warning is raised when the new value contains any characters that would\n     * require escaping (including if it contains wrapped quotes).\n     *\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n     * how the new value is quoted.\n     */\n    ,\n    set: function set(v) {\n      if (this._constructed) {\n        var _unescapeValue2 = unescapeValue(v),\n            deprecatedUsage = _unescapeValue2.deprecatedUsage,\n            unescaped = _unescapeValue2.unescaped,\n            quoteMark = _unescapeValue2.quoteMark;\n\n        if (deprecatedUsage) {\n          warnOfDeprecatedValueAssignment();\n        }\n\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\n          return;\n        }\n\n        this._value = unescaped;\n        this._quoteMark = quoteMark;\n\n        this._syncRawValue();\n      } else {\n        this._value = v;\n      }\n    }\n  }, {\n    key: \"attribute\",\n    get: function get() {\n      return this._attribute;\n    },\n    set: function set(name) {\n      this._handleEscapes(\"attribute\", name);\n\n      this._attribute = name;\n    }\n  }]);\n\n  return Attribute;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Attribute;\nAttribute.NO_QUOTE = null;\nAttribute.SINGLE_QUOTE = \"'\";\nAttribute.DOUBLE_QUOTE = '\"';\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n  \"'\": {\n    quotes: 'single',\n    wrap: true\n  },\n  '\"': {\n    quotes: 'double',\n    wrap: true\n  }\n}, _CSSESC_QUOTE_OPTIONS[null] = {\n  isIdentifier: true\n}, _CSSESC_QUOTE_OPTIONS);\n\nfunction defaultAttrConcat(attrValue, attrSpaces) {\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n}\n});\n\nvar universal = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _namespace = _interopRequireDefault(namespace);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Universal = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Universal, _Namespace);\n\n  function Universal(opts) {\n    var _this;\n\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = types$1.UNIVERSAL;\n    _this.value = '*';\n    return _this;\n  }\n\n  return Universal;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Universal;\nmodule.exports = exports.default;\n});\n\nvar combinator = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Combinator = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Combinator, _Node);\n\n  function Combinator(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.COMBINATOR;\n    return _this;\n  }\n\n  return Combinator;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Combinator;\nmodule.exports = exports.default;\n});\n\nvar nesting = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(node);\n\n\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Nesting = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Nesting, _Node);\n\n  function Nesting(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = types$1.NESTING;\n    _this.value = '&';\n    return _this;\n  }\n\n  return Nesting;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Nesting;\nmodule.exports = exports.default;\n});\n\nvar sortAscending_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = sortAscending;\n\nfunction sortAscending(list) {\n  return list.sort(function (a, b) {\n    return a - b;\n  });\n}\nmodule.exports = exports.default;\n});\n\nvar tokenTypes$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.combinator = exports.word = exports.comment = exports.str = exports.tab = exports.newline = exports.feed = exports.cr = exports.backslash = exports.bang = exports.slash = exports.doubleQuote = exports.singleQuote = exports.space = exports.greaterThan = exports.pipe = exports.equals = exports.plus = exports.caret = exports.tilde = exports.dollar = exports.closeSquare = exports.openSquare = exports.closeParenthesis = exports.openParenthesis = exports.semicolon = exports.colon = exports.comma = exports.at = exports.asterisk = exports.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\n\nexports.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\n\nexports.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\n\nexports.at = at;\nvar comma = 44; // `,`.charCodeAt(0);\n\nexports.comma = comma;\nvar colon = 58; // `:`.charCodeAt(0);\n\nexports.colon = colon;\nvar semicolon = 59; // `;`.charCodeAt(0);\n\nexports.semicolon = semicolon;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\n\nexports.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\n\nexports.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\n\nexports.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\n\nexports.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\n\nexports.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\n\nexports.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\n\nexports.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\n\nexports.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\n\nexports.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\n\nexports.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\n\nexports.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\n\nexports.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\n\nexports.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\n\nexports.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\n\nexports.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\n\nexports.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\n\nexports.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\n\nexports.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\n\nexports.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\n\nexports.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n// Expose aliases primarily for readability.\n\nexports.tab = tab;\nvar str = singleQuote; // No good single character representation!\n\nexports.str = str;\nvar comment = -1;\nexports.comment = comment;\nvar word = -2;\nexports.word = word;\nvar combinator = -3;\nexports.combinator = combinator;\n});\n\nvar tokenize_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = tokenize;\nexports.FIELDS = void 0;\n\nvar t = _interopRequireWildcard(tokenTypes$1);\n\nvar _unescapable, _wordDelimiters;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\nvar hex = {};\nvar hexChars = \"0123456789abcdefABCDEF\";\n\nfor (var i = 0; i < hexChars.length; i++) {\n  hex[hexChars.charCodeAt(i)] = true;\n}\n/**\n *  Returns the last index of the bar css word\n * @param {string} css The string in which the word begins\n * @param {number} start The index into the string where word's first letter occurs\n */\n\n\nfunction consumeWord(css, start) {\n  var next = start;\n  var code;\n\n  do {\n    code = css.charCodeAt(next);\n\n    if (wordDelimiters[code]) {\n      return next - 1;\n    } else if (code === t.backslash) {\n      next = consumeEscape(css, next) + 1;\n    } else {\n      // All other characters are part of the word\n      next++;\n    }\n  } while (next < css.length);\n\n  return next - 1;\n}\n/**\n *  Returns the last index of the escape sequence\n * @param {string} css The string in which the sequence begins\n * @param {number} start The index into the string where escape character (`\\`) occurs.\n */\n\n\nfunction consumeEscape(css, start) {\n  var next = start;\n  var code = css.charCodeAt(next + 1);\n\n  if (unescapable[code]) ; else if (hex[code]) {\n    var hexDigits = 0; // consume up to 6 hex chars\n\n    do {\n      next++;\n      hexDigits++;\n      code = css.charCodeAt(next + 1);\n    } while (hex[code] && hexDigits < 6); // if fewer than 6 hex chars, a trailing space ends the escape\n\n\n    if (hexDigits < 6 && code === t.space) {\n      next++;\n    }\n  } else {\n    // the next char is part of the current word\n    next++;\n  }\n\n  return next;\n}\n\nvar FIELDS = {\n  TYPE: 0,\n  START_LINE: 1,\n  START_COL: 2,\n  END_LINE: 3,\n  END_COL: 4,\n  START_POS: 5,\n  END_POS: 6\n};\nexports.FIELDS = FIELDS;\n\nfunction tokenize(input) {\n  var tokens = [];\n  var css = input.css.valueOf();\n  var _css = css,\n      length = _css.length;\n  var offset = -1;\n  var line = 1;\n  var start = 0;\n  var end = 0;\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n\n  function unclosed(what, fix) {\n    if (input.safe) {\n      // fyi: this is never set to true.\n      css += fix;\n      next = css.length - 1;\n    } else {\n      throw input.error('Unclosed ' + what, line, start - offset, start);\n    }\n  }\n\n  while (start < length) {\n    code = css.charCodeAt(start);\n\n    if (code === t.newline) {\n      offset = start;\n      line += 1;\n    }\n\n    switch (code) {\n      case t.space:\n      case t.tab:\n      case t.newline:\n      case t.cr:\n      case t.feed:\n        next = start;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n\n          if (code === t.newline) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n\n        tokenType = t.space;\n        endLine = line;\n        endColumn = next - offset - 1;\n        end = next;\n        break;\n\n      case t.plus:\n      case t.greaterThan:\n      case t.tilde:\n      case t.pipe:\n        next = start;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n\n        tokenType = t.combinator;\n        endLine = line;\n        endColumn = start - offset;\n        end = next;\n        break;\n      // Consume these characters as single tokens.\n\n      case t.asterisk:\n      case t.ampersand:\n      case t.bang:\n      case t.comma:\n      case t.equals:\n      case t.dollar:\n      case t.caret:\n      case t.openSquare:\n      case t.closeSquare:\n      case t.colon:\n      case t.semicolon:\n      case t.openParenthesis:\n      case t.closeParenthesis:\n        next = start;\n        tokenType = code;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n\n      case t.singleQuote:\n      case t.doubleQuote:\n        quote = code === t.singleQuote ? \"'\" : '\"';\n        next = start;\n\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n\n          if (next === -1) {\n            unclosed('quote', quote);\n          }\n\n          escapePos = next;\n\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n\n        tokenType = t.str;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n\n      default:\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n          next = css.indexOf('*/', start + 2) + 1;\n\n          if (next === 0) {\n            unclosed('comment', '*/');\n          }\n\n          content = css.slice(start, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n\n          tokenType = t.comment;\n          line = nextLine;\n          endLine = nextLine;\n          endColumn = next - nextOffset;\n        } else if (code === t.slash) {\n          next = start;\n          tokenType = code;\n          endLine = line;\n          endColumn = start - offset;\n          end = next + 1;\n        } else {\n          next = consumeWord(css, start);\n          tokenType = t.word;\n          endLine = line;\n          endColumn = next - offset;\n        }\n\n        end = next + 1;\n        break;\n    } // Ensure that the token structure remains consistent\n\n\n    tokens.push([tokenType, // [0] Token type\n    line, // [1] Starting line\n    start - offset, // [2] Starting column\n    endLine, // [3] Ending line\n    endColumn, // [4] Ending column\n    start, // [5] Start position / Source index\n    end // [6] End position\n    ]); // Reset offset for the next token\n\n    if (nextOffset) {\n      offset = nextOffset;\n      nextOffset = null;\n    }\n\n    start = end;\n  }\n\n  return tokens;\n}\n});\n\nvar parser$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _root = _interopRequireDefault(root$1);\n\nvar _selector = _interopRequireDefault(selector);\n\nvar _className = _interopRequireDefault(className);\n\nvar _comment = _interopRequireDefault(comment$1);\n\nvar _id = _interopRequireDefault(id);\n\nvar _tag = _interopRequireDefault(tag);\n\nvar _string = _interopRequireDefault(string);\n\nvar _pseudo = _interopRequireDefault(pseudo);\n\nvar _attribute = _interopRequireWildcard(attribute);\n\nvar _universal = _interopRequireDefault(universal);\n\nvar _combinator = _interopRequireDefault(combinator);\n\nvar _nesting = _interopRequireDefault(nesting);\n\nvar _sortAscending = _interopRequireDefault(sortAscending_1);\n\nvar _tokenize = _interopRequireWildcard(tokenize_1);\n\nvar tokens = _interopRequireWildcard(tokenTypes$1);\n\nvar types = _interopRequireWildcard(types$1);\n\n\n\nvar _WHITESPACE_TOKENS, _Object$assign;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\n\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\n\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\n\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\n\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\n\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\n\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n\n  if (typeof value !== \"string\") {\n    return;\n  }\n\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, util$2.ensureObject)(node, 'raws');\n    node[prop] = (0, util$2.unesc)(value);\n\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n\n  return node;\n}\n\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n\n  return indexes;\n}\n\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n\n          if (this.options.lossy) {\n            break;\n          }\n\n          if (lastAdded) {\n            (0, util$2.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, util$2.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n\n          break;\n\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, util$2.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n\n            if (commentBefore) {\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, util$2.getProp)(node, 'raws', 'namespace') || null;\n\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n\n            lastAdded = 'namespace';\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, util$2.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n\n            break;\n          }\n\n        // Falls through\n\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, util$2.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n\n            if (commentBefore) {\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n\n            node.attribute = (node.attribute || \"\") + content;\n\n            var _rawValue = (0, util$2.getProp)(node, 'raws', 'attribute') || null;\n\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !spaceAfterMeaningfulToken) {\n            var _unescaped = (0, util$2.unesc)(content);\n\n            var _oldRawValue = (0, util$2.getProp)(node, 'raws', 'value') || '';\n\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n\n            if (_unescaped !== content || _oldRawValue) {\n              (0, util$2.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n\n              if (!insensitive || content === \"I\") {\n                (0, util$2.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n\n              lastAdded = 'insensitive';\n\n              if (spaceBefore) {\n                (0, util$2.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n\n              if (commentBefore) {\n                (0, util$2.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n              unescaped = _unescapeValue.unescaped,\n              quoteMark = _unescapeValue.quoteMark;\n\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, util$2.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, util$2.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, util$2.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, util$2.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, util$2.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n\n          break;\n\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n\n      pos++;\n    }\n\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */\n  ;\n\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n\n    return nodes;\n  }\n  /**\n   * \n   * @param {*} nodes \n   */\n  ;\n\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, util$2.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n\n    if (this.content() === '|') {\n      return this.namespace();\n    } // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n\n\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n\n      if (nodes.length > 0) {\n        var last = this.current.last;\n\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n              space = _this$convertWhitespa.space,\n              rawSpace = _this$convertWhitespa.rawSpace;\n\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n\n      return;\n    }\n\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n\n    var node;\n\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) ; else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n            _space = _this$convertWhitespa2.space,\n            _rawSpace = _this$convertWhitespa2.rawSpace;\n\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n          _space2 = _this$convertWhitespa3.space,\n          _rawSpace2 = _this$convertWhitespa3.rawSpace;\n\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n\n    return this.newNode(node);\n  };\n\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n\n    this.current._inferEndPosition();\n\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n  };\n\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n\n  _proto.space = function space() {\n    var content = this.content(); // Handle space before and after the selector\n\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n\n    var nextToken = this.nextToken;\n    var word = this.content();\n\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n\n      nextToken = this.nextToken;\n    }\n\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\'; // Allow decimal numbers percent in @keyframes\n\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    }); // Eliminate Sass interpolations from the list of id indexes\n\n    var interpolations = indexesOf(word, '#{');\n\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n\n      _this5.newNode(node, namespace); // Ensure that the namespace is used only once\n\n\n      namespace = null;\n    });\n    this.position++;\n  };\n\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n\n    return this.splitWord(namespace);\n  };\n\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n\n    this.current._inferEndPosition();\n\n    return this.root;\n  };\n\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n\n      case tokens.comment:\n        this.comment();\n        break;\n\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n\n        break;\n\n      case tokens.openSquare:\n        this.attribute();\n        break;\n\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n\n      case tokens.colon:\n        this.pseudo();\n        break;\n\n      case tokens.comma:\n        this.comma();\n        break;\n\n      case tokens.asterisk:\n        this.universal();\n        break;\n\n      case tokens.ampersand:\n        this.nesting();\n        break;\n\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n\n      case tokens.semicolon:\n        this.missingBackslash();\n\n      default:\n        this.unexpected();\n    }\n  }\n  /**\n   * Helpers\n   */\n  ;\n\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n\n        namespace = true;\n      }\n\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n\n    return this.current.append(node);\n  };\n\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n\n    var searchPosition = startPosition;\n\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n\n    return -1;\n  };\n\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;\n});\n\nvar processor$1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _parser = _interopRequireDefault(parser$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n\n    this.funcRes = null;\n    this.options = options;\n  }\n\n  var _proto = Processor.prototype;\n\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var root = this._root(rule, options);\n\n    var transform = this.func(root);\n\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n\n    var string = undefined;\n\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */\n  ;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */\n  ;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n\n    return result.string || result.root.toString();\n  };\n\n  return Processor;\n}();\n\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;\n});\n\n/*@__PURE__*/getDefaultExportFromCjs(processor$1);\n\nvar constructors = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\n\nvar _attribute = _interopRequireDefault(attribute);\n\nvar _className = _interopRequireDefault(className);\n\nvar _combinator = _interopRequireDefault(combinator);\n\nvar _comment = _interopRequireDefault(comment$1);\n\nvar _id = _interopRequireDefault(id);\n\nvar _nesting = _interopRequireDefault(nesting);\n\nvar _pseudo = _interopRequireDefault(pseudo);\n\nvar _root = _interopRequireDefault(root$1);\n\nvar _selector = _interopRequireDefault(selector);\n\nvar _string = _interopRequireDefault(string);\n\nvar _tag = _interopRequireDefault(tag);\n\nvar _universal = _interopRequireDefault(universal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar attribute$1 = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\n\nexports.attribute = attribute$1;\n\nvar className$1 = function className(opts) {\n  return new _className[\"default\"](opts);\n};\n\nexports.className = className$1;\n\nvar combinator$1 = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\n\nexports.combinator = combinator$1;\n\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\n\nexports.comment = comment;\n\nvar id$1 = function id(opts) {\n  return new _id[\"default\"](opts);\n};\n\nexports.id = id$1;\n\nvar nesting$1 = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\n\nexports.nesting = nesting$1;\n\nvar pseudo$1 = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\n\nexports.pseudo = pseudo$1;\n\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\n\nexports.root = root;\n\nvar selector$1 = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\n\nexports.selector = selector$1;\n\nvar string$1 = function string(opts) {\n  return new _string[\"default\"](opts);\n};\n\nexports.string = string$1;\n\nvar tag$1 = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\n\nexports.tag = tag$1;\n\nvar universal$1 = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\n\nexports.universal = universal$1;\n});\n\nvar guards = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports.isNode = isNode;\nexports.isPseudoElement = isPseudoElement;\nexports.isPseudoClass = isPseudoClass;\nexports.isContainer = isContainer;\nexports.isNamespace = isNamespace;\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\n\n\n\nvar _IS_TYPE;\n\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[types$1.ATTRIBUTE] = true, _IS_TYPE[types$1.CLASS] = true, _IS_TYPE[types$1.COMBINATOR] = true, _IS_TYPE[types$1.COMMENT] = true, _IS_TYPE[types$1.ID] = true, _IS_TYPE[types$1.NESTING] = true, _IS_TYPE[types$1.PSEUDO] = true, _IS_TYPE[types$1.ROOT] = true, _IS_TYPE[types$1.SELECTOR] = true, _IS_TYPE[types$1.STRING] = true, _IS_TYPE[types$1.TAG] = true, _IS_TYPE[types$1.UNIVERSAL] = true, _IS_TYPE);\n\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\n\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\n\nvar isAttribute = isNodeType.bind(null, types$1.ATTRIBUTE);\nexports.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, types$1.CLASS);\nexports.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, types$1.COMBINATOR);\nexports.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, types$1.COMMENT);\nexports.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, types$1.ID);\nexports.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, types$1.NESTING);\nexports.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, types$1.PSEUDO);\nexports.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, types$1.ROOT);\nexports.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, types$1.SELECTOR);\nexports.isSelector = isSelector;\nvar isString = isNodeType.bind(null, types$1.STRING);\nexports.isString = isString;\nvar isTag = isNodeType.bind(null, types$1.TAG);\nexports.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, types$1.UNIVERSAL);\nexports.isUniversal = isUniversal;\n\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\");\n}\n\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\n\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\n\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}\n});\n\nvar selectors = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\n\n\nObject.keys(types$1).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === types$1[key]) return;\n  exports[key] = types$1[key];\n});\n\n\n\nObject.keys(constructors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === constructors[key]) return;\n  exports[key] = constructors[key];\n});\n\n\n\nObject.keys(guards).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === guards[key]) return;\n  exports[key] = guards[key];\n});\n});\n\nvar dist = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _processor = _interopRequireDefault(processor$1);\n\nvar selectors$1 = _interopRequireWildcard(selectors);\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parser = function parser(processor) {\n  return new _processor[\"default\"](processor);\n};\n\nObject.assign(parser, selectors$1);\ndelete parser.__esModule;\nvar _default = parser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n});\n\nvar selectorParser = /*@__PURE__*/getDefaultExportFromCjs(dist);\n\nconst animationNameRE = /^(-\\w+-)?animation-name$/;\r\nconst animationRE = /^(-\\w+-)?animation$/;\r\nconst scopedPlugin = (id = '') => {\r\n    const keyframes = Object.create(null);\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    return {\r\n        postcssPlugin: 'vue-sfc-scoped',\r\n        Rule(rule) {\r\n            processRule(id, rule);\r\n        },\r\n        AtRule(node) {\r\n            if (/-?keyframes$/.test(node.name) &&\r\n                !node.params.endsWith(`-${shortId}`)) {\r\n                // register keyframes\r\n                keyframes[node.params] = node.params = node.params + '-' + shortId;\r\n            }\r\n        },\r\n        OnceExit(root) {\r\n            if (Object.keys(keyframes).length) {\r\n                // If keyframes are found in this <style>, find and rewrite animation names\r\n                // in declarations.\r\n                // Caveat: this only works for keyframes and animation rules in the same\r\n                // <style> element.\r\n                // individual animation-name declaration\r\n                root.walkDecls(decl => {\r\n                    if (animationNameRE.test(decl.prop)) {\r\n                        decl.value = decl.value\r\n                            .split(',')\r\n                            .map(v => keyframes[v.trim()] || v.trim())\r\n                            .join(',');\r\n                    }\r\n                    // shorthand\r\n                    if (animationRE.test(decl.prop)) {\r\n                        decl.value = decl.value\r\n                            .split(',')\r\n                            .map(v => {\r\n                            const vals = v.trim().split(/\\s+/);\r\n                            const i = vals.findIndex(val => keyframes[val]);\r\n                            if (i !== -1) {\r\n                                vals.splice(i, 1, keyframes[vals[i]]);\r\n                                return vals.join(' ');\r\n                            }\r\n                            else {\r\n                                return v;\r\n                            }\r\n                        })\r\n                            .join(',');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\nconst processedRules = new WeakSet();\r\nfunction processRule(id, rule) {\r\n    if (processedRules.has(rule) ||\r\n        (rule.parent &&\r\n            rule.parent.type === 'atrule' &&\r\n            /-?keyframes$/.test(rule.parent.name))) {\r\n        return;\r\n    }\r\n    processedRules.add(rule);\r\n    rule.selector = selectorParser(selectorRoot => {\r\n        selectorRoot.each(selector => {\r\n            rewriteSelector(id, selector, selectorRoot);\r\n        });\r\n    }).processSync(rule.selector);\r\n}\r\nfunction rewriteSelector(id, selector, selectorRoot, slotted = false) {\r\n    let node = null;\r\n    let shouldInject = true;\r\n    // find the last child node to insert attribute selector\r\n    selector.each(n => {\r\n        // DEPRECATED \">>>\" and \"/deep/\" combinator\r\n        if (n.type === 'combinator' &&\r\n            (n.value === '>>>' || n.value === '/deep/')) {\r\n            n.value = ' ';\r\n            n.spaces.before = n.spaces.after = '';\r\n            warn(`the >>> and /deep/ combinators have been deprecated. ` +\r\n                `Use :deep() instead.`);\r\n            return false;\r\n        }\r\n        if (n.type === 'pseudo') {\r\n            const { value } = n;\r\n            // deep: inject [id] attribute at the node before the ::v-deep\r\n            // combinator.\r\n            if (value === ':deep' || value === '::v-deep') {\r\n                if (n.nodes.length) {\r\n                    // .foo ::v-deep(.bar) -> .foo[xxxxxxx] .bar\r\n                    // replace the current node with ::v-deep's inner selector\r\n                    let last = n;\r\n                    n.nodes[0].each(ss => {\r\n                        selector.insertAfter(last, ss);\r\n                        last = ss;\r\n                    });\r\n                    // insert a space combinator before if it doesn't already have one\r\n                    const prev = selector.at(selector.index(n) - 1);\r\n                    if (!prev || !isSpaceCombinator(prev)) {\r\n                        selector.insertAfter(n, selectorParser.combinator({\r\n                            value: ' '\r\n                        }));\r\n                    }\r\n                    selector.removeChild(n);\r\n                }\r\n                else {\r\n                    // DEPRECATED usage\r\n                    // .foo ::v-deep .bar -> .foo[xxxxxxx] .bar\r\n                    warn(`::v-deep usage as a combinator has ` +\r\n                        `been deprecated. Use :deep(<inner-selector>) instead.`);\r\n                    const prev = selector.at(selector.index(n) - 1);\r\n                    if (prev && isSpaceCombinator(prev)) {\r\n                        selector.removeChild(prev);\r\n                    }\r\n                    selector.removeChild(n);\r\n                }\r\n                return false;\r\n            }\r\n            // slot: use selector inside `::v-slotted` and inject [id + '-s']\r\n            // instead.\r\n            // ::v-slotted(.foo) -> .foo[xxxxxxx-s]\r\n            if (value === ':slotted' || value === '::v-slotted') {\r\n                rewriteSelector(id, n.nodes[0], selectorRoot, true /* slotted */);\r\n                let last = n;\r\n                n.nodes[0].each(ss => {\r\n                    selector.insertAfter(last, ss);\r\n                    last = ss;\r\n                });\r\n                // selector.insertAfter(n, n.nodes[0])\r\n                selector.removeChild(n);\r\n                // since slotted attribute already scopes the selector there's no\r\n                // need for the non-slot attribute.\r\n                shouldInject = false;\r\n                return false;\r\n            }\r\n            // global: replace with inner selector and do not inject [id].\r\n            // ::v-global(.foo) -> .foo\r\n            if (value === ':global' || value === '::v-global') {\r\n                selectorRoot.insertAfter(selector, n.nodes[0]);\r\n                selectorRoot.removeChild(selector);\r\n                return false;\r\n            }\r\n        }\r\n        if (n.type !== 'pseudo' && n.type !== 'combinator') {\r\n            node = n;\r\n        }\r\n    });\r\n    if (node) {\r\n        node.spaces.after = '';\r\n    }\r\n    else {\r\n        // For deep selectors & standalone pseudo selectors,\r\n        // the attribute selectors are prepended rather than appended.\r\n        // So all leading spaces must be eliminated to avoid problems.\r\n        selector.first.spaces.before = '';\r\n    }\r\n    if (shouldInject) {\r\n        const idToAdd = slotted ? id + '-s' : id;\r\n        selector.insertAfter(\r\n        // If node is null it means we need to inject [id] at the start\r\n        // insertAfter can handle `null` here\r\n        node, selectorParser.attribute({\r\n            attribute: idToAdd,\r\n            value: idToAdd,\r\n            raws: {},\r\n            quoteMark: `\"`\r\n        }));\r\n    }\r\n}\r\nfunction isSpaceCombinator(node) {\r\n    return node.type === 'combinator' && /^\\s+$/.test(node.value);\r\n}\r\nscopedPlugin.postcss = true;\n\nvar SourceMapConsumer$7 = sourceMap.SourceMapConsumer;\nvar SourceMapGenerator$9 = sourceMap.SourceMapGenerator;\n\nvar mergeSourceMap = merge$1;\n\n/**\n * Merge old source map and new source map and return merged.\n * If old or new source map value is falsy, return another one as it is.\n *\n * @param {object|string} [oldMap] old source map object\n * @param {object|string} [newmap] new source map object\n * @return {object|undefined} merged source map object, or undefined when both old and new source map are undefined\n */\nfunction merge$1(oldMap, newMap) {\n  if (!oldMap) return newMap\n  if (!newMap) return oldMap\n\n  var oldMapConsumer = new SourceMapConsumer$7(oldMap);\n  var newMapConsumer = new SourceMapConsumer$7(newMap);\n  var mergedMapGenerator = new SourceMapGenerator$9();\n\n  // iterate on new map and overwrite original position of new map with one of old map\n  newMapConsumer.eachMapping(function(m) {\n    // pass when `originalLine` is null.\n    // It occurs in case that the node does not have origin in original code.\n    if (m.originalLine == null) return\n\n    var origPosInOldMap = oldMapConsumer.originalPositionFor({\n      line: m.originalLine,\n      column: m.originalColumn\n    });\n\n    if (origPosInOldMap.source == null) return\n\n    mergedMapGenerator.addMapping({\n      original: {\n        line: origPosInOldMap.line,\n        column: origPosInOldMap.column\n      },\n      generated: {\n        line: m.generatedLine,\n        column: m.generatedColumn\n      },\n      source: origPosInOldMap.source,\n      name: origPosInOldMap.name\n    });\n  });\n\n  var consumers = [oldMapConsumer, newMapConsumer];\n  consumers.forEach(function(consumer) {\n    consumer.sources.forEach(function(sourceFile) {\n      mergedMapGenerator._sources.add(sourceFile);\n      var sourceContent = consumer.sourceContentFor(sourceFile);\n      if (sourceContent != null) {\n        mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\n      }\n    });\n  });\n\n  mergedMapGenerator._sourceRoot = oldMap.sourceRoot;\n  mergedMapGenerator._file = oldMap.file;\n\n  return JSON.parse(mergedMapGenerator.toString())\n}\n\n// .scss/.sass processor\r\nconst scss = (source, map, options, load = require) => {\r\n    const nodeSass = load('sass');\r\n    const finalOptions = Object.assign(Object.assign({}, options), { data: getSource(source, options.filename, options.additionalData), file: options.filename, outFile: options.filename, sourceMap: !!map });\r\n    try {\r\n        const result = nodeSass.renderSync(finalOptions);\r\n        const dependencies = result.stats.includedFiles;\r\n        if (map) {\r\n            return {\r\n                code: result.css.toString(),\r\n                map: mergeSourceMap(map, JSON.parse(result.map.toString())),\r\n                errors: [],\r\n                dependencies\r\n            };\r\n        }\r\n        return { code: result.css.toString(), errors: [], dependencies };\r\n    }\r\n    catch (e) {\r\n        return { code: '', errors: [e], dependencies: [] };\r\n    }\r\n};\r\nconst sass = (source, map, options, load) => scss(source, map, Object.assign(Object.assign({}, options), { indentedSyntax: true }), load);\r\n// .less\r\nconst less = (source, map, options, load = require) => {\r\n    const nodeLess = load('less');\r\n    let result;\r\n    let error = null;\r\n    nodeLess.render(getSource(source, options.filename, options.additionalData), Object.assign(Object.assign({}, options), { syncImport: true }), (err, output) => {\r\n        error = err;\r\n        result = output;\r\n    });\r\n    if (error)\r\n        return { code: '', errors: [error], dependencies: [] };\r\n    const dependencies = result.imports;\r\n    if (map) {\r\n        return {\r\n            code: result.css.toString(),\r\n            map: mergeSourceMap(map, result.map),\r\n            errors: [],\r\n            dependencies: dependencies\r\n        };\r\n    }\r\n    return {\r\n        code: result.css.toString(),\r\n        errors: [],\r\n        dependencies: dependencies\r\n    };\r\n};\r\n// .styl\r\nconst styl = (source, map, options, load = require) => {\r\n    const nodeStylus = load('stylus');\r\n    try {\r\n        const ref = nodeStylus(source);\r\n        Object.keys(options).forEach(key => ref.set(key, options[key]));\r\n        if (map)\r\n            ref.set('sourcemap', { inline: false, comment: false });\r\n        const result = ref.render();\r\n        const dependencies = ref.deps();\r\n        if (map) {\r\n            return {\r\n                code: result,\r\n                map: mergeSourceMap(map, ref.sourcemap),\r\n                errors: [],\r\n                dependencies\r\n            };\r\n        }\r\n        return { code: result, errors: [], dependencies };\r\n    }\r\n    catch (e) {\r\n        return { code: '', errors: [e], dependencies: [] };\r\n    }\r\n};\r\nfunction getSource(source, filename, additionalData) {\r\n    if (!additionalData)\r\n        return source;\r\n    if (isFunction(additionalData)) {\r\n        return additionalData(source, filename);\r\n    }\r\n    return additionalData + source;\r\n}\r\nconst processors = {\r\n    less,\r\n    sass,\r\n    scss,\r\n    styl,\r\n    stylus: styl\r\n};\n\nfunction compileStyle(options) {\r\n    return doCompileStyle(Object.assign(Object.assign({}, options), { isAsync: false }));\r\n}\r\nfunction compileStyleAsync(options) {\r\n    return doCompileStyle(Object.assign(Object.assign({}, options), { isAsync: true }));\r\n}\r\nfunction doCompileStyle(options) {\r\n    const { filename, id, scoped = false, trim = true, isProd = false, modules = false, modulesOptions = {}, preprocessLang, postcssOptions, postcssPlugins } = options;\r\n    const preprocessor = preprocessLang && processors[preprocessLang];\r\n    const preProcessedSource = preprocessor && preprocess$1(options, preprocessor);\r\n    const map = preProcessedSource\r\n        ? preProcessedSource.map\r\n        : options.inMap || options.map;\r\n    const source = preProcessedSource ? preProcessedSource.code : options.source;\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    const longId = `data-v-${shortId}`;\r\n    const plugins = (postcssPlugins || []).slice();\r\n    plugins.unshift(cssVarsPlugin({ id: shortId, isProd }));\r\n    if (trim) {\r\n        plugins.push(trimPlugin());\r\n    }\r\n    if (scoped) {\r\n        plugins.push(scopedPlugin(longId));\r\n    }\r\n    let cssModules;\r\n    if (modules) {\r\n        {\r\n            throw new Error('[@vue/compiler-sfc] `modules` option is not supported in the browser build.');\r\n        }\r\n    }\r\n    const postCSSOptions = Object.assign(Object.assign({}, postcssOptions), { to: filename, from: filename });\r\n    if (map) {\r\n        postCSSOptions.map = {\r\n            inline: false,\r\n            annotation: false,\r\n            prev: map\r\n        };\r\n    }\r\n    let result;\r\n    let code;\r\n    let outMap;\r\n    // stylus output include plain css. so need remove the repeat item\r\n    const dependencies = new Set(preProcessedSource ? preProcessedSource.dependencies : []);\r\n    // sass has filename self when provided filename option\r\n    dependencies.delete(filename);\r\n    const errors = [];\r\n    if (preProcessedSource && preProcessedSource.errors.length) {\r\n        errors.push(...preProcessedSource.errors);\r\n    }\r\n    const recordPlainCssDependencies = (messages) => {\r\n        messages.forEach(msg => {\r\n            if (msg.type === 'dependency') {\r\n                // postcss output path is absolute position path\r\n                dependencies.add(msg.file);\r\n            }\r\n        });\r\n        return dependencies;\r\n    };\r\n    try {\r\n        result = postcss_1(plugins).process(source, postCSSOptions);\r\n        // In async mode, return a promise.\r\n        if (options.isAsync) {\r\n            return result\r\n                .then(result => ({\r\n                code: result.css || '',\r\n                map: result.map && result.map.toJSON(),\r\n                errors,\r\n                modules: cssModules,\r\n                rawResult: result,\r\n                dependencies: recordPlainCssDependencies(result.messages)\r\n            }))\r\n                .catch(error => ({\r\n                code: '',\r\n                map: undefined,\r\n                errors: [...errors, error],\r\n                rawResult: undefined,\r\n                dependencies\r\n            }));\r\n        }\r\n        recordPlainCssDependencies(result.messages);\r\n        // force synchronous transform (we know we only have sync plugins)\r\n        code = result.css;\r\n        outMap = result.map;\r\n    }\r\n    catch (e) {\r\n        errors.push(e);\r\n    }\r\n    return {\r\n        code: code || ``,\r\n        map: outMap && outMap.toJSON(),\r\n        errors,\r\n        rawResult: result,\r\n        dependencies\r\n    };\r\n}\r\nfunction preprocess$1(options, preprocessor) {\r\n    if (!options.preprocessCustomRequire) {\r\n        throw new Error(`[@vue/compiler-sfc] Style preprocessing in the browser build must ` +\r\n            `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n            `version of the preprocessor.`);\r\n    }\r\n    return preprocessor(options.source, options.inMap || options.map, Object.assign({ filename: options.filename }, options.preprocessOptions), options.preprocessCustomRequire);\r\n}\n\n// API\r\nconst walk$2 = walk$1;\n\nexport { MagicString, parse_1 as babelParse, compileScript, compileStyle, compileStyleAsync, compileTemplate, extractIdentifiers, generateCodeFrame, isInDestructureAssignment, isStaticProperty, parse$4 as parse, rewriteDefault, shouldTransform as shouldTransformRef, transform$1 as transformRef, transformAST as transformRefAST, walk$2 as walk, walkIdentifiers };\n"],
  "mappings": "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AAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI;AACj8D,IAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GA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AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;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Aa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AAAA,EACb,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EA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",
  "names": ["map", "list", "pad", "length", "string", "val", "error", "tag", "isComponent", "input", "plugin", "node", "comment", "errors", "base", "id", "n", "ScopeHandler", "parser", "range", "list2", "bodyNode", "declaration", "node2", "parse", "result", "jsx", "arrowExpression", "init", "object", "parseElement", "types", "isString", "last", "left", "expr", "startsExpr", "type", "tokenIsKeyword", "isPrivate", "tokenTypes", "path", "config", "match", "loc", "root", "i", "returnType", "hoistStatic", "urlParse", "normalize", "isAbsolute", "join", "relative", "sourceFile", "sourceMap", "version", "SourceMapConsumer_parseMappings", "needle", "section", "indent", "prefix", "postfix", "isReferenced", "source", "children", "props", "advance", "name", "walk", "seen", "hash", "fill", "toString", "compare", "read", "write", "byteLength", "BitSet", "has", "Chunk", "SourceMap", "from", "Mappings", "MagicString", "appendLeft", "appendRight", "clone", "replacer", "prependLeft", "prependRight", "slice", "trimEnd", "trimStart", "trim", "e", "inherits", "inspect", "x", "warned", "add", "sep", "self", "index", "exp", "binding", "isVoidTag", "isFragment", "exhaustiveCheck", "end", "registerBinding", "snip", "parentStack", "scriptAst", "s", "startOffset", "endOffset", "options", "start", "isEmpty", "escape", "processor", "stringifier", "base64VLQ_encode", "base64VLQ_decode", "ArraySet_fromArray", "ArraySet_size", "ArraySet_add", "ArraySet_has", "ArraySet_indexOf", "ArraySet_at", "ArraySet_toArray", "MappingList_forEach", "MappingList_add", "MappingList_toArray", "SourceMapGenerator_fromSourceMap", "SourceMapGenerator_addMapping", "SourceMapGenerator_setSourceContent", "SourceMapGenerator_applySourceMap", "SourceMapGenerator_validateMapping", "SourceMapGenerator_serializeMappings", "SourceMapGenerator_generateSourcesContent", "SourceMapGenerator_toJSON", "SourceMapGenerator_toString", "swap", "randomIntInRange", "doQuickSort", "comparator", "SourceMapConsumer_charIsMappingSeparator", "SourceMapConsumer_eachMapping", "SourceMapConsumer_allGeneratedPositionsFor", "SourceMapConsumer_fromSourceMap", "SourceMapConsumer_findMapping", "SourceMapConsumer_computeColumnSpans", "SourceMapConsumer_originalPositionFor", "BasicSourceMapConsumer_hasContentsOfAllSources", "SourceMapConsumer_sourceContentFor", "SourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_originalPositionFor", "IndexedSourceMapConsumer_hasContentsOfAllSources", "IndexedSourceMapConsumer_sourceContentFor", "IndexedSourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_parseMappings", "SourceNode_fromStringWithSourceMap", "SourceNode_add", "SourceNode_prepend", "SourceNode_walk", "SourceNode_join", "SourceNode_replaceRight", "SourceNode_setSourceContent", "SourceNode_walkSourceContents", "SourceNode_toString", "SourceNode_toStringWithSourceMap", "lastLine", "stringify", "selector", "warnOnce", "split", "parser$1", "filter", "cloneNode", "Node", "remove", "_getRequireWildcardCache", "_setPrototypeOf", "o", "p", "Container", "append", "prepend", "Root", "Selector", "merge", "cssesc", "ClassName", "Comment", "ID", "Namespace", "namespace", "Tag", "String", "Pseudo", "Attribute", "concat", "Universal", "Combinator", "Nesting", "equals", "combinator", "tokenize", "getSource", "Parser", "rule", "attribute", "nesting", "pseudo", "universal", "current", "Processor", "noop", "resolve", "transform", "process", "className"]
}
